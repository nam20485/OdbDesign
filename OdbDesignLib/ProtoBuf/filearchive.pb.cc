// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: filearchive.proto
// Protobuf C++ Version: 5.29.2

#include "filearchive.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {
              template <typename>
PROTOBUF_CONSTEXPR FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FileArchive_SymbolsDirectoriesByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileArchive_SymbolsDirectoriesByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileArchive_SymbolsDirectoriesByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileArchive_SymbolsDirectoriesByNameEntry_DoNotUseDefaultTypeInternal _FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR FileArchive_StepsByNameEntry_DoNotUse::FileArchive_StepsByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : FileArchive_StepsByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : FileArchive_StepsByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FileArchive_StepsByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileArchive_StepsByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileArchive_StepsByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FileArchive_StepsByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileArchive_StepsByNameEntry_DoNotUseDefaultTypeInternal _FileArchive_StepsByNameEntry_DoNotUse_default_instance_;

inline constexpr FileArchive::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stepsbyname_{},
        symbolsdirectoriesbyname_{},
        productname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        miscinfofile_{nullptr},
        matrixfile_{nullptr},
        standardfontsfile_{nullptr},
        miscattrlistfile_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR FileArchive::FileArchive(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FileArchiveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileArchiveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileArchiveDefaultTypeInternal() {}
  union {
    FileArchive _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileArchiveDefaultTypeInternal _FileArchive_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_filearchive_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_filearchive_2eproto = nullptr;
const ::uint32_t
    TableStruct_filearchive_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.stepsbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.miscinfofile_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.matrixfile_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.standardfontsfile_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.symbolsdirectoriesbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.miscattrlistfile_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.productname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FileArchive, _impl_.filename_),
        ~0u,
        2,
        3,
        4,
        ~0u,
        5,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse)},
        {12, 22, -1, sizeof(::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse)},
        {24, 40, -1, sizeof(::Odb::Lib::Protobuf::FileArchive)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_FileArchive_StepsByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_FileArchive_default_instance_._instance,
};
const char descriptor_table_protodef_filearchive_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021filearchive.proto\022\020Odb.Lib.Protobuf\032\023s"
    "tepdirectory.proto\032\022miscinfofile.proto\032\020"
    "matrixfile.proto\032\027standardfontsfile.prot"
    "o\032\026symbolsdirectory.proto\032\022attrlistfile."
    "proto\"\372\005\n\013FileArchive\022C\n\013stepsByName\030\001 \003"
    "(\0132..Odb.Lib.Protobuf.FileArchive.StepsB"
    "yNameEntry\0229\n\014miscInfoFile\030\002 \001(\0132\036.Odb.L"
    "ib.Protobuf.MiscInfoFileH\000\210\001\001\0225\n\nmatrixF"
    "ile\030\003 \001(\0132\034.Odb.Lib.Protobuf.MatrixFileH"
    "\001\210\001\001\022C\n\021standardFontsFile\030\004 \001(\0132#.Odb.Li"
    "b.Protobuf.StandardFontsFileH\002\210\001\001\022]\n\030sym"
    "bolsDirectoriesByName\030\005 \003(\0132;.Odb.Lib.Pr"
    "otobuf.FileArchive.SymbolsDirectoriesByN"
    "ameEntry\022=\n\020miscAttrListFile\030\006 \001(\0132\036.Odb"
    ".Lib.Protobuf.AttrListFileH\003\210\001\001\022\030\n\013produ"
    "ctName\030\007 \001(\tH\004\210\001\001\022\025\n\010fileName\030\010 \001(\tH\005\210\001\001"
    "\032S\n\020StepsByNameEntry\022\013\n\003key\030\001 \001(\t\022.\n\005val"
    "ue\030\002 \001(\0132\037.Odb.Lib.Protobuf.StepDirector"
    "y:\0028\001\032c\n\035SymbolsDirectoriesByNameEntry\022\013"
    "\n\003key\030\001 \001(\t\0221\n\005value\030\002 \001(\0132\".Odb.Lib.Pro"
    "tobuf.SymbolsDirectory:\0028\001B\017\n\r_miscInfoF"
    "ileB\r\n\013_matrixFileB\024\n\022_standardFontsFile"
    "B\023\n\021_miscAttrListFileB\016\n\014_productNameB\013\n"
    "\t_fileNameb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_filearchive_2eproto_deps[6] =
    {
        &::descriptor_table_attrlistfile_2eproto,
        &::descriptor_table_matrixfile_2eproto,
        &::descriptor_table_miscinfofile_2eproto,
        &::descriptor_table_standardfontsfile_2eproto,
        &::descriptor_table_stepdirectory_2eproto,
        &::descriptor_table_symbolsdirectory_2eproto,
};
static ::absl::once_flag descriptor_table_filearchive_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_filearchive_2eproto = {
    false,
    false,
    938,
    descriptor_table_protodef_filearchive_2eproto,
    "filearchive.proto",
    &descriptor_table_filearchive_2eproto_once,
    descriptor_table_filearchive_2eproto_deps,
    6,
    3,
    schemas,
    file_default_instances,
    TableStruct_filearchive_2eproto::offsets,
    file_level_enum_descriptors_filearchive_2eproto,
    file_level_service_descriptors_filearchive_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              FileArchive_StepsByNameEntry_DoNotUse::FileArchive_StepsByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              FileArchive_StepsByNameEntry_DoNotUse::FileArchive_StepsByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              FileArchive_StepsByNameEntry_DoNotUse::FileArchive_StepsByNameEntry_DoNotUse() : SuperType() {}
              FileArchive_StepsByNameEntry_DoNotUse::FileArchive_StepsByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* FileArchive_StepsByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) FileArchive_StepsByNameEntry_DoNotUse(arena);
              }
              constexpr auto FileArchive_StepsByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FileArchive_StepsByNameEntry_DoNotUse),
                                                          alignof(FileArchive_StepsByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull FileArchive_StepsByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_FileArchive_StepsByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &FileArchive_StepsByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<FileArchive_StepsByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &FileArchive_StepsByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &FileArchive_StepsByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &FileArchive_StepsByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_filearchive_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* FileArchive_StepsByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> FileArchive_StepsByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FileArchive_StepsByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.StepDirectory value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.StepDirectory value = 2;
    {PROTOBUF_FIELD_OFFSET(FileArchive_StepsByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepDirectory>()},
  }}, {{
    "\55\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.FileArchive.StepsByNameEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse() : SuperType() {}
              FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse(arena);
              }
              constexpr auto FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse),
                                                          alignof(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_filearchive_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 70, 2> FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.SymbolsDirectory value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.SymbolsDirectory value = 2;
    {PROTOBUF_FIELD_OFFSET(FileArchive_SymbolsDirectoriesByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::SymbolsDirectory>()},
  }}, {{
    "\72\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.FileArchive.SymbolsDirectoriesByNameEntry"
    "key"
  }},
};

// ===================================================================

class FileArchive::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FileArchive>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FileArchive, _impl_._has_bits_);
};

void FileArchive::clear_stepsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stepsbyname_.Clear();
}
void FileArchive::clear_miscinfofile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.miscinfofile_ != nullptr) _impl_.miscinfofile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void FileArchive::clear_matrixfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.matrixfile_ != nullptr) _impl_.matrixfile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void FileArchive::clear_standardfontsfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.standardfontsfile_ != nullptr) _impl_.standardfontsfile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void FileArchive::clear_symbolsdirectoriesbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbolsdirectoriesbyname_.Clear();
}
void FileArchive::clear_miscattrlistfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.miscattrlistfile_ != nullptr) _impl_.miscattrlistfile_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
FileArchive::FileArchive(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.FileArchive)
}
inline PROTOBUF_NDEBUG_INLINE FileArchive::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::FileArchive& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stepsbyname_{visibility, arena, from.stepsbyname_},
        symbolsdirectoriesbyname_{visibility, arena, from.symbolsdirectoriesbyname_},
        productname_(arena, from.productname_),
        filename_(arena, from.filename_) {}

FileArchive::FileArchive(
    ::google::protobuf::Arena* arena,
    const FileArchive& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FileArchive* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.miscinfofile_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::MiscInfoFile>(
                              arena, *from._impl_.miscinfofile_)
                        : nullptr;
  _impl_.matrixfile_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::MatrixFile>(
                              arena, *from._impl_.matrixfile_)
                        : nullptr;
  _impl_.standardfontsfile_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::StandardFontsFile>(
                              arena, *from._impl_.standardfontsfile_)
                        : nullptr;
  _impl_.miscattrlistfile_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::AttrListFile>(
                              arena, *from._impl_.miscattrlistfile_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.FileArchive)
}
inline PROTOBUF_NDEBUG_INLINE FileArchive::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stepsbyname_{visibility, arena},
        symbolsdirectoriesbyname_{visibility, arena},
        productname_(arena),
        filename_(arena) {}

inline void FileArchive::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, miscinfofile_),
           0,
           offsetof(Impl_, miscattrlistfile_) -
               offsetof(Impl_, miscinfofile_) +
               sizeof(Impl_::miscattrlistfile_));
}
FileArchive::~FileArchive() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.FileArchive)
  SharedDtor(*this);
}
inline void FileArchive::SharedDtor(MessageLite& self) {
  FileArchive& this_ = static_cast<FileArchive&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.productname_.Destroy();
  this_._impl_.filename_.Destroy();
  delete this_._impl_.miscinfofile_;
  delete this_._impl_.matrixfile_;
  delete this_._impl_.standardfontsfile_;
  delete this_._impl_.miscattrlistfile_;
  this_._impl_.~Impl_();
}

inline void* FileArchive::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FileArchive(arena);
}
constexpr auto FileArchive::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.stepsbyname_) +
          decltype(FileArchive::_impl_.stepsbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.stepsbyname_) +
          decltype(FileArchive::_impl_.stepsbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.symbolsdirectoriesbyname_) +
          decltype(FileArchive::_impl_.symbolsdirectoriesbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.symbolsdirectoriesbyname_) +
          decltype(FileArchive::_impl_.symbolsdirectoriesbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FileArchive), alignof(FileArchive), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FileArchive::PlacementNew_,
                                 sizeof(FileArchive),
                                 alignof(FileArchive));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FileArchive::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FileArchive_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FileArchive::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FileArchive>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FileArchive::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FileArchive>(), &FileArchive::ByteSizeLong,
            &FileArchive::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FileArchive, _impl_._cached_size_),
        false,
    },
    &FileArchive::kDescriptorMethods,
    &descriptor_table_filearchive_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FileArchive::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 8, 99, 2> FileArchive::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FileArchive, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FileArchive>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string fileName = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 1, 0, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.filename_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.MiscInfoFile miscInfoFile = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 0, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscinfofile_)}},
    // optional .Odb.Lib.Protobuf.MatrixFile matrixFile = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 1, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.matrixfile_)}},
    // optional .Odb.Lib.Protobuf.StandardFontsFile standardFontsFile = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 2, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.standardfontsfile_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.AttrListFile miscAttrListFile = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 5, 3, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscattrlistfile_)}},
    // optional string productName = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.productname_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .Odb.Lib.Protobuf.StepDirectory> stepsByName = 1;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.stepsbyname_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional .Odb.Lib.Protobuf.MiscInfoFile miscInfoFile = 2;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscinfofile_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .Odb.Lib.Protobuf.MatrixFile matrixFile = 3;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.matrixfile_), _Internal::kHasBitsOffset + 3, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .Odb.Lib.Protobuf.StandardFontsFile standardFontsFile = 4;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.standardfontsfile_), _Internal::kHasBitsOffset + 4, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.SymbolsDirectory> symbolsDirectoriesByName = 5;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.symbolsdirectoriesbyname_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional .Odb.Lib.Protobuf.AttrListFile miscAttrListFile = 6;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscattrlistfile_), _Internal::kHasBitsOffset + 5, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string productName = 7;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.productname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string fileName = 8;
    {PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.filename_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::MiscInfoFile>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::MatrixFile>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::AttrListFile>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FileArchive()._impl_.stepsbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepDirectory>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FileArchive()._impl_.symbolsdirectoriesbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::SymbolsDirectory>()},
  }}, {{
    "\34\13\0\0\0\30\0\13\10\0\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.FileArchive"
    "stepsByName"
    "symbolsDirectoriesByName"
    "productName"
    "fileName"
  }},
};

PROTOBUF_NOINLINE void FileArchive::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.FileArchive)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stepsbyname_.Clear();
  _impl_.symbolsdirectoriesbyname_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.productname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.miscinfofile_ != nullptr);
      _impl_.miscinfofile_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.matrixfile_ != nullptr);
      _impl_.matrixfile_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.standardfontsfile_ != nullptr);
      _impl_.standardfontsfile_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.miscattrlistfile_ != nullptr);
      _impl_.miscattrlistfile_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FileArchive::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FileArchive& this_ = static_cast<const FileArchive&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FileArchive::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FileArchive& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.FileArchive)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, .Odb.Lib.Protobuf.StepDirectory> stepsByName = 1;
          if (!this_._internal_stepsbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::StepDirectory>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::StepDirectory,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_stepsbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.stepsByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.stepsByName");
              }
            }
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.MiscInfoFile miscInfoFile = 2;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.miscinfofile_, this_._impl_.miscinfofile_->GetCachedSize(), target,
                stream);
          }

          // optional .Odb.Lib.Protobuf.MatrixFile matrixFile = 3;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.matrixfile_, this_._impl_.matrixfile_->GetCachedSize(), target,
                stream);
          }

          // optional .Odb.Lib.Protobuf.StandardFontsFile standardFontsFile = 4;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.standardfontsfile_, this_._impl_.standardfontsfile_->GetCachedSize(), target,
                stream);
          }

          // map<string, .Odb.Lib.Protobuf.SymbolsDirectory> symbolsDirectoriesByName = 5;
          if (!this_._internal_symbolsdirectoriesbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::SymbolsDirectory>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::SymbolsDirectory,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_symbolsdirectoriesbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.symbolsDirectoriesByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    5, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.symbolsDirectoriesByName");
              }
            }
          }

          // optional .Odb.Lib.Protobuf.AttrListFile miscAttrListFile = 6;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.miscattrlistfile_, this_._impl_.miscattrlistfile_->GetCachedSize(), target,
                stream);
          }

          // optional string productName = 7;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_productname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.productName");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional string fileName = 8;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_filename();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FileArchive.fileName");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.FileArchive)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FileArchive::ByteSizeLong(const MessageLite& base) {
          const FileArchive& this_ = static_cast<const FileArchive&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FileArchive::ByteSizeLong() const {
          const FileArchive& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.FileArchive)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .Odb.Lib.Protobuf.StepDirectory> stepsByName = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_stepsbyname_size());
              for (const auto& entry : this_._internal_stepsbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::StepDirectory,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, .Odb.Lib.Protobuf.SymbolsDirectory> symbolsDirectoriesByName = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_symbolsdirectoriesbyname_size());
              for (const auto& entry : this_._internal_symbolsdirectoriesbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::SymbolsDirectory,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional string productName = 7;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_productname());
            }
            // optional string fileName = 8;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_filename());
            }
            // optional .Odb.Lib.Protobuf.MiscInfoFile miscInfoFile = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.miscinfofile_);
            }
            // optional .Odb.Lib.Protobuf.MatrixFile matrixFile = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.matrixfile_);
            }
            // optional .Odb.Lib.Protobuf.StandardFontsFile standardFontsFile = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.standardfontsfile_);
            }
            // optional .Odb.Lib.Protobuf.AttrListFile miscAttrListFile = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.miscattrlistfile_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FileArchive::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FileArchive*>(&to_msg);
  auto& from = static_cast<const FileArchive&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.FileArchive)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stepsbyname_.MergeFrom(from._impl_.stepsbyname_);
  _this->_impl_.symbolsdirectoriesbyname_.MergeFrom(from._impl_.symbolsdirectoriesbyname_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_productname(from._internal_productname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.miscinfofile_ != nullptr);
      if (_this->_impl_.miscinfofile_ == nullptr) {
        _this->_impl_.miscinfofile_ =
            ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::MiscInfoFile>(arena, *from._impl_.miscinfofile_);
      } else {
        _this->_impl_.miscinfofile_->MergeFrom(*from._impl_.miscinfofile_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.matrixfile_ != nullptr);
      if (_this->_impl_.matrixfile_ == nullptr) {
        _this->_impl_.matrixfile_ =
            ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::MatrixFile>(arena, *from._impl_.matrixfile_);
      } else {
        _this->_impl_.matrixfile_->MergeFrom(*from._impl_.matrixfile_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.standardfontsfile_ != nullptr);
      if (_this->_impl_.standardfontsfile_ == nullptr) {
        _this->_impl_.standardfontsfile_ =
            ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::StandardFontsFile>(arena, *from._impl_.standardfontsfile_);
      } else {
        _this->_impl_.standardfontsfile_->MergeFrom(*from._impl_.standardfontsfile_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.miscattrlistfile_ != nullptr);
      if (_this->_impl_.miscattrlistfile_ == nullptr) {
        _this->_impl_.miscattrlistfile_ =
            ::google::protobuf::Message::CopyConstruct<::Odb::Lib::Protobuf::AttrListFile>(arena, *from._impl_.miscattrlistfile_);
      } else {
        _this->_impl_.miscattrlistfile_->MergeFrom(*from._impl_.miscattrlistfile_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FileArchive::CopyFrom(const FileArchive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.FileArchive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FileArchive::InternalSwap(FileArchive* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stepsbyname_.InternalSwap(&other->_impl_.stepsbyname_);
  _impl_.symbolsdirectoriesbyname_.InternalSwap(&other->_impl_.symbolsdirectoriesbyname_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.productname_, &other->_impl_.productname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscattrlistfile_)
      + sizeof(FileArchive::_impl_.miscattrlistfile_)
      - PROTOBUF_FIELD_OFFSET(FileArchive, _impl_.miscinfofile_)>(
          reinterpret_cast<char*>(&_impl_.miscinfofile_),
          reinterpret_cast<char*>(&other->_impl_.miscinfofile_));
}

::google::protobuf::Metadata FileArchive::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_filearchive_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
