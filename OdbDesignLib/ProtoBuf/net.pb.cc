// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: net.proto
// Protobuf C++ Version: 5.29.2

#include "net.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {
namespace ProductModel {

inline constexpr Net::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pinconnections_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Net::Net(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetDefaultTypeInternal() {}
  union {
    Net _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetDefaultTypeInternal _Net_default_instance_;
}  // namespace ProductModel
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_net_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_net_2eproto = nullptr;
const ::uint32_t
    TableStruct_net_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ProductModel::Net, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ProductModel::Net, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ProductModel::Net, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ProductModel::Net, _impl_.pinconnections_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ProductModel::Net, _impl_.index_),
        0,
        ~0u,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Odb::Lib::Protobuf::ProductModel::Net)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::ProductModel::_Net_default_instance_._instance,
};
const char descriptor_table_protodef_net_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tnet.proto\022\035Odb.Lib.Protobuf.ProductMod"
    "el\032\023pinconnection.proto\"\205\001\n\003Net\022\021\n\004name\030"
    "\001 \001(\tH\000\210\001\001\022D\n\016pinConnections\030\002 \003(\0132,.Odb"
    ".Lib.Protobuf.ProductModel.PinConnection"
    "\022\022\n\005index\030\003 \001(\rH\001\210\001\001B\007\n\005_nameB\010\n\006_indexb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_net_2eproto_deps[1] =
    {
        &::descriptor_table_pinconnection_2eproto,
};
static ::absl::once_flag descriptor_table_net_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_net_2eproto = {
    false,
    false,
    207,
    descriptor_table_protodef_net_2eproto,
    "net.proto",
    &descriptor_table_net_2eproto_once,
    descriptor_table_net_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_net_2eproto::offsets,
    file_level_enum_descriptors_net_2eproto,
    file_level_service_descriptors_net_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
namespace ProductModel {
// ===================================================================

class Net::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Net>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Net, _impl_._has_bits_);
};

void Net::clear_pinconnections() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pinconnections_.Clear();
}
Net::Net(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.ProductModel.Net)
}
inline PROTOBUF_NDEBUG_INLINE Net::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::ProductModel::Net& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pinconnections_{visibility, arena, from.pinconnections_},
        name_(arena, from.name_) {}

Net::Net(
    ::google::protobuf::Arena* arena,
    const Net& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Net* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.ProductModel.Net)
}
inline PROTOBUF_NDEBUG_INLINE Net::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pinconnections_{visibility, arena},
        name_(arena) {}

inline void Net::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
Net::~Net() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.ProductModel.Net)
  SharedDtor(*this);
}
inline void Net::SharedDtor(MessageLite& self) {
  Net& this_ = static_cast<Net&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Net::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Net(arena);
}
constexpr auto Net::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Net, _impl_.pinconnections_) +
          decltype(Net::_impl_.pinconnections_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Net), alignof(Net), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Net::PlacementNew_,
                                 sizeof(Net),
                                 alignof(Net));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Net::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Net_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Net::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Net>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Net::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Net>(), &Net::ByteSizeLong,
            &Net::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Net, _impl_._cached_size_),
        false,
    },
    &Net::kDescriptorMethods,
    &descriptor_table_net_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Net::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 46, 2> Net::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Net, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ProductModel::Net>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Net, _impl_.name_)}},
    // repeated .Odb.Lib.Protobuf.ProductModel.PinConnection pinConnections = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Net, _impl_.pinconnections_)}},
    // optional uint32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Net, _impl_.index_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(Net, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(Net, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Odb.Lib.Protobuf.ProductModel.PinConnection pinConnections = 2;
    {PROTOBUF_FIELD_OFFSET(Net, _impl_.pinconnections_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 index = 3;
    {PROTOBUF_FIELD_OFFSET(Net, _impl_.index_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ProductModel::PinConnection>()},
  }}, {{
    "\41\4\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.ProductModel.Net"
    "name"
  }},
};

PROTOBUF_NOINLINE void Net::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.ProductModel.Net)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pinconnections_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  _impl_.index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Net::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Net& this_ = static_cast<const Net&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Net::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Net& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.ProductModel.Net)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ProductModel.Net.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .Odb.Lib.Protobuf.ProductModel.PinConnection pinConnections = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pinconnections_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pinconnections().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional uint32 index = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.ProductModel.Net)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Net::ByteSizeLong(const MessageLite& base) {
          const Net& this_ = static_cast<const Net&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Net::ByteSizeLong() const {
          const Net& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.ProductModel.Net)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.ProductModel.PinConnection pinConnections = 2;
            {
              total_size += 1UL * this_._internal_pinconnections_size();
              for (const auto& msg : this_._internal_pinconnections()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional uint32 index = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Net::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Net*>(&to_msg);
  auto& from = static_cast<const Net&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.ProductModel.Net)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pinconnections()->MergeFrom(
      from._internal_pinconnections());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Net::CopyFrom(const Net& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.ProductModel.Net)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Net::InternalSwap(Net* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pinconnections_.InternalSwap(&other->_impl_.pinconnections_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata Net::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ProductModel
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_net_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
