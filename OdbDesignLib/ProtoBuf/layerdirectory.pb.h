// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: layerdirectory.proto
// Protobuf C++ Version: 5.29.2

#ifndef layerdirectory_2eproto_2epb_2eh
#define layerdirectory_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "componentsfile.pb.h"
#include "attrlistfile.pb.h"
#include "featuresfile.pb.h"
#include "toolsfile.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_layerdirectory_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_layerdirectory_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_layerdirectory_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class LayerDirectory;
struct LayerDirectoryDefaultTypeInternal;
extern LayerDirectoryDefaultTypeInternal _LayerDirectory_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {

// ===================================================================


// -------------------------------------------------------------------

class LayerDirectory final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.LayerDirectory) */ {
 public:
  inline LayerDirectory() : LayerDirectory(nullptr) {}
  ~LayerDirectory() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LayerDirectory* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LayerDirectory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LayerDirectory(
      ::google::protobuf::internal::ConstantInitialized);

  inline LayerDirectory(const LayerDirectory& from) : LayerDirectory(nullptr, from) {}
  inline LayerDirectory(LayerDirectory&& from) noexcept
      : LayerDirectory(nullptr, std::move(from)) {}
  inline LayerDirectory& operator=(const LayerDirectory& from) {
    CopyFrom(from);
    return *this;
  }
  inline LayerDirectory& operator=(LayerDirectory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LayerDirectory& default_instance() {
    return *internal_default_instance();
  }
  static inline const LayerDirectory* internal_default_instance() {
    return reinterpret_cast<const LayerDirectory*>(
        &_LayerDirectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LayerDirectory& a, LayerDirectory& b) { a.Swap(&b); }
  inline void Swap(LayerDirectory* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LayerDirectory* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LayerDirectory* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LayerDirectory>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LayerDirectory& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LayerDirectory& from) { LayerDirectory::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LayerDirectory* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.LayerDirectory"; }

 protected:
  explicit LayerDirectory(::google::protobuf::Arena* arena);
  LayerDirectory(::google::protobuf::Arena* arena, const LayerDirectory& from);
  LayerDirectory(::google::protobuf::Arena* arena, LayerDirectory&& from) noexcept
      : LayerDirectory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kPathFieldNumber = 2,
    kComponentsFieldNumber = 3,
    kAttrlistFileFieldNumber = 4,
    kFeatureFileFieldNumber = 5,
    kToolFileFieldNumber = 6,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string path = 2;
  bool has_path() const;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional .Odb.Lib.Protobuf.ComponentsFile components = 3;
  bool has_components() const;
  void clear_components() ;
  const ::Odb::Lib::Protobuf::ComponentsFile& components() const;
  PROTOBUF_NODISCARD ::Odb::Lib::Protobuf::ComponentsFile* release_components();
  ::Odb::Lib::Protobuf::ComponentsFile* mutable_components();
  void set_allocated_components(::Odb::Lib::Protobuf::ComponentsFile* value);
  void unsafe_arena_set_allocated_components(::Odb::Lib::Protobuf::ComponentsFile* value);
  ::Odb::Lib::Protobuf::ComponentsFile* unsafe_arena_release_components();

  private:
  const ::Odb::Lib::Protobuf::ComponentsFile& _internal_components() const;
  ::Odb::Lib::Protobuf::ComponentsFile* _internal_mutable_components();

  public:
  // optional .Odb.Lib.Protobuf.AttrListFile attrlistFile = 4;
  bool has_attrlistfile() const;
  void clear_attrlistfile() ;
  const ::Odb::Lib::Protobuf::AttrListFile& attrlistfile() const;
  PROTOBUF_NODISCARD ::Odb::Lib::Protobuf::AttrListFile* release_attrlistfile();
  ::Odb::Lib::Protobuf::AttrListFile* mutable_attrlistfile();
  void set_allocated_attrlistfile(::Odb::Lib::Protobuf::AttrListFile* value);
  void unsafe_arena_set_allocated_attrlistfile(::Odb::Lib::Protobuf::AttrListFile* value);
  ::Odb::Lib::Protobuf::AttrListFile* unsafe_arena_release_attrlistfile();

  private:
  const ::Odb::Lib::Protobuf::AttrListFile& _internal_attrlistfile() const;
  ::Odb::Lib::Protobuf::AttrListFile* _internal_mutable_attrlistfile();

  public:
  // optional .Odb.Lib.Protobuf.FeaturesFile featureFile = 5;
  bool has_featurefile() const;
  void clear_featurefile() ;
  const ::Odb::Lib::Protobuf::FeaturesFile& featurefile() const;
  PROTOBUF_NODISCARD ::Odb::Lib::Protobuf::FeaturesFile* release_featurefile();
  ::Odb::Lib::Protobuf::FeaturesFile* mutable_featurefile();
  void set_allocated_featurefile(::Odb::Lib::Protobuf::FeaturesFile* value);
  void unsafe_arena_set_allocated_featurefile(::Odb::Lib::Protobuf::FeaturesFile* value);
  ::Odb::Lib::Protobuf::FeaturesFile* unsafe_arena_release_featurefile();

  private:
  const ::Odb::Lib::Protobuf::FeaturesFile& _internal_featurefile() const;
  ::Odb::Lib::Protobuf::FeaturesFile* _internal_mutable_featurefile();

  public:
  // optional .Odb.Lib.Protobuf.ToolsFile toolFile = 6;
  bool has_toolfile() const;
  void clear_toolfile() ;
  const ::Odb::Lib::Protobuf::ToolsFile& toolfile() const;
  PROTOBUF_NODISCARD ::Odb::Lib::Protobuf::ToolsFile* release_toolfile();
  ::Odb::Lib::Protobuf::ToolsFile* mutable_toolfile();
  void set_allocated_toolfile(::Odb::Lib::Protobuf::ToolsFile* value);
  void unsafe_arena_set_allocated_toolfile(::Odb::Lib::Protobuf::ToolsFile* value);
  ::Odb::Lib::Protobuf::ToolsFile* unsafe_arena_release_toolfile();

  private:
  const ::Odb::Lib::Protobuf::ToolsFile& _internal_toolfile() const;
  ::Odb::Lib::Protobuf::ToolsFile* _internal_mutable_toolfile();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.LayerDirectory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LayerDirectory& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::Odb::Lib::Protobuf::ComponentsFile* components_;
    ::Odb::Lib::Protobuf::AttrListFile* attrlistfile_;
    ::Odb::Lib::Protobuf::FeaturesFile* featurefile_;
    ::Odb::Lib::Protobuf::ToolsFile* toolfile_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_layerdirectory_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LayerDirectory

// optional string name = 1;
inline bool LayerDirectory::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void LayerDirectory::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& LayerDirectory::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LayerDirectory::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.LayerDirectory.name)
}
inline std::string* LayerDirectory::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.name)
  return _s;
}
inline const std::string& LayerDirectory::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void LayerDirectory::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* LayerDirectory::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* LayerDirectory::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void LayerDirectory::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.name)
}

// optional string path = 2;
inline bool LayerDirectory::has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void LayerDirectory::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& LayerDirectory::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LayerDirectory::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.LayerDirectory.path)
}
inline std::string* LayerDirectory::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.path)
  return _s;
}
inline const std::string& LayerDirectory::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void LayerDirectory::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* LayerDirectory::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* LayerDirectory::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.path)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void LayerDirectory::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.path)
}

// optional .Odb.Lib.Protobuf.ComponentsFile components = 3;
inline bool LayerDirectory::has_components() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.components_ != nullptr);
  return value;
}
inline const ::Odb::Lib::Protobuf::ComponentsFile& LayerDirectory::_internal_components() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Odb::Lib::Protobuf::ComponentsFile* p = _impl_.components_;
  return p != nullptr ? *p : reinterpret_cast<const ::Odb::Lib::Protobuf::ComponentsFile&>(::Odb::Lib::Protobuf::_ComponentsFile_default_instance_);
}
inline const ::Odb::Lib::Protobuf::ComponentsFile& LayerDirectory::components() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.components)
  return _internal_components();
}
inline void LayerDirectory::unsafe_arena_set_allocated_components(::Odb::Lib::Protobuf::ComponentsFile* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.components_);
  }
  _impl_.components_ = reinterpret_cast<::Odb::Lib::Protobuf::ComponentsFile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Odb.Lib.Protobuf.LayerDirectory.components)
}
inline ::Odb::Lib::Protobuf::ComponentsFile* LayerDirectory::release_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Odb::Lib::Protobuf::ComponentsFile* released = _impl_.components_;
  _impl_.components_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Odb::Lib::Protobuf::ComponentsFile* LayerDirectory::unsafe_arena_release_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.components)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Odb::Lib::Protobuf::ComponentsFile* temp = _impl_.components_;
  _impl_.components_ = nullptr;
  return temp;
}
inline ::Odb::Lib::Protobuf::ComponentsFile* LayerDirectory::_internal_mutable_components() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.components_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Odb::Lib::Protobuf::ComponentsFile>(GetArena());
    _impl_.components_ = reinterpret_cast<::Odb::Lib::Protobuf::ComponentsFile*>(p);
  }
  return _impl_.components_;
}
inline ::Odb::Lib::Protobuf::ComponentsFile* LayerDirectory::mutable_components() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::Odb::Lib::Protobuf::ComponentsFile* _msg = _internal_mutable_components();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.components)
  return _msg;
}
inline void LayerDirectory::set_allocated_components(::Odb::Lib::Protobuf::ComponentsFile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.components_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.components_ = reinterpret_cast<::Odb::Lib::Protobuf::ComponentsFile*>(value);
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.components)
}

// optional .Odb.Lib.Protobuf.AttrListFile attrlistFile = 4;
inline bool LayerDirectory::has_attrlistfile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attrlistfile_ != nullptr);
  return value;
}
inline const ::Odb::Lib::Protobuf::AttrListFile& LayerDirectory::_internal_attrlistfile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Odb::Lib::Protobuf::AttrListFile* p = _impl_.attrlistfile_;
  return p != nullptr ? *p : reinterpret_cast<const ::Odb::Lib::Protobuf::AttrListFile&>(::Odb::Lib::Protobuf::_AttrListFile_default_instance_);
}
inline const ::Odb::Lib::Protobuf::AttrListFile& LayerDirectory::attrlistfile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.attrlistFile)
  return _internal_attrlistfile();
}
inline void LayerDirectory::unsafe_arena_set_allocated_attrlistfile(::Odb::Lib::Protobuf::AttrListFile* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attrlistfile_);
  }
  _impl_.attrlistfile_ = reinterpret_cast<::Odb::Lib::Protobuf::AttrListFile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Odb.Lib.Protobuf.LayerDirectory.attrlistFile)
}
inline ::Odb::Lib::Protobuf::AttrListFile* LayerDirectory::release_attrlistfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Odb::Lib::Protobuf::AttrListFile* released = _impl_.attrlistfile_;
  _impl_.attrlistfile_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Odb::Lib::Protobuf::AttrListFile* LayerDirectory::unsafe_arena_release_attrlistfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.attrlistFile)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Odb::Lib::Protobuf::AttrListFile* temp = _impl_.attrlistfile_;
  _impl_.attrlistfile_ = nullptr;
  return temp;
}
inline ::Odb::Lib::Protobuf::AttrListFile* LayerDirectory::_internal_mutable_attrlistfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attrlistfile_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Odb::Lib::Protobuf::AttrListFile>(GetArena());
    _impl_.attrlistfile_ = reinterpret_cast<::Odb::Lib::Protobuf::AttrListFile*>(p);
  }
  return _impl_.attrlistfile_;
}
inline ::Odb::Lib::Protobuf::AttrListFile* LayerDirectory::mutable_attrlistfile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::Odb::Lib::Protobuf::AttrListFile* _msg = _internal_mutable_attrlistfile();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.attrlistFile)
  return _msg;
}
inline void LayerDirectory::set_allocated_attrlistfile(::Odb::Lib::Protobuf::AttrListFile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attrlistfile_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.attrlistfile_ = reinterpret_cast<::Odb::Lib::Protobuf::AttrListFile*>(value);
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.attrlistFile)
}

// optional .Odb.Lib.Protobuf.FeaturesFile featureFile = 5;
inline bool LayerDirectory::has_featurefile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.featurefile_ != nullptr);
  return value;
}
inline const ::Odb::Lib::Protobuf::FeaturesFile& LayerDirectory::_internal_featurefile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Odb::Lib::Protobuf::FeaturesFile* p = _impl_.featurefile_;
  return p != nullptr ? *p : reinterpret_cast<const ::Odb::Lib::Protobuf::FeaturesFile&>(::Odb::Lib::Protobuf::_FeaturesFile_default_instance_);
}
inline const ::Odb::Lib::Protobuf::FeaturesFile& LayerDirectory::featurefile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.featureFile)
  return _internal_featurefile();
}
inline void LayerDirectory::unsafe_arena_set_allocated_featurefile(::Odb::Lib::Protobuf::FeaturesFile* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.featurefile_);
  }
  _impl_.featurefile_ = reinterpret_cast<::Odb::Lib::Protobuf::FeaturesFile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Odb.Lib.Protobuf.LayerDirectory.featureFile)
}
inline ::Odb::Lib::Protobuf::FeaturesFile* LayerDirectory::release_featurefile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Odb::Lib::Protobuf::FeaturesFile* released = _impl_.featurefile_;
  _impl_.featurefile_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Odb::Lib::Protobuf::FeaturesFile* LayerDirectory::unsafe_arena_release_featurefile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.featureFile)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Odb::Lib::Protobuf::FeaturesFile* temp = _impl_.featurefile_;
  _impl_.featurefile_ = nullptr;
  return temp;
}
inline ::Odb::Lib::Protobuf::FeaturesFile* LayerDirectory::_internal_mutable_featurefile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.featurefile_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Odb::Lib::Protobuf::FeaturesFile>(GetArena());
    _impl_.featurefile_ = reinterpret_cast<::Odb::Lib::Protobuf::FeaturesFile*>(p);
  }
  return _impl_.featurefile_;
}
inline ::Odb::Lib::Protobuf::FeaturesFile* LayerDirectory::mutable_featurefile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::Odb::Lib::Protobuf::FeaturesFile* _msg = _internal_mutable_featurefile();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.featureFile)
  return _msg;
}
inline void LayerDirectory::set_allocated_featurefile(::Odb::Lib::Protobuf::FeaturesFile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.featurefile_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.featurefile_ = reinterpret_cast<::Odb::Lib::Protobuf::FeaturesFile*>(value);
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.featureFile)
}

// optional .Odb.Lib.Protobuf.ToolsFile toolFile = 6;
inline bool LayerDirectory::has_toolfile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.toolfile_ != nullptr);
  return value;
}
inline const ::Odb::Lib::Protobuf::ToolsFile& LayerDirectory::_internal_toolfile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Odb::Lib::Protobuf::ToolsFile* p = _impl_.toolfile_;
  return p != nullptr ? *p : reinterpret_cast<const ::Odb::Lib::Protobuf::ToolsFile&>(::Odb::Lib::Protobuf::_ToolsFile_default_instance_);
}
inline const ::Odb::Lib::Protobuf::ToolsFile& LayerDirectory::toolfile() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.LayerDirectory.toolFile)
  return _internal_toolfile();
}
inline void LayerDirectory::unsafe_arena_set_allocated_toolfile(::Odb::Lib::Protobuf::ToolsFile* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.toolfile_);
  }
  _impl_.toolfile_ = reinterpret_cast<::Odb::Lib::Protobuf::ToolsFile*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Odb.Lib.Protobuf.LayerDirectory.toolFile)
}
inline ::Odb::Lib::Protobuf::ToolsFile* LayerDirectory::release_toolfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Odb::Lib::Protobuf::ToolsFile* released = _impl_.toolfile_;
  _impl_.toolfile_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Odb::Lib::Protobuf::ToolsFile* LayerDirectory::unsafe_arena_release_toolfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.LayerDirectory.toolFile)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::Odb::Lib::Protobuf::ToolsFile* temp = _impl_.toolfile_;
  _impl_.toolfile_ = nullptr;
  return temp;
}
inline ::Odb::Lib::Protobuf::ToolsFile* LayerDirectory::_internal_mutable_toolfile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.toolfile_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Odb::Lib::Protobuf::ToolsFile>(GetArena());
    _impl_.toolfile_ = reinterpret_cast<::Odb::Lib::Protobuf::ToolsFile*>(p);
  }
  return _impl_.toolfile_;
}
inline ::Odb::Lib::Protobuf::ToolsFile* LayerDirectory::mutable_toolfile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::Odb::Lib::Protobuf::ToolsFile* _msg = _internal_mutable_toolfile();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.LayerDirectory.toolFile)
  return _msg;
}
inline void LayerDirectory::set_allocated_toolfile(::Odb::Lib::Protobuf::ToolsFile* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.toolfile_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.toolfile_ = reinterpret_cast<::Odb::Lib::Protobuf::ToolsFile*>(value);
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.LayerDirectory.toolFile)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // layerdirectory_2eproto_2epb_2eh
