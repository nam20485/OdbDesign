// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: netlistfile.proto
// Protobuf C++ Version: 5.29.2

#include "netlistfile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr NetlistFile_NetRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        netname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        serialnumber_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NetlistFile_NetRecord::NetlistFile_NetRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetlistFile_NetRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetlistFile_NetRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetlistFile_NetRecordDefaultTypeInternal() {}
  union {
    NetlistFile_NetRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetlistFile_NetRecordDefaultTypeInternal _NetlistFile_NetRecord_default_instance_;

inline constexpr NetlistFile_NetPointRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        epoint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        testexecutionside_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        radius_{0},
        x_{0},
        netnumber_{0u},
        side_{static_cast< ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide >(0)},
        y_{0},
        width_{0},
        height_{0},
        staggeredx_{0},
        staggeredy_{0},
        staggeredradius_{0},
        viapoint_{0},
        fiducialpoint_{0},
        testpoint_{0},
        commentpoint_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NetlistFile_NetPointRecord::NetlistFile_NetPointRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetlistFile_NetPointRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetlistFile_NetPointRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetlistFile_NetPointRecordDefaultTypeInternal() {}
  union {
    NetlistFile_NetPointRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetlistFile_NetPointRecordDefaultTypeInternal _NetlistFile_NetPointRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR NetlistFile_NetRecordsByNameEntry_DoNotUse::NetlistFile_NetRecordsByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : NetlistFile_NetRecordsByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : NetlistFile_NetRecordsByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NetlistFile_NetRecordsByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal _NetlistFile_NetRecordsByNameEntry_DoNotUse_default_instance_;

inline constexpr NetlistFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        netrecordss_{},
        netrecordsbyname_{},
        netpointrecords_{},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        units_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        optimized_{false},
        staggered_{static_cast< ::Odb::Lib::Protobuf::NetlistFile_Staggered >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NetlistFile::NetlistFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NetlistFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetlistFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetlistFileDefaultTypeInternal() {}
  union {
    NetlistFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetlistFileDefaultTypeInternal _NetlistFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_netlistfile_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_netlistfile_2eproto = nullptr;
const ::uint32_t
    TableStruct_netlistfile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecord, _impl_.serialnumber_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecord, _impl_.netname_),
        1,
        0,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.netnumber_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.side_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.epoint_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.exp_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.commentpoint_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.staggeredx_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.staggeredy_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.staggeredradius_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.viapoint_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.fiducialpoint_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.testpoint_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord, _impl_.testexecutionside_),
        5,
        3,
        4,
        7,
        6,
        8,
        9,
        0,
        1,
        16,
        10,
        11,
        12,
        13,
        14,
        15,
        2,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.units_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.optimized_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.staggered_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.netrecordss_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.netrecordsbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::NetlistFile, _impl_.netpointrecords_),
        0,
        1,
        2,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Odb::Lib::Protobuf::NetlistFile_NetRecord)},
        {12, 37, -1, sizeof(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord)},
        {54, 64, -1, sizeof(::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse)},
        {66, 82, -1, sizeof(::Odb::Lib::Protobuf::NetlistFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_NetlistFile_NetRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_NetlistFile_NetPointRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_NetlistFile_NetRecordsByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_NetlistFile_default_instance_._instance,
};
const char descriptor_table_protodef_netlistfile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021netlistfile.proto\022\020Odb.Lib.Protobuf\"\370\n"
    "\n\013NetlistFile\022\021\n\004path\030\001 \001(\tH\000\210\001\001\022\021\n\004name"
    "\030\002 \001(\tH\001\210\001\001\022\022\n\005units\030\003 \001(\tH\002\210\001\001\022\026\n\toptim"
    "ized\030\004 \001(\010H\003\210\001\001\022\?\n\tstaggered\030\005 \001(\0162\'.Odb"
    ".Lib.Protobuf.NetlistFile.StaggeredH\004\210\001\001"
    "\022<\n\013netRecordss\030\006 \003(\0132\'.Odb.Lib.Protobuf"
    ".NetlistFile.NetRecord\022M\n\020netRecordsByNa"
    "me\030\007 \003(\01323.Odb.Lib.Protobuf.NetlistFile."
    "NetRecordsByNameEntry\022E\n\017netPointRecords"
    "\030\010 \003(\0132,.Odb.Lib.Protobuf.NetlistFile.Ne"
    "tPointRecord\032Y\n\tNetRecord\022\031\n\014serialNumbe"
    "r\030\001 \001(\rH\000\210\001\001\022\024\n\007netName\030\002 \001(\tH\001\210\001\001B\017\n\r_s"
    "erialNumberB\n\n\010_netName\032\341\005\n\016NetPointReco"
    "rd\022\026\n\tnetNumber\030\001 \001(\rH\000\210\001\001\022\023\n\006radius\030\002 \001"
    "(\001H\001\210\001\001\022\016\n\001x\030\003 \001(\001H\002\210\001\001\022\016\n\001y\030\004 \001(\001H\003\210\001\001\022"
    "J\n\004side\030\005 \001(\01627.Odb.Lib.Protobuf.Netlist"
    "File.NetPointRecord.AccessSideH\004\210\001\001\022\022\n\005w"
    "idth\030\006 \001(\001H\005\210\001\001\022\023\n\006height\030\007 \001(\001H\006\210\001\001\022\023\n\006"
    "epoint\030\010 \001(\tH\007\210\001\001\022\020\n\003exp\030\t \001(\tH\010\210\001\001\022\031\n\014c"
    "ommentPoint\030\n \001(\010H\t\210\001\001\022\027\n\nstaggeredX\030\013 \001"
    "(\001H\n\210\001\001\022\027\n\nstaggeredY\030\014 \001(\001H\013\210\001\001\022\034\n\017stag"
    "geredRadius\030\r \001(\001H\014\210\001\001\022\025\n\010viaPoint\030\016 \001(\001"
    "H\r\210\001\001\022\032\n\rfiducialPoint\030\017 \001(\001H\016\210\001\001\022\026\n\ttes"
    "tPoint\030\020 \001(\001H\017\210\001\001\022\036\n\021testExecutionSide\030\021"
    " \001(\tH\020\210\001\001\"4\n\nAccessSide\022\007\n\003Top\020\000\022\010\n\004Down"
    "\020\001\022\010\n\004Both\020\002\022\t\n\005Inner\020\003B\014\n\n_netNumberB\t\n"
    "\007_radiusB\004\n\002_xB\004\n\002_yB\007\n\005_sideB\010\n\006_widthB"
    "\t\n\007_heightB\t\n\007_epointB\006\n\004_expB\017\n\r_commen"
    "tPointB\r\n\013_staggeredXB\r\n\013_staggeredYB\022\n\020"
    "_staggeredRadiusB\013\n\t_viaPointB\020\n\016_fiduci"
    "alPointB\014\n\n_testPointB\024\n\022_testExecutionS"
    "ide\032`\n\025NetRecordsByNameEntry\022\013\n\003key\030\001 \001("
    "\t\0226\n\005value\030\002 \001(\0132\'.Odb.Lib.Protobuf.Netl"
    "istFile.NetRecord:\0028\001\")\n\tStaggered\022\007\n\003Ye"
    "s\020\000\022\006\n\002No\020\001\022\013\n\007Unknown\020\002B\007\n\005_pathB\007\n\005_na"
    "meB\010\n\006_unitsB\014\n\n_optimizedB\014\n\n_staggered"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_netlistfile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_netlistfile_2eproto = {
    false,
    false,
    1448,
    descriptor_table_protodef_netlistfile_2eproto,
    "netlistfile.proto",
    &descriptor_table_netlistfile_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_netlistfile_2eproto::offsets,
    file_level_enum_descriptors_netlistfile_2eproto,
    file_level_service_descriptors_netlistfile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::google::protobuf::EnumDescriptor* NetlistFile_NetPointRecord_AccessSide_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netlistfile_2eproto);
  return file_level_enum_descriptors_netlistfile_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t NetlistFile_NetPointRecord_AccessSide_internal_data_[] = {
    262144u, 0u, };
bool NetlistFile_NetPointRecord_AccessSide_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::Top;
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::Down;
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::Both;
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::Inner;
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::AccessSide_MIN;
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::AccessSide_MAX;
constexpr int NetlistFile_NetPointRecord::AccessSide_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NetlistFile_Staggered_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_netlistfile_2eproto);
  return file_level_enum_descriptors_netlistfile_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t NetlistFile_Staggered_internal_data_[] = {
    196608u, 0u, };
bool NetlistFile_Staggered_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NetlistFile_Staggered NetlistFile::Yes;
constexpr NetlistFile_Staggered NetlistFile::No;
constexpr NetlistFile_Staggered NetlistFile::Unknown;
constexpr NetlistFile_Staggered NetlistFile::Staggered_MIN;
constexpr NetlistFile_Staggered NetlistFile::Staggered_MAX;
constexpr int NetlistFile::Staggered_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class NetlistFile_NetRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetlistFile_NetRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_._has_bits_);
};

NetlistFile_NetRecord::NetlistFile_NetRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.NetlistFile.NetRecord)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile_NetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::NetlistFile_NetRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        netname_(arena, from.netname_) {}

NetlistFile_NetRecord::NetlistFile_NetRecord(
    ::google::protobuf::Arena* arena,
    const NetlistFile_NetRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetlistFile_NetRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.serialnumber_ = from._impl_.serialnumber_;

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.NetlistFile.NetRecord)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile_NetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        netname_(arena) {}

inline void NetlistFile_NetRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.serialnumber_ = {};
}
NetlistFile_NetRecord::~NetlistFile_NetRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.NetlistFile.NetRecord)
  SharedDtor(*this);
}
inline void NetlistFile_NetRecord::SharedDtor(MessageLite& self) {
  NetlistFile_NetRecord& this_ = static_cast<NetlistFile_NetRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.netname_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetlistFile_NetRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetlistFile_NetRecord(arena);
}
constexpr auto NetlistFile_NetRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetlistFile_NetRecord),
                                            alignof(NetlistFile_NetRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetlistFile_NetRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetlistFile_NetRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetlistFile_NetRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetlistFile_NetRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetlistFile_NetRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetlistFile_NetRecord>(), &NetlistFile_NetRecord::ByteSizeLong,
            &NetlistFile_NetRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_._cached_size_),
        false,
    },
    &NetlistFile_NetRecord::kDescriptorMethods,
    &descriptor_table_netlistfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetlistFile_NetRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2> NetlistFile_NetRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional string netName = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_.netname_)}},
    // optional uint32 serialNumber = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetlistFile_NetRecord, _impl_.serialnumber_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_.serialnumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 serialNumber = 1;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_.serialnumber_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string netName = 2;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecord, _impl_.netname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\0\7\0\0\0\0\0"
    "Odb.Lib.Protobuf.NetlistFile.NetRecord"
    "netName"
  }},
};

PROTOBUF_NOINLINE void NetlistFile_NetRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.NetlistFile.NetRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.netname_.ClearNonDefaultToEmpty();
  }
  _impl_.serialnumber_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetlistFile_NetRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetlistFile_NetRecord& this_ = static_cast<const NetlistFile_NetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetlistFile_NetRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetlistFile_NetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.NetlistFile.NetRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 serialNumber = 1;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_serialnumber(), target);
          }

          // optional string netName = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_netname();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.NetRecord.netName");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.NetlistFile.NetRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetlistFile_NetRecord::ByteSizeLong(const MessageLite& base) {
          const NetlistFile_NetRecord& this_ = static_cast<const NetlistFile_NetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetlistFile_NetRecord::ByteSizeLong() const {
          const NetlistFile_NetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.NetlistFile.NetRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string netName = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_netname());
            }
            // optional uint32 serialNumber = 1;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_serialnumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetlistFile_NetRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetlistFile_NetRecord*>(&to_msg);
  auto& from = static_cast<const NetlistFile_NetRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.NetlistFile.NetRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_netname(from._internal_netname());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.serialnumber_ = from._impl_.serialnumber_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetlistFile_NetRecord::CopyFrom(const NetlistFile_NetRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.NetlistFile.NetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetlistFile_NetRecord::InternalSwap(NetlistFile_NetRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.netname_, &other->_impl_.netname_, arena);
        swap(_impl_.serialnumber_, other->_impl_.serialnumber_);
}

::google::protobuf::Metadata NetlistFile_NetRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NetlistFile_NetPointRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetlistFile_NetPointRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_._has_bits_);
};

NetlistFile_NetPointRecord::NetlistFile_NetPointRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile_NetPointRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        epoint_(arena, from.epoint_),
        exp_(arena, from.exp_),
        testexecutionside_(arena, from.testexecutionside_) {}

NetlistFile_NetPointRecord::NetlistFile_NetPointRecord(
    ::google::protobuf::Arena* arena,
    const NetlistFile_NetPointRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetlistFile_NetPointRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, radius_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, radius_),
           offsetof(Impl_, commentpoint_) -
               offsetof(Impl_, radius_) +
               sizeof(Impl_::commentpoint_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile_NetPointRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        epoint_(arena),
        exp_(arena),
        testexecutionside_(arena) {}

inline void NetlistFile_NetPointRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, radius_),
           0,
           offsetof(Impl_, commentpoint_) -
               offsetof(Impl_, radius_) +
               sizeof(Impl_::commentpoint_));
}
NetlistFile_NetPointRecord::~NetlistFile_NetPointRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
  SharedDtor(*this);
}
inline void NetlistFile_NetPointRecord::SharedDtor(MessageLite& self) {
  NetlistFile_NetPointRecord& this_ = static_cast<NetlistFile_NetPointRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.epoint_.Destroy();
  this_._impl_.exp_.Destroy();
  this_._impl_.testexecutionside_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetlistFile_NetPointRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetlistFile_NetPointRecord(arena);
}
constexpr auto NetlistFile_NetPointRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetlistFile_NetPointRecord),
                                            alignof(NetlistFile_NetPointRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetlistFile_NetPointRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetlistFile_NetPointRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetlistFile_NetPointRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetlistFile_NetPointRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetlistFile_NetPointRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetlistFile_NetPointRecord>(), &NetlistFile_NetPointRecord::ByteSizeLong,
            &NetlistFile_NetPointRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_._cached_size_),
        false,
    },
    &NetlistFile_NetPointRecord::kDescriptorMethods,
    &descriptor_table_netlistfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetlistFile_NetPointRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 0, 94, 2> NetlistFile_NetPointRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_._has_bits_),
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 netNumber = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetlistFile_NetPointRecord, _impl_.netnumber_), 5>(),
     {8, 5, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.netnumber_)}},
    // optional double radius = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.radius_)}},
    // optional double x = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.x_)}},
    // optional double y = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 7, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.y_)}},
    // optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetlistFile_NetPointRecord, _impl_.side_), 6>(),
     {40, 6, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.side_)}},
    // optional double width = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 8, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.width_)}},
    // optional double height = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 9, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.height_)}},
    // optional string epoint = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.epoint_)}},
    // optional string exp = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 1, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.exp_)}},
    // optional bool commentPoint = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetlistFile_NetPointRecord, _impl_.commentpoint_), 16>(),
     {80, 16, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.commentpoint_)}},
    // optional double staggeredX = 11;
    {::_pbi::TcParser::FastF64S1,
     {89, 10, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredx_)}},
    // optional double staggeredY = 12;
    {::_pbi::TcParser::FastF64S1,
     {97, 11, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredy_)}},
    // optional double staggeredRadius = 13;
    {::_pbi::TcParser::FastF64S1,
     {105, 12, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredradius_)}},
    // optional double viaPoint = 14;
    {::_pbi::TcParser::FastF64S1,
     {113, 13, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.viapoint_)}},
    // optional double fiducialPoint = 15;
    {::_pbi::TcParser::FastF64S1,
     {121, 14, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.fiducialpoint_)}},
    // optional double testPoint = 16;
    {::_pbi::TcParser::FastF64S2,
     {385, 15, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.testpoint_)}},
    // optional string testExecutionSide = 17;
    {::_pbi::TcParser::FastUS2,
     {394, 2, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.testexecutionside_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 netNumber = 1;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.netnumber_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional double radius = 2;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.radius_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double x = 3;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.x_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double y = 4;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.y_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.side_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional double width = 6;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.width_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double height = 7;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.height_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string epoint = 8;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.epoint_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string exp = 9;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.exp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool commentPoint = 10;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.commentpoint_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional double staggeredX = 11;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredx_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double staggeredY = 12;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredy_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double staggeredRadius = 13;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.staggeredradius_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double viaPoint = 14;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.viapoint_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double fiducialPoint = 15;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.fiducialpoint_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double testPoint = 16;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.testpoint_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional string testExecutionSide = 17;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.testexecutionside_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\0\0\0\0\0\0\0\6\3\0\0\0\0\0\0\0\21\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.NetlistFile.NetPointRecord"
    "epoint"
    "exp"
    "testExecutionSide"
  }},
};

PROTOBUF_NOINLINE void NetlistFile_NetPointRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.epoint_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.exp_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.testexecutionside_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.radius_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.radius_)) + sizeof(_impl_.y_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.testpoint_) -
        reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.testpoint_));
  }
  _impl_.commentpoint_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetlistFile_NetPointRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetlistFile_NetPointRecord& this_ = static_cast<const NetlistFile_NetPointRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetlistFile_NetPointRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetlistFile_NetPointRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 netNumber = 1;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_netnumber(), target);
          }

          // optional double radius = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_radius(), target);
          }

          // optional double x = 3;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_x(), target);
          }

          // optional double y = 4;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_y(), target);
          }

          // optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_side(), target);
          }

          // optional double width = 6;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_width(), target);
          }

          // optional double height = 7;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_height(), target);
          }

          // optional string epoint = 8;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_epoint();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // optional string exp = 9;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_exp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // optional bool commentPoint = 10;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_commentpoint(), target);
          }

          // optional double staggeredX = 11;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                11, this_._internal_staggeredx(), target);
          }

          // optional double staggeredY = 12;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                12, this_._internal_staggeredy(), target);
          }

          // optional double staggeredRadius = 13;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                13, this_._internal_staggeredradius(), target);
          }

          // optional double viaPoint = 14;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                14, this_._internal_viapoint(), target);
          }

          // optional double fiducialPoint = 15;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                15, this_._internal_fiducialpoint(), target);
          }

          // optional double testPoint = 16;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                16, this_._internal_testpoint(), target);
          }

          // optional string testExecutionSide = 17;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_testexecutionside();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide");
            target = stream->WriteStringMaybeAliased(17, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetlistFile_NetPointRecord::ByteSizeLong(const MessageLite& base) {
          const NetlistFile_NetPointRecord& this_ = static_cast<const NetlistFile_NetPointRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetlistFile_NetPointRecord::ByteSizeLong() const {
          const NetlistFile_NetPointRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string epoint = 8;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_epoint());
            }
            // optional string exp = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_exp());
            }
            // optional string testExecutionSide = 17;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_testexecutionside());
            }
            // optional double radius = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += 9;
            }
            // optional double x = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += 9;
            }
            // optional uint32 netNumber = 1;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_netnumber());
            }
            // optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_side());
            }
            // optional double y = 4;
            if (cached_has_bits & 0x00000080u) {
              total_size += 9;
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional double width = 6;
            if (cached_has_bits & 0x00000100u) {
              total_size += 9;
            }
            // optional double height = 7;
            if (cached_has_bits & 0x00000200u) {
              total_size += 9;
            }
            // optional double staggeredX = 11;
            if (cached_has_bits & 0x00000400u) {
              total_size += 9;
            }
            // optional double staggeredY = 12;
            if (cached_has_bits & 0x00000800u) {
              total_size += 9;
            }
            // optional double staggeredRadius = 13;
            if (cached_has_bits & 0x00001000u) {
              total_size += 9;
            }
            // optional double viaPoint = 14;
            if (cached_has_bits & 0x00002000u) {
              total_size += 9;
            }
            // optional double fiducialPoint = 15;
            if (cached_has_bits & 0x00004000u) {
              total_size += 9;
            }
            // optional double testPoint = 16;
            if (cached_has_bits & 0x00008000u) {
              total_size += 10;
            }
          }
           {
            // optional bool commentPoint = 10;
            if (cached_has_bits & 0x00010000u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetlistFile_NetPointRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetlistFile_NetPointRecord*>(&to_msg);
  auto& from = static_cast<const NetlistFile_NetPointRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_epoint(from._internal_epoint());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_exp(from._internal_exp());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_testexecutionside(from._internal_testexecutionside());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.radius_ = from._impl_.radius_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.netnumber_ = from._impl_.netnumber_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.side_ = from._impl_.side_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.staggeredx_ = from._impl_.staggeredx_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.staggeredy_ = from._impl_.staggeredy_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.staggeredradius_ = from._impl_.staggeredradius_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.viapoint_ = from._impl_.viapoint_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.fiducialpoint_ = from._impl_.fiducialpoint_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.testpoint_ = from._impl_.testpoint_;
    }
  }
  if (cached_has_bits & 0x00010000u) {
    _this->_impl_.commentpoint_ = from._impl_.commentpoint_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetlistFile_NetPointRecord::CopyFrom(const NetlistFile_NetPointRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetlistFile_NetPointRecord::InternalSwap(NetlistFile_NetPointRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.epoint_, &other->_impl_.epoint_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exp_, &other->_impl_.exp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.testexecutionside_, &other->_impl_.testexecutionside_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.commentpoint_)
      + sizeof(NetlistFile_NetPointRecord::_impl_.commentpoint_)
      - PROTOBUF_FIELD_OFFSET(NetlistFile_NetPointRecord, _impl_.radius_)>(
          reinterpret_cast<char*>(&_impl_.radius_),
          reinterpret_cast<char*>(&other->_impl_.radius_));
}

::google::protobuf::Metadata NetlistFile_NetPointRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              NetlistFile_NetRecordsByNameEntry_DoNotUse::NetlistFile_NetRecordsByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              NetlistFile_NetRecordsByNameEntry_DoNotUse::NetlistFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              NetlistFile_NetRecordsByNameEntry_DoNotUse::NetlistFile_NetRecordsByNameEntry_DoNotUse() : SuperType() {}
              NetlistFile_NetRecordsByNameEntry_DoNotUse::NetlistFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* NetlistFile_NetRecordsByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) NetlistFile_NetRecordsByNameEntry_DoNotUse(arena);
              }
              constexpr auto NetlistFile_NetRecordsByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NetlistFile_NetRecordsByNameEntry_DoNotUse),
                                                          alignof(NetlistFile_NetRecordsByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull NetlistFile_NetRecordsByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_NetlistFile_NetRecordsByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &NetlistFile_NetRecordsByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<NetlistFile_NetRecordsByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &NetlistFile_NetRecordsByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &NetlistFile_NetRecordsByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &NetlistFile_NetRecordsByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_netlistfile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* NetlistFile_NetRecordsByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 62, 2> NetlistFile_NetRecordsByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetRecordsByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.NetlistFile.NetRecord value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.NetlistFile.NetRecord value = 2;
    {PROTOBUF_FIELD_OFFSET(NetlistFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetRecord>()},
  }}, {{
    "\62\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.NetlistFile.NetRecordsByNameEntry"
    "key"
  }},
};

// ===================================================================

class NetlistFile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NetlistFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_._has_bits_);
};

NetlistFile::NetlistFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.NetlistFile)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::NetlistFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        netrecordss_{visibility, arena, from.netrecordss_},
        netrecordsbyname_{visibility, arena, from.netrecordsbyname_},
        netpointrecords_{visibility, arena, from.netpointrecords_},
        path_(arena, from.path_),
        name_(arena, from.name_),
        units_(arena, from.units_) {}

NetlistFile::NetlistFile(
    ::google::protobuf::Arena* arena,
    const NetlistFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NetlistFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optimized_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, optimized_),
           offsetof(Impl_, staggered_) -
               offsetof(Impl_, optimized_) +
               sizeof(Impl_::staggered_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.NetlistFile)
}
inline PROTOBUF_NDEBUG_INLINE NetlistFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        netrecordss_{visibility, arena},
        netrecordsbyname_{visibility, arena},
        netpointrecords_{visibility, arena},
        path_(arena),
        name_(arena),
        units_(arena) {}

inline void NetlistFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, optimized_),
           0,
           offsetof(Impl_, staggered_) -
               offsetof(Impl_, optimized_) +
               sizeof(Impl_::staggered_));
}
NetlistFile::~NetlistFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.NetlistFile)
  SharedDtor(*this);
}
inline void NetlistFile::SharedDtor(MessageLite& self) {
  NetlistFile& this_ = static_cast<NetlistFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.units_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NetlistFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NetlistFile(arena);
}
constexpr auto NetlistFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordss_) +
          decltype(NetlistFile::_impl_.netrecordss_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordsbyname_) +
          decltype(NetlistFile::_impl_.netrecordsbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordsbyname_) +
          decltype(NetlistFile::_impl_.netrecordsbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netpointrecords_) +
          decltype(NetlistFile::_impl_.netpointrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NetlistFile), alignof(NetlistFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NetlistFile::PlacementNew_,
                                 sizeof(NetlistFile),
                                 alignof(NetlistFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NetlistFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NetlistFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NetlistFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NetlistFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NetlistFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NetlistFile>(), &NetlistFile::ByteSizeLong,
            &NetlistFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_._cached_size_),
        false,
    },
    &NetlistFile::kDescriptorMethods,
    &descriptor_table_netlistfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NetlistFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 74, 2> NetlistFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netpointrecords_)}},
    // optional string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.path_)}},
    // optional string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.name_)}},
    // optional string units = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.units_)}},
    // optional bool optimized = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NetlistFile, _impl_.optimized_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.optimized_)}},
    // optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NetlistFile, _impl_.staggered_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.staggered_)}},
    // repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordss_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string path = 1;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string name = 2;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string units = 3;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.units_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool optimized = 4;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.optimized_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.staggered_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordss_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.NetlistFile.NetRecord> netRecordsByName = 7;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netrecordsbyname_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
    {PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.netpointrecords_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(NetlistFile()._impl_.netrecordsbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::NetlistFile_NetRecord>()},
  }}, {{
    "\34\4\4\5\0\0\0\20\0\0\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.NetlistFile"
    "path"
    "name"
    "units"
    "netRecordsByName"
  }},
};

PROTOBUF_NOINLINE void NetlistFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.NetlistFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.netrecordss_.Clear();
  _impl_.netrecordsbyname_.Clear();
  _impl_.netpointrecords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.units_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.optimized_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.staggered_) -
        reinterpret_cast<char*>(&_impl_.optimized_)) + sizeof(_impl_.staggered_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NetlistFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NetlistFile& this_ = static_cast<const NetlistFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NetlistFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NetlistFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.NetlistFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string path = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string name = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional string units = 3;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_units();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.units");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional bool optimized = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_optimized(), target);
          }

          // optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_staggered(), target);
          }

          // repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_netrecordss_size());
               i < n; i++) {
            const auto& repfield = this_._internal_netrecordss().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .Odb.Lib.Protobuf.NetlistFile.NetRecord> netRecordsByName = 7;
          if (!this_._internal_netrecordsbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_netrecordsbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.netRecordsByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    7, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.NetlistFile.netRecordsByName");
              }
            }
          }

          // repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_netpointrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_netpointrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.NetlistFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NetlistFile::ByteSizeLong(const MessageLite& base) {
          const NetlistFile& this_ = static_cast<const NetlistFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NetlistFile::ByteSizeLong() const {
          const NetlistFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.NetlistFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
            {
              total_size += 1UL * this_._internal_netrecordss_size();
              for (const auto& msg : this_._internal_netrecordss()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .Odb.Lib.Protobuf.NetlistFile.NetRecord> netRecordsByName = 7;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_netrecordsbyname_size());
              for (const auto& entry : this_._internal_netrecordsbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
            {
              total_size += 1UL * this_._internal_netpointrecords_size();
              for (const auto& msg : this_._internal_netpointrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional string path = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // optional string name = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional string units = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_units());
            }
            // optional bool optimized = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_staggered());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NetlistFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NetlistFile*>(&to_msg);
  auto& from = static_cast<const NetlistFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.NetlistFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_netrecordss()->MergeFrom(
      from._internal_netrecordss());
  _this->_impl_.netrecordsbyname_.MergeFrom(from._impl_.netrecordsbyname_);
  _this->_internal_mutable_netpointrecords()->MergeFrom(
      from._internal_netpointrecords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_units(from._internal_units());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.optimized_ = from._impl_.optimized_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.staggered_ = from._impl_.staggered_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetlistFile::CopyFrom(const NetlistFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.NetlistFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NetlistFile::InternalSwap(NetlistFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.netrecordss_.InternalSwap(&other->_impl_.netrecordss_);
  _impl_.netrecordsbyname_.InternalSwap(&other->_impl_.netrecordsbyname_);
  _impl_.netpointrecords_.InternalSwap(&other->_impl_.netpointrecords_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.units_, &other->_impl_.units_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.staggered_)
      + sizeof(NetlistFile::_impl_.staggered_)
      - PROTOBUF_FIELD_OFFSET(NetlistFile, _impl_.optimized_)>(
          reinterpret_cast<char*>(&_impl_.optimized_),
          reinterpret_cast<char*>(&other->_impl_.optimized_));
}

::google::protobuf::Metadata NetlistFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_netlistfile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
