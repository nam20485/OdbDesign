// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: standardfontsfile.proto
// Protobuf C++ Version: 5.29.2

#ifndef standardfontsfile_2eproto_2epb_2eh
#define standardfontsfile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_standardfontsfile_2eproto ODBDESIGN_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ODBDESIGN_EXPORT TableStruct_standardfontsfile_2eproto {
  static const ::uint32_t offsets[];
};
ODBDESIGN_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_standardfontsfile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class StandardFontsFile;
struct StandardFontsFileDefaultTypeInternal;
ODBDESIGN_EXPORT extern StandardFontsFileDefaultTypeInternal _StandardFontsFile_default_instance_;
class StandardFontsFile_CharacterBlock;
struct StandardFontsFile_CharacterBlockDefaultTypeInternal;
ODBDESIGN_EXPORT extern StandardFontsFile_CharacterBlockDefaultTypeInternal _StandardFontsFile_CharacterBlock_default_instance_;
class StandardFontsFile_CharacterBlock_LineRecord;
struct StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal _StandardFontsFile_CharacterBlock_LineRecord_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {

// ===================================================================


// -------------------------------------------------------------------

class ODBDESIGN_EXPORT StandardFontsFile_CharacterBlock_LineRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord) */ {
 public:
  inline StandardFontsFile_CharacterBlock_LineRecord() : StandardFontsFile_CharacterBlock_LineRecord(nullptr) {}
  ~StandardFontsFile_CharacterBlock_LineRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StandardFontsFile_CharacterBlock_LineRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StandardFontsFile_CharacterBlock_LineRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlock_LineRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline StandardFontsFile_CharacterBlock_LineRecord(const StandardFontsFile_CharacterBlock_LineRecord& from) : StandardFontsFile_CharacterBlock_LineRecord(nullptr, from) {}
  inline StandardFontsFile_CharacterBlock_LineRecord(StandardFontsFile_CharacterBlock_LineRecord&& from) noexcept
      : StandardFontsFile_CharacterBlock_LineRecord(nullptr, std::move(from)) {}
  inline StandardFontsFile_CharacterBlock_LineRecord& operator=(const StandardFontsFile_CharacterBlock_LineRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline StandardFontsFile_CharacterBlock_LineRecord& operator=(StandardFontsFile_CharacterBlock_LineRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StandardFontsFile_CharacterBlock_LineRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const StandardFontsFile_CharacterBlock_LineRecord* internal_default_instance() {
    return reinterpret_cast<const StandardFontsFile_CharacterBlock_LineRecord*>(
        &_StandardFontsFile_CharacterBlock_LineRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StandardFontsFile_CharacterBlock_LineRecord& a, StandardFontsFile_CharacterBlock_LineRecord& b) { a.Swap(&b); }
  inline void Swap(StandardFontsFile_CharacterBlock_LineRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StandardFontsFile_CharacterBlock_LineRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StandardFontsFile_CharacterBlock_LineRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StandardFontsFile_CharacterBlock_LineRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StandardFontsFile_CharacterBlock_LineRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StandardFontsFile_CharacterBlock_LineRecord& from) { StandardFontsFile_CharacterBlock_LineRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StandardFontsFile_CharacterBlock_LineRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord"; }

 protected:
  explicit StandardFontsFile_CharacterBlock_LineRecord(::google::protobuf::Arena* arena);
  StandardFontsFile_CharacterBlock_LineRecord(::google::protobuf::Arena* arena, const StandardFontsFile_CharacterBlock_LineRecord& from);
  StandardFontsFile_CharacterBlock_LineRecord(::google::protobuf::Arena* arena, StandardFontsFile_CharacterBlock_LineRecord&& from) noexcept
      : StandardFontsFile_CharacterBlock_LineRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXStartFieldNumber = 1,
    kYStartFieldNumber = 2,
    kXEndFieldNumber = 3,
    kYEndFieldNumber = 4,
    kPolarityFieldNumber = 5,
    kShapeFieldNumber = 6,
    kWidthFieldNumber = 7,
  };
  // optional float xStart = 1;
  bool has_xstart() const;
  void clear_xstart() ;
  float xstart() const;
  void set_xstart(float value);

  private:
  float _internal_xstart() const;
  void _internal_set_xstart(float value);

  public:
  // optional float yStart = 2;
  bool has_ystart() const;
  void clear_ystart() ;
  float ystart() const;
  void set_ystart(float value);

  private:
  float _internal_ystart() const;
  void _internal_set_ystart(float value);

  public:
  // optional float xEnd = 3;
  bool has_xend() const;
  void clear_xend() ;
  float xend() const;
  void set_xend(float value);

  private:
  float _internal_xend() const;
  void _internal_set_xend(float value);

  public:
  // optional float yEnd = 4;
  bool has_yend() const;
  void clear_yend() ;
  float yend() const;
  void set_yend(float value);

  private:
  float _internal_yend() const;
  void _internal_set_yend(float value);

  public:
  // optional .Odb.Lib.Protobuf.Polarity polarity = 5;
  bool has_polarity() const;
  void clear_polarity() ;
  ::Odb::Lib::Protobuf::Polarity polarity() const;
  void set_polarity(::Odb::Lib::Protobuf::Polarity value);

  private:
  ::Odb::Lib::Protobuf::Polarity _internal_polarity() const;
  void _internal_set_polarity(::Odb::Lib::Protobuf::Polarity value);

  public:
  // optional .Odb.Lib.Protobuf.LineShape shape = 6;
  bool has_shape() const;
  void clear_shape() ;
  ::Odb::Lib::Protobuf::LineShape shape() const;
  void set_shape(::Odb::Lib::Protobuf::LineShape value);

  private:
  ::Odb::Lib::Protobuf::LineShape _internal_shape() const;
  void _internal_set_shape(::Odb::Lib::Protobuf::LineShape value);

  public:
  // optional float width = 7;
  bool has_width() const;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StandardFontsFile_CharacterBlock_LineRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float xstart_;
    float ystart_;
    float xend_;
    float yend_;
    int polarity_;
    int shape_;
    float width_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_standardfontsfile_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT StandardFontsFile_CharacterBlock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock) */ {
 public:
  inline StandardFontsFile_CharacterBlock() : StandardFontsFile_CharacterBlock(nullptr) {}
  ~StandardFontsFile_CharacterBlock() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StandardFontsFile_CharacterBlock* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StandardFontsFile_CharacterBlock));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlock(
      ::google::protobuf::internal::ConstantInitialized);

  inline StandardFontsFile_CharacterBlock(const StandardFontsFile_CharacterBlock& from) : StandardFontsFile_CharacterBlock(nullptr, from) {}
  inline StandardFontsFile_CharacterBlock(StandardFontsFile_CharacterBlock&& from) noexcept
      : StandardFontsFile_CharacterBlock(nullptr, std::move(from)) {}
  inline StandardFontsFile_CharacterBlock& operator=(const StandardFontsFile_CharacterBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline StandardFontsFile_CharacterBlock& operator=(StandardFontsFile_CharacterBlock&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StandardFontsFile_CharacterBlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const StandardFontsFile_CharacterBlock* internal_default_instance() {
    return reinterpret_cast<const StandardFontsFile_CharacterBlock*>(
        &_StandardFontsFile_CharacterBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StandardFontsFile_CharacterBlock& a, StandardFontsFile_CharacterBlock& b) { a.Swap(&b); }
  inline void Swap(StandardFontsFile_CharacterBlock* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StandardFontsFile_CharacterBlock* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StandardFontsFile_CharacterBlock* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StandardFontsFile_CharacterBlock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StandardFontsFile_CharacterBlock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StandardFontsFile_CharacterBlock& from) { StandardFontsFile_CharacterBlock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StandardFontsFile_CharacterBlock* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock"; }

 protected:
  explicit StandardFontsFile_CharacterBlock(::google::protobuf::Arena* arena);
  StandardFontsFile_CharacterBlock(::google::protobuf::Arena* arena, const StandardFontsFile_CharacterBlock& from);
  StandardFontsFile_CharacterBlock(::google::protobuf::Arena* arena, StandardFontsFile_CharacterBlock&& from) noexcept
      : StandardFontsFile_CharacterBlock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using LineRecord = StandardFontsFile_CharacterBlock_LineRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kMLineRecordsFieldNumber = 2,
    kCharacterFieldNumber = 1,
  };
  // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
  int m_linerecords_size() const;
  private:
  int _internal_m_linerecords_size() const;

  public:
  void clear_m_linerecords() ;
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord* mutable_m_linerecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>* mutable_m_linerecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>& _internal_m_linerecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>* _internal_mutable_m_linerecords();
  public:
  const ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord& m_linerecords(int index) const;
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord* add_m_linerecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>& m_linerecords() const;
  // optional string character = 1;
  bool has_character() const;
  void clear_character() ;
  const std::string& character() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_character(Arg_&& arg, Args_... args);
  std::string* mutable_character();
  PROTOBUF_NODISCARD std::string* release_character();
  void set_allocated_character(std::string* value);

  private:
  const std::string& _internal_character() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_character(
      const std::string& value);
  std::string* _internal_mutable_character();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StandardFontsFile_CharacterBlock& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord > m_linerecords_;
    ::google::protobuf::internal::ArenaStringPtr character_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_standardfontsfile_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT StandardFontsFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.StandardFontsFile) */ {
 public:
  inline StandardFontsFile() : StandardFontsFile(nullptr) {}
  ~StandardFontsFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StandardFontsFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StandardFontsFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StandardFontsFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline StandardFontsFile(const StandardFontsFile& from) : StandardFontsFile(nullptr, from) {}
  inline StandardFontsFile(StandardFontsFile&& from) noexcept
      : StandardFontsFile(nullptr, std::move(from)) {}
  inline StandardFontsFile& operator=(const StandardFontsFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline StandardFontsFile& operator=(StandardFontsFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StandardFontsFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const StandardFontsFile* internal_default_instance() {
    return reinterpret_cast<const StandardFontsFile*>(
        &_StandardFontsFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StandardFontsFile& a, StandardFontsFile& b) { a.Swap(&b); }
  inline void Swap(StandardFontsFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StandardFontsFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StandardFontsFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StandardFontsFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StandardFontsFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StandardFontsFile& from) { StandardFontsFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StandardFontsFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.StandardFontsFile"; }

 protected:
  explicit StandardFontsFile(::google::protobuf::Arena* arena);
  StandardFontsFile(::google::protobuf::Arena* arena, const StandardFontsFile& from);
  StandardFontsFile(::google::protobuf::Arena* arena, StandardFontsFile&& from) noexcept
      : StandardFontsFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using CharacterBlock = StandardFontsFile_CharacterBlock;

  // accessors -------------------------------------------------------
  enum : int {
    kMCharacterBlocksFieldNumber = 4,
    kXSizeFieldNumber = 1,
    kYSizeFieldNumber = 2,
    kOffsetFieldNumber = 3,
  };
  // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
  int m_characterblocks_size() const;
  private:
  int _internal_m_characterblocks_size() const;

  public:
  void clear_m_characterblocks() ;
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock* mutable_m_characterblocks(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>* mutable_m_characterblocks();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>& _internal_m_characterblocks() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>* _internal_mutable_m_characterblocks();
  public:
  const ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock& m_characterblocks(int index) const;
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock* add_m_characterblocks();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>& m_characterblocks() const;
  // optional float xSize = 1;
  bool has_xsize() const;
  void clear_xsize() ;
  float xsize() const;
  void set_xsize(float value);

  private:
  float _internal_xsize() const;
  void _internal_set_xsize(float value);

  public:
  // optional float ySize = 2;
  bool has_ysize() const;
  void clear_ysize() ;
  float ysize() const;
  void set_ysize(float value);

  private:
  float _internal_ysize() const;
  void _internal_set_ysize(float value);

  public:
  // optional float offset = 3;
  bool has_offset() const;
  void clear_offset() ;
  float offset() const;
  void set_offset(float value);

  private:
  float _internal_offset() const;
  void _internal_set_offset(float value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.StandardFontsFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StandardFontsFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock > m_characterblocks_;
    float xsize_;
    float ysize_;
    float offset_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_standardfontsfile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StandardFontsFile_CharacterBlock_LineRecord

// optional float xStart = 1;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_xstart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_xstart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xstart_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float StandardFontsFile_CharacterBlock_LineRecord::xstart() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.xStart)
  return _internal_xstart();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_xstart(float value) {
  _internal_set_xstart(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.xStart)
}
inline float StandardFontsFile_CharacterBlock_LineRecord::_internal_xstart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xstart_;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_xstart(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xstart_ = value;
}

// optional float yStart = 2;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_ystart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_ystart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ystart_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float StandardFontsFile_CharacterBlock_LineRecord::ystart() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.yStart)
  return _internal_ystart();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_ystart(float value) {
  _internal_set_ystart(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.yStart)
}
inline float StandardFontsFile_CharacterBlock_LineRecord::_internal_ystart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ystart_;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_ystart(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ystart_ = value;
}

// optional float xEnd = 3;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_xend() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_xend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xend_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float StandardFontsFile_CharacterBlock_LineRecord::xend() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.xEnd)
  return _internal_xend();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_xend(float value) {
  _internal_set_xend(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.xEnd)
}
inline float StandardFontsFile_CharacterBlock_LineRecord::_internal_xend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xend_;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_xend(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xend_ = value;
}

// optional float yEnd = 4;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_yend() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_yend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yend_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float StandardFontsFile_CharacterBlock_LineRecord::yend() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.yEnd)
  return _internal_yend();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_yend(float value) {
  _internal_set_yend(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.yEnd)
}
inline float StandardFontsFile_CharacterBlock_LineRecord::_internal_yend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yend_;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_yend(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yend_ = value;
}

// optional .Odb.Lib.Protobuf.Polarity polarity = 5;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_polarity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_polarity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.polarity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::Odb::Lib::Protobuf::Polarity StandardFontsFile_CharacterBlock_LineRecord::polarity() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.polarity)
  return _internal_polarity();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_polarity(::Odb::Lib::Protobuf::Polarity value) {
  _internal_set_polarity(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.polarity)
}
inline ::Odb::Lib::Protobuf::Polarity StandardFontsFile_CharacterBlock_LineRecord::_internal_polarity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::Polarity>(_impl_.polarity_);
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_polarity(::Odb::Lib::Protobuf::Polarity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.polarity_ = value;
}

// optional .Odb.Lib.Protobuf.LineShape shape = 6;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_shape() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::Odb::Lib::Protobuf::LineShape StandardFontsFile_CharacterBlock_LineRecord::shape() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.shape)
  return _internal_shape();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_shape(::Odb::Lib::Protobuf::LineShape value) {
  _internal_set_shape(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.shape)
}
inline ::Odb::Lib::Protobuf::LineShape StandardFontsFile_CharacterBlock_LineRecord::_internal_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::LineShape>(_impl_.shape_);
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_shape(::Odb::Lib::Protobuf::LineShape value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shape_ = value;
}

// optional float width = 7;
inline bool StandardFontsFile_CharacterBlock_LineRecord::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float StandardFontsFile_CharacterBlock_LineRecord::width() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.width)
  return _internal_width();
}
inline void StandardFontsFile_CharacterBlock_LineRecord::set_width(float value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord.width)
}
inline float StandardFontsFile_CharacterBlock_LineRecord::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void StandardFontsFile_CharacterBlock_LineRecord::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// -------------------------------------------------------------------

// StandardFontsFile_CharacterBlock

// optional string character = 1;
inline bool StandardFontsFile_CharacterBlock::has_character() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StandardFontsFile_CharacterBlock::clear_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.character_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StandardFontsFile_CharacterBlock::character() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character)
  return _internal_character();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StandardFontsFile_CharacterBlock::set_character(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.character_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character)
}
inline std::string* StandardFontsFile_CharacterBlock::mutable_character() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_character();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character)
  return _s;
}
inline const std::string& StandardFontsFile_CharacterBlock::_internal_character() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.character_.Get();
}
inline void StandardFontsFile_CharacterBlock::_internal_set_character(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.character_.Set(value, GetArena());
}
inline std::string* StandardFontsFile_CharacterBlock::_internal_mutable_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.character_.Mutable( GetArena());
}
inline std::string* StandardFontsFile_CharacterBlock::release_character() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.character_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.character_.Set("", GetArena());
  }
  return released;
}
inline void StandardFontsFile_CharacterBlock::set_allocated_character(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.character_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.character_.IsDefault()) {
    _impl_.character_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character)
}

// repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
inline int StandardFontsFile_CharacterBlock::_internal_m_linerecords_size() const {
  return _internal_m_linerecords().size();
}
inline int StandardFontsFile_CharacterBlock::m_linerecords_size() const {
  return _internal_m_linerecords_size();
}
inline void StandardFontsFile_CharacterBlock::clear_m_linerecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m_linerecords_.Clear();
}
inline ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord* StandardFontsFile_CharacterBlock::mutable_m_linerecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.m_lineRecords)
  return _internal_mutable_m_linerecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>* StandardFontsFile_CharacterBlock::mutable_m_linerecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.m_lineRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_m_linerecords();
}
inline const ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord& StandardFontsFile_CharacterBlock::m_linerecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.m_lineRecords)
  return _internal_m_linerecords().Get(index);
}
inline ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord* StandardFontsFile_CharacterBlock::add_m_linerecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord* _add = _internal_mutable_m_linerecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.m_lineRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>& StandardFontsFile_CharacterBlock::m_linerecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.m_lineRecords)
  return _internal_m_linerecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>&
StandardFontsFile_CharacterBlock::_internal_m_linerecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m_linerecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>*
StandardFontsFile_CharacterBlock::_internal_mutable_m_linerecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.m_linerecords_;
}

// -------------------------------------------------------------------

// StandardFontsFile

// optional float xSize = 1;
inline bool StandardFontsFile::has_xsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StandardFontsFile::clear_xsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xsize_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float StandardFontsFile::xsize() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.xSize)
  return _internal_xsize();
}
inline void StandardFontsFile::set_xsize(float value) {
  _internal_set_xsize(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.xSize)
}
inline float StandardFontsFile::_internal_xsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xsize_;
}
inline void StandardFontsFile::_internal_set_xsize(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xsize_ = value;
}

// optional float ySize = 2;
inline bool StandardFontsFile::has_ysize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StandardFontsFile::clear_ysize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ysize_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float StandardFontsFile::ysize() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.ySize)
  return _internal_ysize();
}
inline void StandardFontsFile::set_ysize(float value) {
  _internal_set_ysize(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.ySize)
}
inline float StandardFontsFile::_internal_ysize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ysize_;
}
inline void StandardFontsFile::_internal_set_ysize(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ysize_ = value;
}

// optional float offset = 3;
inline bool StandardFontsFile::has_offset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StandardFontsFile::clear_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float StandardFontsFile::offset() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.offset)
  return _internal_offset();
}
inline void StandardFontsFile::set_offset(float value) {
  _internal_set_offset(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StandardFontsFile.offset)
}
inline float StandardFontsFile::_internal_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offset_;
}
inline void StandardFontsFile::_internal_set_offset(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offset_ = value;
}

// repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
inline int StandardFontsFile::_internal_m_characterblocks_size() const {
  return _internal_m_characterblocks().size();
}
inline int StandardFontsFile::m_characterblocks_size() const {
  return _internal_m_characterblocks_size();
}
inline void StandardFontsFile::clear_m_characterblocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.m_characterblocks_.Clear();
}
inline ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock* StandardFontsFile::mutable_m_characterblocks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StandardFontsFile.m_characterBlocks)
  return _internal_mutable_m_characterblocks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>* StandardFontsFile::mutable_m_characterblocks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.StandardFontsFile.m_characterBlocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_m_characterblocks();
}
inline const ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock& StandardFontsFile::m_characterblocks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StandardFontsFile.m_characterBlocks)
  return _internal_m_characterblocks().Get(index);
}
inline ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock* StandardFontsFile::add_m_characterblocks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock* _add = _internal_mutable_m_characterblocks()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.StandardFontsFile.m_characterBlocks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>& StandardFontsFile::m_characterblocks() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.StandardFontsFile.m_characterBlocks)
  return _internal_m_characterblocks();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>&
StandardFontsFile::_internal_m_characterblocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.m_characterblocks_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>*
StandardFontsFile::_internal_mutable_m_characterblocks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.m_characterblocks_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // standardfontsfile_2eproto_2epb_2eh
