// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: featuresfile.proto
// Protobuf C++ Version: 5.29.2

#include "featuresfile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {
              template <typename>
PROTOBUF_CONSTEXPR FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR FeaturesFile_SymbolNamesByNameEntry_DoNotUse::FeaturesFile_SymbolNamesByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : FeaturesFile_SymbolNamesByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : FeaturesFile_SymbolNamesByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FeaturesFile_SymbolNamesByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeaturesFile_SymbolNamesByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeaturesFile_SymbolNamesByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FeaturesFile_SymbolNamesByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeaturesFile_SymbolNamesByNameEntry_DoNotUseDefaultTypeInternal _FeaturesFile_SymbolNamesByNameEntry_DoNotUse_default_instance_;

inline constexpr FeaturesFile_FeatureRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contourpolygons_{},
        attributelookuptable_{},
        font_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_Type >(0)},
        xs_{0},
        ys_{0},
        xe_{0},
        ye_{0},
        x_{0},
        y_{0},
        apt_def_{0},
        apt_def_symbol_num_{0},
        apt_def_resize_factor_{0},
        xc_{0},
        yc_{0},
        cw_{false},
        xsize_{0},
        ysize_{0},
        width_factor_{0},
        version_{0},
        sym_num_{0},
        polarity_{static_cast< ::Odb::Lib::Protobuf::Polarity >(0)},
        dcode_{0},
        atr_{0},
        id_{0u},
        orient_def_{0},
        orient_def_rotation_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeaturesFile_FeatureRecord::FeaturesFile_FeatureRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeaturesFile_FeatureRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeaturesFile_FeatureRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeaturesFile_FeatureRecordDefaultTypeInternal() {}
  union {
    FeaturesFile_FeatureRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeaturesFile_FeatureRecordDefaultTypeInternal _FeaturesFile_FeatureRecord_default_instance_;

inline constexpr FeaturesFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        featurerecords_{},
        symbolnamesbyname_{},
        units_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        directory_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        numfeatures_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FeaturesFile::FeaturesFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeaturesFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeaturesFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeaturesFileDefaultTypeInternal() {}
  union {
    FeaturesFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeaturesFileDefaultTypeInternal _FeaturesFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_featuresfile_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_featuresfile_2eproto = nullptr;
const ::uint32_t
    TableStruct_featuresfile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.xs_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.ys_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.xe_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.ye_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.apt_def_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.apt_def_symbol_num_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.apt_def_resize_factor_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.xc_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.yc_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.cw_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.font_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.xsize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.ysize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.width_factor_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.sym_num_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.polarity_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.dcode_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.atr_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.orient_def_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.orient_def_rotation_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.contourpolygons_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord, _impl_.attributelookuptable_),
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        0,
        16,
        17,
        18,
        1,
        19,
        20,
        21,
        22,
        23,
        2,
        24,
        25,
        26,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.units_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.directory_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.numfeatures_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.featurerecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::FeaturesFile, _impl_.symbolnamesbyname_),
        0,
        3,
        1,
        2,
        4,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse)},
        {12, 49, -1, sizeof(::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord)},
        {78, 88, -1, sizeof(::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse)},
        {90, 105, -1, sizeof(::Odb::Lib::Protobuf::FeaturesFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_FeaturesFile_FeatureRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_FeaturesFile_SymbolNamesByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_FeaturesFile_default_instance_._instance,
};
const char descriptor_table_protodef_featuresfile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022featuresfile.proto\022\020Odb.Lib.Protobuf\032\014"
    "common.proto\032\013enums.proto\032\020symbolname.pr"
    "oto\"\207\r\n\014FeaturesFile\022\022\n\005units\030\001 \001(\tH\000\210\001\001"
    "\022\017\n\002id\030\002 \001(\rH\001\210\001\001\022\021\n\004path\030\005 \001(\tH\002\210\001\001\022\026\n\t"
    "directory\030\006 \001(\tH\003\210\001\001\022\030\n\013numFeatures\030\007 \001("
    "\005H\004\210\001\001\022D\n\016featureRecords\030\010 \003(\0132,.Odb.Lib"
    ".Protobuf.FeaturesFile.FeatureRecord\022P\n\021"
    "symbolNamesByName\030\t \003(\01325.Odb.Lib.Protob"
    "uf.FeaturesFile.SymbolNamesByNameEntry\032\344"
    "\t\n\rFeatureRecord\022D\n\004type\030\002 \001(\01621.Odb.Lib"
    ".Protobuf.FeaturesFile.FeatureRecord.Typ"
    "eH\000\210\001\001\022\017\n\002xs\030\003 \001(\002H\001\210\001\001\022\017\n\002ys\030\004 \001(\002H\002\210\001\001"
    "\022\017\n\002xe\030\005 \001(\002H\003\210\001\001\022\017\n\002ye\030\006 \001(\002H\004\210\001\001\022\016\n\001x\030"
    "\007 \001(\002H\005\210\001\001\022\016\n\001y\030\010 \001(\002H\006\210\001\001\022\024\n\007apt_def\030\t "
    "\001(\005H\007\210\001\001\022\037\n\022apt_def_symbol_num\030\n \001(\005H\010\210\001"
    "\001\022\"\n\025apt_def_resize_factor\030\013 \001(\002H\t\210\001\001\022\017\n"
    "\002xc\030\014 \001(\002H\n\210\001\001\022\017\n\002yc\030\r \001(\002H\013\210\001\001\022\017\n\002cw\030\016 "
    "\001(\010H\014\210\001\001\022\021\n\004font\030\017 \001(\tH\r\210\001\001\022\022\n\005xsize\030\020 \001"
    "(\002H\016\210\001\001\022\022\n\005ysize\030\021 \001(\002H\017\210\001\001\022\031\n\014width_fac"
    "tor\030\022 \001(\002H\020\210\001\001\022\021\n\004text\030\023 \001(\tH\021\210\001\001\022\024\n\007ver"
    "sion\030\024 \001(\005H\022\210\001\001\022\024\n\007sym_num\030\025 \001(\005H\023\210\001\001\0221\n"
    "\010polarity\030\026 \001(\0162\032.Odb.Lib.Protobuf.Polar"
    "ityH\024\210\001\001\022\022\n\005dcode\030\027 \001(\005H\025\210\001\001\022\020\n\003atr\030\030 \001("
    "\005H\026\210\001\001\022\022\n\005value\030\031 \001(\tH\027\210\001\001\022\017\n\002id\030\032 \001(\rH\030"
    "\210\001\001\022\027\n\norient_def\030\033 \001(\005H\031\210\001\001\022 \n\023orient_d"
    "ef_rotation\030\034 \001(\002H\032\210\001\001\0229\n\017contourPolygon"
    "s\030\001 \003(\0132 .Odb.Lib.Protobuf.ContourPolygo"
    "n\022d\n\024attributeLookupTable\030\035 \003(\0132F.Odb.Li"
    "b.Protobuf.FeaturesFile.FeatureRecord.At"
    "tributeLookupTableEntry\032;\n\031AttributeLook"
    "upTableEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t"
    ":\0028\001\"F\n\004Type\022\007\n\003Arc\020\000\022\007\n\003Pad\020\001\022\013\n\007Surfac"
    "e\020\002\022\013\n\007Barcode\020\003\022\010\n\004Text\020\004\022\010\n\004Line\020\005B\007\n\005"
    "_typeB\005\n\003_xsB\005\n\003_ysB\005\n\003_xeB\005\n\003_yeB\004\n\002_xB"
    "\004\n\002_yB\n\n\010_apt_defB\025\n\023_apt_def_symbol_num"
    "B\030\n\026_apt_def_resize_factorB\005\n\003_xcB\005\n\003_yc"
    "B\005\n\003_cwB\007\n\005_fontB\010\n\006_xsizeB\010\n\006_ysizeB\017\n\r"
    "_width_factorB\007\n\005_textB\n\n\010_versionB\n\n\010_s"
    "ym_numB\013\n\t_polarityB\010\n\006_dcodeB\006\n\004_atrB\010\n"
    "\006_valueB\005\n\003_idB\r\n\013_orient_defB\026\n\024_orient"
    "_def_rotation\032V\n\026SymbolNamesByNameEntry\022"
    "\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.Odb.Lib.Pr"
    "otobuf.SymbolName:\0028\001B\010\n\006_unitsB\005\n\003_idB\007"
    "\n\005_pathB\014\n\n_directoryB\016\n\014_numFeaturesb\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_featuresfile_2eproto_deps[3] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_enums_2eproto,
        &::descriptor_table_symbolname_2eproto,
};
static ::absl::once_flag descriptor_table_featuresfile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_featuresfile_2eproto = {
    false,
    false,
    1765,
    descriptor_table_protodef_featuresfile_2eproto,
    "featuresfile.proto",
    &descriptor_table_featuresfile_2eproto_once,
    descriptor_table_featuresfile_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_featuresfile_2eproto::offsets,
    file_level_enum_descriptors_featuresfile_2eproto,
    file_level_service_descriptors_featuresfile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::google::protobuf::EnumDescriptor* FeaturesFile_FeatureRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_featuresfile_2eproto);
  return file_level_enum_descriptors_featuresfile_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t FeaturesFile_FeatureRecord_Type_internal_data_[] = {
    393216u, 0u, };
bool FeaturesFile_FeatureRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Arc;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Pad;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Surface;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Barcode;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Text;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Line;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Type_MIN;
constexpr FeaturesFile_FeatureRecord_Type FeaturesFile_FeatureRecord::Type_MAX;
constexpr int FeaturesFile_FeatureRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse() : SuperType() {}
              FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse(arena);
              }
              constexpr auto FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse),
                                                          alignof(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_featuresfile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 86, 2> FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\105\3\5\0\0\0\0\0"
    "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.AttributeLookupTableEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class FeaturesFile_FeatureRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FeaturesFile_FeatureRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_._has_bits_);
};

void FeaturesFile_FeatureRecord::clear_contourpolygons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contourpolygons_.Clear();
}
FeaturesFile_FeatureRecord::FeaturesFile_FeatureRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
}
inline PROTOBUF_NDEBUG_INLINE FeaturesFile_FeatureRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contourpolygons_{visibility, arena, from.contourpolygons_},
        attributelookuptable_{visibility, arena, from.attributelookuptable_},
        font_(arena, from.font_),
        text_(arena, from.text_),
        value_(arena, from.value_) {}

FeaturesFile_FeatureRecord::FeaturesFile_FeatureRecord(
    ::google::protobuf::Arena* arena,
    const FeaturesFile_FeatureRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FeaturesFile_FeatureRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, orient_def_rotation_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::orient_def_rotation_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
}
inline PROTOBUF_NDEBUG_INLINE FeaturesFile_FeatureRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contourpolygons_{visibility, arena},
        attributelookuptable_{visibility, arena},
        font_(arena),
        text_(arena),
        value_(arena) {}

inline void FeaturesFile_FeatureRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, orient_def_rotation_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::orient_def_rotation_));
}
FeaturesFile_FeatureRecord::~FeaturesFile_FeatureRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
  SharedDtor(*this);
}
inline void FeaturesFile_FeatureRecord::SharedDtor(MessageLite& self) {
  FeaturesFile_FeatureRecord& this_ = static_cast<FeaturesFile_FeatureRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.font_.Destroy();
  this_._impl_.text_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FeaturesFile_FeatureRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FeaturesFile_FeatureRecord(arena);
}
constexpr auto FeaturesFile_FeatureRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.contourpolygons_) +
          decltype(FeaturesFile_FeatureRecord::_impl_.contourpolygons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.attributelookuptable_) +
          decltype(FeaturesFile_FeatureRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.attributelookuptable_) +
          decltype(FeaturesFile_FeatureRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FeaturesFile_FeatureRecord), alignof(FeaturesFile_FeatureRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FeaturesFile_FeatureRecord::PlacementNew_,
                                 sizeof(FeaturesFile_FeatureRecord),
                                 alignof(FeaturesFile_FeatureRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FeaturesFile_FeatureRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FeaturesFile_FeatureRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FeaturesFile_FeatureRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FeaturesFile_FeatureRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FeaturesFile_FeatureRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FeaturesFile_FeatureRecord>(), &FeaturesFile_FeatureRecord::ByteSizeLong,
            &FeaturesFile_FeatureRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_._cached_size_),
        false,
    },
    &FeaturesFile_FeatureRecord::kDescriptorMethods,
    &descriptor_table_featuresfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FeaturesFile_FeatureRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 29, 2, 109, 2> FeaturesFile_FeatureRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3758096384,  // skipmap
    offsetof(decltype(_table_), field_entries),
    29,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.contourpolygons_)}},
    // optional .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeaturesFile_FeatureRecord, _impl_.type_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.type_)}},
    // optional float xs = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 4, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xs_)}},
    // optional float ys = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 5, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ys_)}},
    // optional float xe = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 6, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xe_)}},
    // optional float ye = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 7, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ye_)}},
    // optional float x = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 8, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.x_)}},
    // optional float y = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 9, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.y_)}},
    // optional int32 apt_def = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeaturesFile_FeatureRecord, _impl_.apt_def_), 10>(),
     {72, 10, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_)}},
    // optional int32 apt_def_symbol_num = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeaturesFile_FeatureRecord, _impl_.apt_def_symbol_num_), 11>(),
     {80, 11, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_symbol_num_)}},
    // optional float apt_def_resize_factor = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 12, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_resize_factor_)}},
    // optional float xc = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 13, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xc_)}},
    // optional float yc = 13;
    {::_pbi::TcParser::FastF32S1,
     {109, 14, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.yc_)}},
    // optional bool cw = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FeaturesFile_FeatureRecord, _impl_.cw_), 15>(),
     {112, 15, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.cw_)}},
    // optional string font = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 0, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.font_)}},
    // optional float xsize = 16;
    {::_pbi::TcParser::FastF32S2,
     {389, 16, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xsize_)}},
    // optional float ysize = 17;
    {::_pbi::TcParser::FastF32S2,
     {397, 17, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ysize_)}},
    // optional float width_factor = 18;
    {::_pbi::TcParser::FastF32S2,
     {405, 18, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.width_factor_)}},
    // optional string text = 19;
    {::_pbi::TcParser::FastUS2,
     {410, 1, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.text_)}},
    // optional int32 version = 20;
    {::_pbi::TcParser::FastV32S2,
     {416, 19, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.version_)}},
    // optional int32 sym_num = 21;
    {::_pbi::TcParser::FastV32S2,
     {424, 20, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.sym_num_)}},
    // optional .Odb.Lib.Protobuf.Polarity polarity = 22;
    {::_pbi::TcParser::FastV32S2,
     {432, 21, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.polarity_)}},
    // optional int32 dcode = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 22, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.dcode_)}},
    // optional int32 atr = 24;
    {::_pbi::TcParser::FastV32S2,
     {448, 23, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.atr_)}},
    // optional string value = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 2, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.value_)}},
    // optional uint32 id = 26;
    {::_pbi::TcParser::FastV32S2,
     {464, 24, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.id_)}},
    // optional int32 orient_def = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 25, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.orient_def_)}},
    // optional float orient_def_rotation = 28;
    {::_pbi::TcParser::FastF32S2,
     {485, 26, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.orient_def_rotation_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 1;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.contourpolygons_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional float xs = 3;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xs_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float ys = 4;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ys_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float xe = 5;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xe_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float ye = 6;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ye_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float x = 7;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.x_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 8;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.y_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 apt_def = 9;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 apt_def_symbol_num = 10;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_symbol_num_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float apt_def_resize_factor = 11;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.apt_def_resize_factor_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float xc = 12;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xc_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yc = 13;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.yc_), _Internal::kHasBitsOffset + 14, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool cw = 14;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.cw_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string font = 15;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.font_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional float xsize = 16;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.xsize_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float ysize = 17;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.ysize_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float width_factor = 18;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.width_factor_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string text = 19;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.text_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 version = 20;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.version_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 sym_num = 21;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.sym_num_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .Odb.Lib.Protobuf.Polarity polarity = 22;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.polarity_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional int32 dcode = 23;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.dcode_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 atr = 24;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.atr_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string value = 25;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 id = 26;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.id_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional int32 orient_def = 27;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.orient_def_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float orient_def_rotation = 28;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.orient_def_rotation_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // map<string, string> attributeLookupTable = 29;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.attributelookuptable_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ContourPolygon>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FeaturesFile_FeatureRecord()._impl_.attributelookuptable_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\53\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\0\5\0\0\0\24\0\0"
    "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord"
    "font"
    "text"
    "value"
    "attributeLookupTable"
  }},
};

PROTOBUF_NOINLINE void FeaturesFile_FeatureRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contourpolygons_.Clear();
  _impl_.attributelookuptable_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.font_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.text_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ye_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.ye_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.cw_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.cw_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.xsize_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.atr_) -
        reinterpret_cast<char*>(&_impl_.xsize_)) + sizeof(_impl_.atr_));
  }
  if (cached_has_bits & 0x07000000u) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.orient_def_rotation_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.orient_def_rotation_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FeaturesFile_FeatureRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FeaturesFile_FeatureRecord& this_ = static_cast<const FeaturesFile_FeatureRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FeaturesFile_FeatureRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FeaturesFile_FeatureRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contourpolygons_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contourpolygons().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.Type type = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // optional float xs = 3;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_xs(), target);
          }

          // optional float ys = 4;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_ys(), target);
          }

          // optional float xe = 5;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_xe(), target);
          }

          // optional float ye = 6;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_ye(), target);
          }

          // optional float x = 7;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_x(), target);
          }

          // optional float y = 8;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_y(), target);
          }

          // optional int32 apt_def = 9;
          if (cached_has_bits & 0x00000400u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<9>(
                    stream, this_._internal_apt_def(), target);
          }

          // optional int32 apt_def_symbol_num = 10;
          if (cached_has_bits & 0x00000800u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<10>(
                    stream, this_._internal_apt_def_symbol_num(), target);
          }

          // optional float apt_def_resize_factor = 11;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_apt_def_resize_factor(), target);
          }

          // optional float xc = 12;
          if (cached_has_bits & 0x00002000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_xc(), target);
          }

          // optional float yc = 13;
          if (cached_has_bits & 0x00004000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                13, this_._internal_yc(), target);
          }

          // optional bool cw = 14;
          if (cached_has_bits & 0x00008000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_cw(), target);
          }

          // optional string font = 15;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_font();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.font");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          // optional float xsize = 16;
          if (cached_has_bits & 0x00010000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                16, this_._internal_xsize(), target);
          }

          // optional float ysize = 17;
          if (cached_has_bits & 0x00020000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                17, this_._internal_ysize(), target);
          }

          // optional float width_factor = 18;
          if (cached_has_bits & 0x00040000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                18, this_._internal_width_factor(), target);
          }

          // optional string text = 19;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_text();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.text");
            target = stream->WriteStringMaybeAliased(19, _s, target);
          }

          // optional int32 version = 20;
          if (cached_has_bits & 0x00080000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                20, this_._internal_version(), target);
          }

          // optional int32 sym_num = 21;
          if (cached_has_bits & 0x00100000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                21, this_._internal_sym_num(), target);
          }

          // optional .Odb.Lib.Protobuf.Polarity polarity = 22;
          if (cached_has_bits & 0x00200000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                22, this_._internal_polarity(), target);
          }

          // optional int32 dcode = 23;
          if (cached_has_bits & 0x00400000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                23, this_._internal_dcode(), target);
          }

          // optional int32 atr = 24;
          if (cached_has_bits & 0x00800000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                24, this_._internal_atr(), target);
          }

          // optional string value = 25;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.value");
            target = stream->WriteStringMaybeAliased(25, _s, target);
          }

          // optional uint32 id = 26;
          if (cached_has_bits & 0x01000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                26, this_._internal_id(), target);
          }

          // optional int32 orient_def = 27;
          if (cached_has_bits & 0x02000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteInt32ToArray(
                27, this_._internal_orient_def(), target);
          }

          // optional float orient_def_rotation = 28;
          if (cached_has_bits & 0x04000000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                28, this_._internal_orient_def_rotation(), target);
          }

          // map<string, string> attributeLookupTable = 29;
          if (!this_._internal_attributelookuptable().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_attributelookuptable();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    29, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.attributeLookupTable");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    29, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.attributeLookupTable");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FeaturesFile_FeatureRecord::ByteSizeLong(const MessageLite& base) {
          const FeaturesFile_FeatureRecord& this_ = static_cast<const FeaturesFile_FeatureRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FeaturesFile_FeatureRecord::ByteSizeLong() const {
          const FeaturesFile_FeatureRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 1;
            {
              total_size += 1UL * this_._internal_contourpolygons_size();
              for (const auto& msg : this_._internal_contourpolygons()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> attributeLookupTable = 29;
            {
              total_size +=
                  2 * ::google::protobuf::internal::FromIntSize(this_._internal_attributelookuptable_size());
              for (const auto& entry : this_._internal_attributelookuptable()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string font = 15;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_font());
            }
            // optional string text = 19;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_text());
            }
            // optional string value = 25;
            if (cached_has_bits & 0x00000004u) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // optional .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord.Type type = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional float xs = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional float ys = 4;
            if (cached_has_bits & 0x00000020u) {
              total_size += 5;
            }
            // optional float xe = 5;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
            // optional float ye = 6;
            if (cached_has_bits & 0x00000080u) {
              total_size += 5;
            }
          }
          if (cached_has_bits & 0x0000ff00u) {
            // optional float x = 7;
            if (cached_has_bits & 0x00000100u) {
              total_size += 5;
            }
            // optional float y = 8;
            if (cached_has_bits & 0x00000200u) {
              total_size += 5;
            }
            // optional int32 apt_def = 9;
            if (cached_has_bits & 0x00000400u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_apt_def());
            }
            // optional int32 apt_def_symbol_num = 10;
            if (cached_has_bits & 0x00000800u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_apt_def_symbol_num());
            }
            // optional float apt_def_resize_factor = 11;
            if (cached_has_bits & 0x00001000u) {
              total_size += 5;
            }
            // optional float xc = 12;
            if (cached_has_bits & 0x00002000u) {
              total_size += 5;
            }
            // optional float yc = 13;
            if (cached_has_bits & 0x00004000u) {
              total_size += 5;
            }
            // optional bool cw = 14;
            if (cached_has_bits & 0x00008000u) {
              total_size += 2;
            }
          }
          if (cached_has_bits & 0x00ff0000u) {
            // optional float xsize = 16;
            if (cached_has_bits & 0x00010000u) {
              total_size += 6;
            }
            // optional float ysize = 17;
            if (cached_has_bits & 0x00020000u) {
              total_size += 6;
            }
            // optional float width_factor = 18;
            if (cached_has_bits & 0x00040000u) {
              total_size += 6;
            }
            // optional int32 version = 20;
            if (cached_has_bits & 0x00080000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_version());
            }
            // optional int32 sym_num = 21;
            if (cached_has_bits & 0x00100000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_sym_num());
            }
            // optional .Odb.Lib.Protobuf.Polarity polarity = 22;
            if (cached_has_bits & 0x00200000u) {
              total_size += 2 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_polarity());
            }
            // optional int32 dcode = 23;
            if (cached_has_bits & 0x00400000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_dcode());
            }
            // optional int32 atr = 24;
            if (cached_has_bits & 0x00800000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_atr());
            }
          }
          if (cached_has_bits & 0x07000000u) {
            // optional uint32 id = 26;
            if (cached_has_bits & 0x01000000u) {
              total_size += 2 + ::_pbi::WireFormatLite::UInt32Size(
                                              this_._internal_id());
            }
            // optional int32 orient_def = 27;
            if (cached_has_bits & 0x02000000u) {
              total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                              this_._internal_orient_def());
            }
            // optional float orient_def_rotation = 28;
            if (cached_has_bits & 0x04000000u) {
              total_size += 6;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FeaturesFile_FeatureRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeaturesFile_FeatureRecord*>(&to_msg);
  auto& from = static_cast<const FeaturesFile_FeatureRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contourpolygons()->MergeFrom(
      from._internal_contourpolygons());
  _this->_impl_.attributelookuptable_.MergeFrom(from._impl_.attributelookuptable_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_font(from._internal_font());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_text(from._internal_text());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_value(from._internal_value());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.xs_ = from._impl_.xs_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ys_ = from._impl_.ys_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.xe_ = from._impl_.xe_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.ye_ = from._impl_.ye_;
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.apt_def_ = from._impl_.apt_def_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.apt_def_symbol_num_ = from._impl_.apt_def_symbol_num_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.apt_def_resize_factor_ = from._impl_.apt_def_resize_factor_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.xc_ = from._impl_.xc_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.yc_ = from._impl_.yc_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.cw_ = from._impl_.cw_;
    }
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.xsize_ = from._impl_.xsize_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.ysize_ = from._impl_.ysize_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.width_factor_ = from._impl_.width_factor_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.version_ = from._impl_.version_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.sym_num_ = from._impl_.sym_num_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.polarity_ = from._impl_.polarity_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.dcode_ = from._impl_.dcode_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.atr_ = from._impl_.atr_;
    }
  }
  if (cached_has_bits & 0x07000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.orient_def_ = from._impl_.orient_def_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.orient_def_rotation_ = from._impl_.orient_def_rotation_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeaturesFile_FeatureRecord::CopyFrom(const FeaturesFile_FeatureRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.FeaturesFile.FeatureRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FeaturesFile_FeatureRecord::InternalSwap(FeaturesFile_FeatureRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contourpolygons_.InternalSwap(&other->_impl_.contourpolygons_);
  _impl_.attributelookuptable_.InternalSwap(&other->_impl_.attributelookuptable_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.font_, &other->_impl_.font_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.orient_def_rotation_)
      + sizeof(FeaturesFile_FeatureRecord::_impl_.orient_def_rotation_)
      - PROTOBUF_FIELD_OFFSET(FeaturesFile_FeatureRecord, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata FeaturesFile_FeatureRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              FeaturesFile_SymbolNamesByNameEntry_DoNotUse::FeaturesFile_SymbolNamesByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              FeaturesFile_SymbolNamesByNameEntry_DoNotUse::FeaturesFile_SymbolNamesByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              FeaturesFile_SymbolNamesByNameEntry_DoNotUse::FeaturesFile_SymbolNamesByNameEntry_DoNotUse() : SuperType() {}
              FeaturesFile_SymbolNamesByNameEntry_DoNotUse::FeaturesFile_SymbolNamesByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* FeaturesFile_SymbolNamesByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) FeaturesFile_SymbolNamesByNameEntry_DoNotUse(arena);
              }
              constexpr auto FeaturesFile_SymbolNamesByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FeaturesFile_SymbolNamesByNameEntry_DoNotUse),
                                                          alignof(FeaturesFile_SymbolNamesByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull FeaturesFile_SymbolNamesByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_FeaturesFile_SymbolNamesByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &FeaturesFile_SymbolNamesByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<FeaturesFile_SymbolNamesByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &FeaturesFile_SymbolNamesByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &FeaturesFile_SymbolNamesByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &FeaturesFile_SymbolNamesByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_featuresfile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* FeaturesFile_SymbolNamesByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 64, 2> FeaturesFile_SymbolNamesByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FeaturesFile_SymbolNamesByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.SymbolName value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.SymbolName value = 2;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile_SymbolNamesByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::SymbolName>()},
  }}, {{
    "\64\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.FeaturesFile.SymbolNamesByNameEntry"
    "key"
  }},
};

// ===================================================================

class FeaturesFile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FeaturesFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_._has_bits_);
};

void FeaturesFile::clear_symbolnamesbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbolnamesbyname_.Clear();
}
FeaturesFile::FeaturesFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.FeaturesFile)
}
inline PROTOBUF_NDEBUG_INLINE FeaturesFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::FeaturesFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        featurerecords_{visibility, arena, from.featurerecords_},
        symbolnamesbyname_{visibility, arena, from.symbolnamesbyname_},
        units_(arena, from.units_),
        path_(arena, from.path_),
        directory_(arena, from.directory_) {}

FeaturesFile::FeaturesFile(
    ::google::protobuf::Arena* arena,
    const FeaturesFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FeaturesFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, numfeatures_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::numfeatures_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.FeaturesFile)
}
inline PROTOBUF_NDEBUG_INLINE FeaturesFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        featurerecords_{visibility, arena},
        symbolnamesbyname_{visibility, arena},
        units_(arena),
        path_(arena),
        directory_(arena) {}

inline void FeaturesFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, numfeatures_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::numfeatures_));
}
FeaturesFile::~FeaturesFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.FeaturesFile)
  SharedDtor(*this);
}
inline void FeaturesFile::SharedDtor(MessageLite& self) {
  FeaturesFile& this_ = static_cast<FeaturesFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.units_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.directory_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FeaturesFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FeaturesFile(arena);
}
constexpr auto FeaturesFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.featurerecords_) +
          decltype(FeaturesFile::_impl_.featurerecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.symbolnamesbyname_) +
          decltype(FeaturesFile::_impl_.symbolnamesbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.symbolnamesbyname_) +
          decltype(FeaturesFile::_impl_.symbolnamesbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FeaturesFile), alignof(FeaturesFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FeaturesFile::PlacementNew_,
                                 sizeof(FeaturesFile),
                                 alignof(FeaturesFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FeaturesFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FeaturesFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FeaturesFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FeaturesFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FeaturesFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FeaturesFile>(), &FeaturesFile::ByteSizeLong,
            &FeaturesFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_._cached_size_),
        false,
    },
    &FeaturesFile::kDescriptorMethods,
    &descriptor_table_featuresfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FeaturesFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 73, 2> FeaturesFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_._has_bits_),
    0, // no _extensions_
    9, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966796,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FeaturesFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord featureRecords = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.featurerecords_)}},
    // optional string units = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.units_)}},
    // optional uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeaturesFile, _impl_.id_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string path = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.path_)}},
    // optional string directory = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.directory_)}},
    // optional int32 numFeatures = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeaturesFile, _impl_.numfeatures_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.numfeatures_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string units = 1;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.units_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string path = 5;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string directory = 6;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.directory_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 numFeatures = 7;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.numfeatures_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord featureRecords = 8;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.featurerecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.SymbolName> symbolNamesByName = 9;
    {PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.symbolnamesbyname_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::FeaturesFile_FeatureRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FeaturesFile()._impl_.symbolnamesbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::SymbolName>()},
  }}, {{
    "\35\5\0\4\11\0\0\21"
    "Odb.Lib.Protobuf.FeaturesFile"
    "units"
    "path"
    "directory"
    "symbolNamesByName"
  }},
};

PROTOBUF_NOINLINE void FeaturesFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.FeaturesFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.featurerecords_.Clear();
  _impl_.symbolnamesbyname_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.units_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.directory_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.numfeatures_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.numfeatures_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FeaturesFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FeaturesFile& this_ = static_cast<const FeaturesFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FeaturesFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FeaturesFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.FeaturesFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string units = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_units();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.units");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional uint32 id = 2;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_id(), target);
          }

          // optional string path = 5;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.path");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // optional string directory = 6;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_directory();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.directory");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // optional int32 numFeatures = 7;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_numfeatures(), target);
          }

          // repeated .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord featureRecords = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_featurerecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_featurerecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .Odb.Lib.Protobuf.SymbolName> symbolNamesByName = 9;
          if (!this_._internal_symbolnamesbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::SymbolName>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::SymbolName,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_symbolnamesbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.symbolNamesByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.FeaturesFile.symbolNamesByName");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.FeaturesFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FeaturesFile::ByteSizeLong(const MessageLite& base) {
          const FeaturesFile& this_ = static_cast<const FeaturesFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FeaturesFile::ByteSizeLong() const {
          const FeaturesFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.FeaturesFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.FeaturesFile.FeatureRecord featureRecords = 8;
            {
              total_size += 1UL * this_._internal_featurerecords_size();
              for (const auto& msg : this_._internal_featurerecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .Odb.Lib.Protobuf.SymbolName> symbolNamesByName = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_symbolnamesbyname_size());
              for (const auto& entry : this_._internal_symbolnamesbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::SymbolName,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional string units = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_units());
            }
            // optional string path = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // optional string directory = 6;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_directory());
            }
            // optional uint32 id = 2;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
            // optional int32 numFeatures = 7;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_numfeatures());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FeaturesFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeaturesFile*>(&to_msg);
  auto& from = static_cast<const FeaturesFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.FeaturesFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_featurerecords()->MergeFrom(
      from._internal_featurerecords());
  _this->_impl_.symbolnamesbyname_.MergeFrom(from._impl_.symbolnamesbyname_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_units(from._internal_units());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_directory(from._internal_directory());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.numfeatures_ = from._impl_.numfeatures_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeaturesFile::CopyFrom(const FeaturesFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.FeaturesFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FeaturesFile::InternalSwap(FeaturesFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.featurerecords_.InternalSwap(&other->_impl_.featurerecords_);
  _impl_.symbolnamesbyname_.InternalSwap(&other->_impl_.symbolnamesbyname_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.units_, &other->_impl_.units_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.directory_, &other->_impl_.directory_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.numfeatures_)
      + sizeof(FeaturesFile::_impl_.numfeatures_)
      - PROTOBUF_FIELD_OFFSET(FeaturesFile, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata FeaturesFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_featuresfile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
