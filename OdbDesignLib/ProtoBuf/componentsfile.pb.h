// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: componentsfile.proto
// Protobuf C++ Version: 5.29.2

#ifndef componentsfile_2eproto_2epb_2eh
#define componentsfile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_componentsfile_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_componentsfile_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_componentsfile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class ComponentsFile;
struct ComponentsFileDefaultTypeInternal;
extern ComponentsFileDefaultTypeInternal _ComponentsFile_default_instance_;
class ComponentsFile_BomDescriptionRecord;
struct ComponentsFile_BomDescriptionRecordDefaultTypeInternal;
extern ComponentsFile_BomDescriptionRecordDefaultTypeInternal _ComponentsFile_BomDescriptionRecord_default_instance_;
class ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse;
struct ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUseDefaultTypeInternal;
extern ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUseDefaultTypeInternal _ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse_default_instance_;
class ComponentsFile_ComponentRecord;
struct ComponentsFile_ComponentRecordDefaultTypeInternal;
extern ComponentsFile_ComponentRecordDefaultTypeInternal _ComponentsFile_ComponentRecord_default_instance_;
class ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse;
struct ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal;
extern ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;
class ComponentsFile_ComponentRecord_ToeprintRecord;
struct ComponentsFile_ComponentRecord_ToeprintRecordDefaultTypeInternal;
extern ComponentsFile_ComponentRecord_ToeprintRecordDefaultTypeInternal _ComponentsFile_ComponentRecord_ToeprintRecord_default_instance_;
class ComponentsFile_ComponentRecordsByNameEntry_DoNotUse;
struct ComponentsFile_ComponentRecordsByNameEntry_DoNotUseDefaultTypeInternal;
extern ComponentsFile_ComponentRecordsByNameEntry_DoNotUseDefaultTypeInternal _ComponentsFile_ComponentRecordsByNameEntry_DoNotUse_default_instance_;
class ComponentsFile_PropertyRecordsByNameEntry_DoNotUse;
struct ComponentsFile_PropertyRecordsByNameEntry_DoNotUseDefaultTypeInternal;
extern ComponentsFile_PropertyRecordsByNameEntry_DoNotUseDefaultTypeInternal _ComponentsFile_PropertyRecordsByNameEntry_DoNotUse_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {

// ===================================================================


// -------------------------------------------------------------------

class ComponentsFile_ComponentRecord_ToeprintRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord) */ {
 public:
  inline ComponentsFile_ComponentRecord_ToeprintRecord() : ComponentsFile_ComponentRecord_ToeprintRecord(nullptr) {}
  ~ComponentsFile_ComponentRecord_ToeprintRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ComponentsFile_ComponentRecord_ToeprintRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ComponentsFile_ComponentRecord_ToeprintRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_ComponentRecord_ToeprintRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentsFile_ComponentRecord_ToeprintRecord(const ComponentsFile_ComponentRecord_ToeprintRecord& from) : ComponentsFile_ComponentRecord_ToeprintRecord(nullptr, from) {}
  inline ComponentsFile_ComponentRecord_ToeprintRecord(ComponentsFile_ComponentRecord_ToeprintRecord&& from) noexcept
      : ComponentsFile_ComponentRecord_ToeprintRecord(nullptr, std::move(from)) {}
  inline ComponentsFile_ComponentRecord_ToeprintRecord& operator=(const ComponentsFile_ComponentRecord_ToeprintRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentsFile_ComponentRecord_ToeprintRecord& operator=(ComponentsFile_ComponentRecord_ToeprintRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentsFile_ComponentRecord_ToeprintRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentsFile_ComponentRecord_ToeprintRecord* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_ComponentRecord_ToeprintRecord*>(
        &_ComponentsFile_ComponentRecord_ToeprintRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ComponentsFile_ComponentRecord_ToeprintRecord& a, ComponentsFile_ComponentRecord_ToeprintRecord& b) { a.Swap(&b); }
  inline void Swap(ComponentsFile_ComponentRecord_ToeprintRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentsFile_ComponentRecord_ToeprintRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentsFile_ComponentRecord_ToeprintRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ComponentsFile_ComponentRecord_ToeprintRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentsFile_ComponentRecord_ToeprintRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentsFile_ComponentRecord_ToeprintRecord& from) { ComponentsFile_ComponentRecord_ToeprintRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ComponentsFile_ComponentRecord_ToeprintRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord"; }

 protected:
  explicit ComponentsFile_ComponentRecord_ToeprintRecord(::google::protobuf::Arena* arena);
  ComponentsFile_ComponentRecord_ToeprintRecord(::google::protobuf::Arena* arena, const ComponentsFile_ComponentRecord_ToeprintRecord& from);
  ComponentsFile_ComponentRecord_ToeprintRecord(::google::protobuf::Arena* arena, ComponentsFile_ComponentRecord_ToeprintRecord&& from) noexcept
      : ComponentsFile_ComponentRecord_ToeprintRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 8,
    kLocationXFieldNumber = 2,
    kLocationYFieldNumber = 3,
    kPinNumberFieldNumber = 1,
    kMirrorFieldNumber = 5,
    kRotationFieldNumber = 4,
    kNetNumberFieldNumber = 6,
    kSubnetNumberFieldNumber = 7,
  };
  // optional string name = 8;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional double locationX = 2;
  bool has_locationx() const;
  void clear_locationx() ;
  double locationx() const;
  void set_locationx(double value);

  private:
  double _internal_locationx() const;
  void _internal_set_locationx(double value);

  public:
  // optional double locationY = 3;
  bool has_locationy() const;
  void clear_locationy() ;
  double locationy() const;
  void set_locationy(double value);

  private:
  double _internal_locationy() const;
  void _internal_set_locationy(double value);

  public:
  // optional uint32 pinNumber = 1;
  bool has_pinnumber() const;
  void clear_pinnumber() ;
  ::uint32_t pinnumber() const;
  void set_pinnumber(::uint32_t value);

  private:
  ::uint32_t _internal_pinnumber() const;
  void _internal_set_pinnumber(::uint32_t value);

  public:
  // optional bool mirror = 5;
  bool has_mirror() const;
  void clear_mirror() ;
  bool mirror() const;
  void set_mirror(bool value);

  private:
  bool _internal_mirror() const;
  void _internal_set_mirror(bool value);

  public:
  // optional double rotation = 4;
  bool has_rotation() const;
  void clear_rotation() ;
  double rotation() const;
  void set_rotation(double value);

  private:
  double _internal_rotation() const;
  void _internal_set_rotation(double value);

  public:
  // optional uint32 netNumber = 6;
  bool has_netnumber() const;
  void clear_netnumber() ;
  ::uint32_t netnumber() const;
  void set_netnumber(::uint32_t value);

  private:
  ::uint32_t _internal_netnumber() const;
  void _internal_set_netnumber(::uint32_t value);

  public:
  // optional uint32 subnetNumber = 7;
  bool has_subnetnumber() const;
  void clear_subnetnumber() ;
  ::uint32_t subnetnumber() const;
  void set_subnetnumber(::uint32_t value);

  private:
  ::uint32_t _internal_subnetnumber() const;
  void _internal_set_subnetnumber(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      83, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentsFile_ComponentRecord_ToeprintRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    double locationx_;
    double locationy_;
    ::uint32_t pinnumber_;
    bool mirror_;
    double rotation_;
    ::uint32_t netnumber_;
    ::uint32_t subnetnumber_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_componentsfile_2eproto;
};
// -------------------------------------------------------------------

class ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse*>(
        &_ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_componentsfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      90, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ComponentsFile_BomDescriptionRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord) */ {
 public:
  inline ComponentsFile_BomDescriptionRecord() : ComponentsFile_BomDescriptionRecord(nullptr) {}
  ~ComponentsFile_BomDescriptionRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ComponentsFile_BomDescriptionRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ComponentsFile_BomDescriptionRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_BomDescriptionRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentsFile_BomDescriptionRecord(const ComponentsFile_BomDescriptionRecord& from) : ComponentsFile_BomDescriptionRecord(nullptr, from) {}
  inline ComponentsFile_BomDescriptionRecord(ComponentsFile_BomDescriptionRecord&& from) noexcept
      : ComponentsFile_BomDescriptionRecord(nullptr, std::move(from)) {}
  inline ComponentsFile_BomDescriptionRecord& operator=(const ComponentsFile_BomDescriptionRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentsFile_BomDescriptionRecord& operator=(ComponentsFile_BomDescriptionRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentsFile_BomDescriptionRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentsFile_BomDescriptionRecord* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_BomDescriptionRecord*>(
        &_ComponentsFile_BomDescriptionRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ComponentsFile_BomDescriptionRecord& a, ComponentsFile_BomDescriptionRecord& b) { a.Swap(&b); }
  inline void Swap(ComponentsFile_BomDescriptionRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentsFile_BomDescriptionRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentsFile_BomDescriptionRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ComponentsFile_BomDescriptionRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentsFile_BomDescriptionRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentsFile_BomDescriptionRecord& from) { ComponentsFile_BomDescriptionRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ComponentsFile_BomDescriptionRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord"; }

 protected:
  explicit ComponentsFile_BomDescriptionRecord(::google::protobuf::Arena* arena);
  ComponentsFile_BomDescriptionRecord(::google::protobuf::Arena* arena, const ComponentsFile_BomDescriptionRecord& from);
  ComponentsFile_BomDescriptionRecord(::google::protobuf::Arena* arena, ComponentsFile_BomDescriptionRecord&& from) noexcept
      : ComponentsFile_BomDescriptionRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDescriptionsFieldNumber = 4,
    kCpnFieldNumber = 1,
    kPkgFieldNumber = 2,
    kIpnFieldNumber = 3,
    kVplVndFieldNumber = 5,
    kVplMpnFieldNumber = 6,
    kVndFieldNumber = 7,
    kMpnFieldNumber = 8,
  };
  // repeated string descriptions = 4;
  int descriptions_size() const;
  private:
  int _internal_descriptions_size() const;

  public:
  void clear_descriptions() ;
  const std::string& descriptions(int index) const;
  std::string* mutable_descriptions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_descriptions(int index, Arg_&& value, Args_... args);
  std::string* add_descriptions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_descriptions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& descriptions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_descriptions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_descriptions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_descriptions();

  public:
  // optional string cpn = 1;
  bool has_cpn() const;
  void clear_cpn() ;
  const std::string& cpn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cpn(Arg_&& arg, Args_... args);
  std::string* mutable_cpn();
  PROTOBUF_NODISCARD std::string* release_cpn();
  void set_allocated_cpn(std::string* value);

  private:
  const std::string& _internal_cpn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cpn(
      const std::string& value);
  std::string* _internal_mutable_cpn();

  public:
  // optional string pkg = 2;
  bool has_pkg() const;
  void clear_pkg() ;
  const std::string& pkg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkg(Arg_&& arg, Args_... args);
  std::string* mutable_pkg();
  PROTOBUF_NODISCARD std::string* release_pkg();
  void set_allocated_pkg(std::string* value);

  private:
  const std::string& _internal_pkg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkg(
      const std::string& value);
  std::string* _internal_mutable_pkg();

  public:
  // optional string ipn = 3;
  bool has_ipn() const;
  void clear_ipn() ;
  const std::string& ipn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ipn(Arg_&& arg, Args_... args);
  std::string* mutable_ipn();
  PROTOBUF_NODISCARD std::string* release_ipn();
  void set_allocated_ipn(std::string* value);

  private:
  const std::string& _internal_ipn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ipn(
      const std::string& value);
  std::string* _internal_mutable_ipn();

  public:
  // optional string vpl_vnd = 5;
  bool has_vpl_vnd() const;
  void clear_vpl_vnd() ;
  const std::string& vpl_vnd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vpl_vnd(Arg_&& arg, Args_... args);
  std::string* mutable_vpl_vnd();
  PROTOBUF_NODISCARD std::string* release_vpl_vnd();
  void set_allocated_vpl_vnd(std::string* value);

  private:
  const std::string& _internal_vpl_vnd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vpl_vnd(
      const std::string& value);
  std::string* _internal_mutable_vpl_vnd();

  public:
  // optional string vpl_mpn = 6;
  bool has_vpl_mpn() const;
  void clear_vpl_mpn() ;
  const std::string& vpl_mpn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vpl_mpn(Arg_&& arg, Args_... args);
  std::string* mutable_vpl_mpn();
  PROTOBUF_NODISCARD std::string* release_vpl_mpn();
  void set_allocated_vpl_mpn(std::string* value);

  private:
  const std::string& _internal_vpl_mpn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vpl_mpn(
      const std::string& value);
  std::string* _internal_mutable_vpl_mpn();

  public:
  // optional string vnd = 7;
  bool has_vnd() const;
  void clear_vnd() ;
  const std::string& vnd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_vnd(Arg_&& arg, Args_... args);
  std::string* mutable_vnd();
  PROTOBUF_NODISCARD std::string* release_vnd();
  void set_allocated_vnd(std::string* value);

  private:
  const std::string& _internal_vnd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_vnd(
      const std::string& value);
  std::string* _internal_mutable_vnd();

  public:
  // optional string mpn = 8;
  bool has_mpn() const;
  void clear_mpn() ;
  const std::string& mpn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_mpn(Arg_&& arg, Args_... args);
  std::string* mutable_mpn();
  PROTOBUF_NODISCARD std::string* release_mpn();
  void set_allocated_mpn(std::string* value);

  private:
  const std::string& _internal_mpn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_mpn(
      const std::string& value);
  std::string* _internal_mutable_mpn();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      110, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentsFile_BomDescriptionRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> descriptions_;
    ::google::protobuf::internal::ArenaStringPtr cpn_;
    ::google::protobuf::internal::ArenaStringPtr pkg_;
    ::google::protobuf::internal::ArenaStringPtr ipn_;
    ::google::protobuf::internal::ArenaStringPtr vpl_vnd_;
    ::google::protobuf::internal::ArenaStringPtr vpl_mpn_;
    ::google::protobuf::internal::ArenaStringPtr vnd_;
    ::google::protobuf::internal::ArenaStringPtr mpn_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_componentsfile_2eproto;
};
// -------------------------------------------------------------------

class ComponentsFile_PropertyRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ComponentsFile_PropertyRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_PropertyRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ComponentsFile_PropertyRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ComponentsFile_PropertyRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_PropertyRecordsByNameEntry_DoNotUse*>(
        &_ComponentsFile_PropertyRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_componentsfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      70, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ComponentsFile_ComponentRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord) */ {
 public:
  inline ComponentsFile_ComponentRecord() : ComponentsFile_ComponentRecord(nullptr) {}
  ~ComponentsFile_ComponentRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ComponentsFile_ComponentRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ComponentsFile_ComponentRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_ComponentRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentsFile_ComponentRecord(const ComponentsFile_ComponentRecord& from) : ComponentsFile_ComponentRecord(nullptr, from) {}
  inline ComponentsFile_ComponentRecord(ComponentsFile_ComponentRecord&& from) noexcept
      : ComponentsFile_ComponentRecord(nullptr, std::move(from)) {}
  inline ComponentsFile_ComponentRecord& operator=(const ComponentsFile_ComponentRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentsFile_ComponentRecord& operator=(ComponentsFile_ComponentRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentsFile_ComponentRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentsFile_ComponentRecord* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_ComponentRecord*>(
        &_ComponentsFile_ComponentRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ComponentsFile_ComponentRecord& a, ComponentsFile_ComponentRecord& b) { a.Swap(&b); }
  inline void Swap(ComponentsFile_ComponentRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentsFile_ComponentRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentsFile_ComponentRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ComponentsFile_ComponentRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentsFile_ComponentRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentsFile_ComponentRecord& from) { ComponentsFile_ComponentRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ComponentsFile_ComponentRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ComponentsFile.ComponentRecord"; }

 protected:
  explicit ComponentsFile_ComponentRecord(::google::protobuf::Arena* arena);
  ComponentsFile_ComponentRecord(::google::protobuf::Arena* arena, const ComponentsFile_ComponentRecord& from);
  ComponentsFile_ComponentRecord(::google::protobuf::Arena* arena, ComponentsFile_ComponentRecord&& from) noexcept
      : ComponentsFile_ComponentRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ToeprintRecord = ComponentsFile_ComponentRecord_ToeprintRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kPropertyRecordsFieldNumber = 11,
    kToeprintRecordsFieldNumber = 12,
    kAttributeLookupTableFieldNumber = 13,
    kCompNameFieldNumber = 6,
    kPartNameFieldNumber = 7,
    kAttributesFieldNumber = 8,
    kLocationXFieldNumber = 2,
    kLocationYFieldNumber = 3,
    kPkgRefFieldNumber = 1,
    kMirrorFieldNumber = 5,
    kRotationFieldNumber = 4,
    kIdFieldNumber = 9,
    kIndexFieldNumber = 10,
  };
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // repeated .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord toeprintRecords = 12;
  int toeprintrecords_size() const;
  private:
  int _internal_toeprintrecords_size() const;

  public:
  void clear_toeprintrecords() ;
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord* mutable_toeprintrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>* mutable_toeprintrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>& _internal_toeprintrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>* _internal_mutable_toeprintrecords();
  public:
  const ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord& toeprintrecords(int index) const;
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord* add_toeprintrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>& toeprintrecords() const;
  // map<string, string> attributeLookupTable = 13;
  int attributelookuptable_size() const;
  private:
  int _internal_attributelookuptable_size() const;

  public:
  void clear_attributelookuptable() ;
  const ::google::protobuf::Map<std::string, std::string>& attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_attributelookuptable();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_attributelookuptable();

  public:
  // optional string compName = 6;
  bool has_compname() const;
  void clear_compname() ;
  const std::string& compname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_compname(Arg_&& arg, Args_... args);
  std::string* mutable_compname();
  PROTOBUF_NODISCARD std::string* release_compname();
  void set_allocated_compname(std::string* value);

  private:
  const std::string& _internal_compname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compname(
      const std::string& value);
  std::string* _internal_mutable_compname();

  public:
  // optional string partName = 7;
  bool has_partname() const;
  void clear_partname() ;
  const std::string& partname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_partname(Arg_&& arg, Args_... args);
  std::string* mutable_partname();
  PROTOBUF_NODISCARD std::string* release_partname();
  void set_allocated_partname(std::string* value);

  private:
  const std::string& _internal_partname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_partname(
      const std::string& value);
  std::string* _internal_mutable_partname();

  public:
  // optional string attributes = 8;
  bool has_attributes() const;
  void clear_attributes() ;
  const std::string& attributes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributes(Arg_&& arg, Args_... args);
  std::string* mutable_attributes();
  PROTOBUF_NODISCARD std::string* release_attributes();
  void set_allocated_attributes(std::string* value);

  private:
  const std::string& _internal_attributes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributes(
      const std::string& value);
  std::string* _internal_mutable_attributes();

  public:
  // optional double locationX = 2;
  bool has_locationx() const;
  void clear_locationx() ;
  double locationx() const;
  void set_locationx(double value);

  private:
  double _internal_locationx() const;
  void _internal_set_locationx(double value);

  public:
  // optional double locationY = 3;
  bool has_locationy() const;
  void clear_locationy() ;
  double locationy() const;
  void set_locationy(double value);

  private:
  double _internal_locationy() const;
  void _internal_set_locationy(double value);

  public:
  // optional uint32 pkgRef = 1;
  bool has_pkgref() const;
  void clear_pkgref() ;
  ::uint32_t pkgref() const;
  void set_pkgref(::uint32_t value);

  private:
  ::uint32_t _internal_pkgref() const;
  void _internal_set_pkgref(::uint32_t value);

  public:
  // optional bool mirror = 5;
  bool has_mirror() const;
  void clear_mirror() ;
  bool mirror() const;
  void set_mirror(bool value);

  private:
  bool _internal_mirror() const;
  void _internal_set_mirror(bool value);

  public:
  // optional double rotation = 4;
  bool has_rotation() const;
  void clear_rotation() ;
  double rotation() const;
  void set_rotation(double value);

  private:
  double _internal_rotation() const;
  void _internal_set_rotation(double value);

  public:
  // optional uint32 id = 9;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 index = 10;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 3,
      110, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentsFile_ComponentRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord > toeprintrecords_;
    ::google::protobuf::internal::MapField<ComponentsFile_ComponentRecord_AttributeLookupTableEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributelookuptable_;
    ::google::protobuf::internal::ArenaStringPtr compname_;
    ::google::protobuf::internal::ArenaStringPtr partname_;
    ::google::protobuf::internal::ArenaStringPtr attributes_;
    double locationx_;
    double locationy_;
    ::uint32_t pkgref_;
    bool mirror_;
    double rotation_;
    ::uint32_t id_;
    ::uint32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_componentsfile_2eproto;
};
// -------------------------------------------------------------------

class ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse*>(
        &_ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_componentsfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      75, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ComponentsFile_ComponentRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ComponentsFile_ComponentRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile_ComponentRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ComponentsFile_ComponentRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ComponentsFile_ComponentRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile_ComponentRecordsByNameEntry_DoNotUse*>(
        &_ComponentsFile_ComponentRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_componentsfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      71, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ComponentsFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ComponentsFile) */ {
 public:
  inline ComponentsFile() : ComponentsFile(nullptr) {}
  ~ComponentsFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ComponentsFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ComponentsFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComponentsFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline ComponentsFile(const ComponentsFile& from) : ComponentsFile(nullptr, from) {}
  inline ComponentsFile(ComponentsFile&& from) noexcept
      : ComponentsFile(nullptr, std::move(from)) {}
  inline ComponentsFile& operator=(const ComponentsFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComponentsFile& operator=(ComponentsFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComponentsFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const ComponentsFile* internal_default_instance() {
    return reinterpret_cast<const ComponentsFile*>(
        &_ComponentsFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ComponentsFile& a, ComponentsFile& b) { a.Swap(&b); }
  inline void Swap(ComponentsFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComponentsFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComponentsFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ComponentsFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComponentsFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComponentsFile& from) { ComponentsFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ComponentsFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ComponentsFile"; }

 protected:
  explicit ComponentsFile(::google::protobuf::Arena* arena);
  ComponentsFile(::google::protobuf::Arena* arena, const ComponentsFile& from);
  ComponentsFile(::google::protobuf::Arena* arena, ComponentsFile&& from) noexcept
      : ComponentsFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ComponentRecord = ComponentsFile_ComponentRecord;
  using BomDescriptionRecord = ComponentsFile_BomDescriptionRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kAttributeNamesFieldNumber = 7,
    kAttributeTextValuesFieldNumber = 8,
    kComponentRecordsFieldNumber = 9,
    kComponentRecordsByNameFieldNumber = 10,
    kPropertyRecordsFieldNumber = 11,
    kPropertyRecordsByNameFieldNumber = 12,
    kBomDescriptionRecordsByCpnFieldNumber = 13,
    kUnitsFieldNumber = 1,
    kLayerNameFieldNumber = 4,
    kPathFieldNumber = 5,
    kDirectoryFieldNumber = 6,
    kIdFieldNumber = 2,
    kSideFieldNumber = 3,
  };
  // repeated string attributeNames = 7;
  int attributenames_size() const;
  private:
  int _internal_attributenames_size() const;

  public:
  void clear_attributenames() ;
  const std::string& attributenames(int index) const;
  std::string* mutable_attributenames(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributenames(int index, Arg_&& value, Args_... args);
  std::string* add_attributenames();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_attributenames(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& attributenames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_attributenames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_attributenames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_attributenames();

  public:
  // repeated string attributeTextValues = 8;
  int attributetextvalues_size() const;
  private:
  int _internal_attributetextvalues_size() const;

  public:
  void clear_attributetextvalues() ;
  const std::string& attributetextvalues(int index) const;
  std::string* mutable_attributetextvalues(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributetextvalues(int index, Arg_&& value, Args_... args);
  std::string* add_attributetextvalues();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_attributetextvalues(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& attributetextvalues() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_attributetextvalues();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_attributetextvalues() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_attributetextvalues();

  public:
  // repeated .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord componentRecords = 9;
  int componentrecords_size() const;
  private:
  int _internal_componentrecords_size() const;

  public:
  void clear_componentrecords() ;
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord* mutable_componentrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* mutable_componentrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& _internal_componentrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* _internal_mutable_componentrecords();
  public:
  const ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord& componentrecords(int index) const;
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord* add_componentrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& componentrecords() const;
  // map<string, .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord> componentRecordsByName = 10;
  int componentrecordsbyname_size() const;
  private:
  int _internal_componentrecordsbyname_size() const;

  public:
  void clear_componentrecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& componentrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* mutable_componentrecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& _internal_componentrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* _internal_mutable_componentrecordsbyname();

  public:
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // map<string, .Odb.Lib.Protobuf.PropertyRecord> propertyRecordsByName = 12;
  int propertyrecordsbyname_size() const;
  private:
  int _internal_propertyrecordsbyname_size() const;

  public:
  void clear_propertyrecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>& propertyrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecordsbyname();

  public:
  // map<string, .Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord> bomDescriptionRecordsByCpn = 13;
  int bomdescriptionrecordsbycpn_size() const;
  private:
  int _internal_bomdescriptionrecordsbycpn_size() const;

  public:
  void clear_bomdescriptionrecordsbycpn() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>& bomdescriptionrecordsbycpn() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>* mutable_bomdescriptionrecordsbycpn();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>& _internal_bomdescriptionrecordsbycpn() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>* _internal_mutable_bomdescriptionrecordsbycpn();

  public:
  // optional string units = 1;
  bool has_units() const;
  void clear_units() ;
  const std::string& units() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_units(Arg_&& arg, Args_... args);
  std::string* mutable_units();
  PROTOBUF_NODISCARD std::string* release_units();
  void set_allocated_units(std::string* value);

  private:
  const std::string& _internal_units() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_units(
      const std::string& value);
  std::string* _internal_mutable_units();

  public:
  // optional string layerName = 4;
  bool has_layername() const;
  void clear_layername() ;
  const std::string& layername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layername(Arg_&& arg, Args_... args);
  std::string* mutable_layername();
  PROTOBUF_NODISCARD std::string* release_layername();
  void set_allocated_layername(std::string* value);

  private:
  const std::string& _internal_layername() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_layername(
      const std::string& value);
  std::string* _internal_mutable_layername();

  public:
  // optional string path = 5;
  bool has_path() const;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional string directory = 6;
  bool has_directory() const;
  void clear_directory() ;
  const std::string& directory() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_directory(Arg_&& arg, Args_... args);
  std::string* mutable_directory();
  PROTOBUF_NODISCARD std::string* release_directory();
  void set_allocated_directory(std::string* value);

  private:
  const std::string& _internal_directory() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_directory(
      const std::string& value);
  std::string* _internal_mutable_directory();

  public:
  // optional uint32 id = 2;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional .Odb.Lib.Protobuf.BoardSide side = 3;
  bool has_side() const;
  void clear_side() ;
  ::Odb::Lib::Protobuf::BoardSide side() const;
  void set_side(::Odb::Lib::Protobuf::BoardSide value);

  private:
  ::Odb::Lib::Protobuf::BoardSide _internal_side() const;
  void _internal_set_side(::Odb::Lib::Protobuf::BoardSide value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ComponentsFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 8,
      177, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ComponentsFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> attributenames_;
    ::google::protobuf::RepeatedPtrField<std::string> attributetextvalues_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord > componentrecords_;
    ::google::protobuf::internal::MapField<ComponentsFile_ComponentRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        componentrecordsbyname_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::internal::MapField<ComponentsFile_PropertyRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::PropertyRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        propertyrecordsbyname_;
    ::google::protobuf::internal::MapField<ComponentsFile_BomDescriptionRecordsByCpnEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        bomdescriptionrecordsbycpn_;
    ::google::protobuf::internal::ArenaStringPtr units_;
    ::google::protobuf::internal::ArenaStringPtr layername_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr directory_;
    ::uint32_t id_;
    int side_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_componentsfile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ComponentsFile_ComponentRecord_ToeprintRecord

// optional uint32 pinNumber = 1;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_pinnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_pinnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pinnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::pinnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.pinNumber)
  return _internal_pinnumber();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_pinnumber(::uint32_t value) {
  _internal_set_pinnumber(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.pinNumber)
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::_internal_pinnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pinnumber_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_pinnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pinnumber_ = value;
}

// optional double locationX = 2;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_locationx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_locationx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::locationx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.locationX)
  return _internal_locationx();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_locationx(double value) {
  _internal_set_locationx(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.locationX)
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::_internal_locationx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationx_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_locationx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationx_ = value;
}

// optional double locationY = 3;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_locationy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_locationy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::locationy() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.locationY)
  return _internal_locationy();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_locationy(double value) {
  _internal_set_locationy(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.locationY)
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::_internal_locationy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationy_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_locationy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationy_ = value;
}

// optional double rotation = 4;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::rotation() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.rotation)
  return _internal_rotation();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_rotation(double value) {
  _internal_set_rotation(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.rotation)
}
inline double ComponentsFile_ComponentRecord_ToeprintRecord::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotation_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_rotation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = value;
}

// optional bool mirror = 5;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_mirror() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_mirror() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::mirror() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.mirror)
  return _internal_mirror();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_mirror(bool value) {
  _internal_set_mirror(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.mirror)
}
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::_internal_mirror() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mirror_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_mirror(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = value;
}

// optional uint32 netNumber = 6;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_netnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_netnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::netnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.netNumber)
  return _internal_netnumber();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_netnumber(::uint32_t value) {
  _internal_set_netnumber(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.netNumber)
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::_internal_netnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netnumber_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_netnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netnumber_ = value;
}

// optional uint32 subnetNumber = 7;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_subnetnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_subnetnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subnetnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::subnetnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.subnetNumber)
  return _internal_subnetnumber();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_subnetnumber(::uint32_t value) {
  _internal_set_subnetnumber(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.subnetNumber)
}
inline ::uint32_t ComponentsFile_ComponentRecord_ToeprintRecord::_internal_subnetnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subnetnumber_;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_subnetnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subnetnumber_ = value;
}

// optional string name = 8;
inline bool ComponentsFile_ComponentRecord_ToeprintRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentsFile_ComponentRecord_ToeprintRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_ComponentRecord_ToeprintRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.name)
}
inline std::string* ComponentsFile_ComponentRecord_ToeprintRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.name)
  return _s;
}
inline const std::string& ComponentsFile_ComponentRecord_ToeprintRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ComponentsFile_ComponentRecord_ToeprintRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ComponentsFile_ComponentRecord_ToeprintRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_ComponentRecord_ToeprintRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord.name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ComponentsFile_ComponentRecord

// optional uint32 pkgRef = 1;
inline bool ComponentsFile_ComponentRecord::has_pkgref() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_pkgref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgref_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t ComponentsFile_ComponentRecord::pkgref() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.pkgRef)
  return _internal_pkgref();
}
inline void ComponentsFile_ComponentRecord::set_pkgref(::uint32_t value) {
  _internal_set_pkgref(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.pkgRef)
}
inline ::uint32_t ComponentsFile_ComponentRecord::_internal_pkgref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkgref_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_pkgref(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgref_ = value;
}

// optional double locationX = 2;
inline bool ComponentsFile_ComponentRecord::has_locationx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_locationx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double ComponentsFile_ComponentRecord::locationx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.locationX)
  return _internal_locationx();
}
inline void ComponentsFile_ComponentRecord::set_locationx(double value) {
  _internal_set_locationx(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.locationX)
}
inline double ComponentsFile_ComponentRecord::_internal_locationx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationx_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_locationx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationx_ = value;
}

// optional double locationY = 3;
inline bool ComponentsFile_ComponentRecord::has_locationy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_locationy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double ComponentsFile_ComponentRecord::locationy() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.locationY)
  return _internal_locationy();
}
inline void ComponentsFile_ComponentRecord::set_locationy(double value) {
  _internal_set_locationy(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.locationY)
}
inline double ComponentsFile_ComponentRecord::_internal_locationy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locationy_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_locationy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locationy_ = value;
}

// optional double rotation = 4;
inline bool ComponentsFile_ComponentRecord::has_rotation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_rotation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double ComponentsFile_ComponentRecord::rotation() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.rotation)
  return _internal_rotation();
}
inline void ComponentsFile_ComponentRecord::set_rotation(double value) {
  _internal_set_rotation(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.rotation)
}
inline double ComponentsFile_ComponentRecord::_internal_rotation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rotation_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_rotation(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rotation_ = value;
}

// optional bool mirror = 5;
inline bool ComponentsFile_ComponentRecord::has_mirror() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_mirror() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool ComponentsFile_ComponentRecord::mirror() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.mirror)
  return _internal_mirror();
}
inline void ComponentsFile_ComponentRecord::set_mirror(bool value) {
  _internal_set_mirror(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.mirror)
}
inline bool ComponentsFile_ComponentRecord::_internal_mirror() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mirror_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_mirror(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = value;
}

// optional string compName = 6;
inline bool ComponentsFile_ComponentRecord::has_compname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_compname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentsFile_ComponentRecord::compname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.compName)
  return _internal_compname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_ComponentRecord::set_compname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.compname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.compName)
}
inline std::string* ComponentsFile_ComponentRecord::mutable_compname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_compname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.compName)
  return _s;
}
inline const std::string& ComponentsFile_ComponentRecord::_internal_compname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compname_.Get();
}
inline void ComponentsFile_ComponentRecord::_internal_set_compname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.compname_.Set(value, GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::_internal_mutable_compname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.compname_.Mutable( GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::release_compname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.compName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.compname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.compname_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_ComponentRecord::set_allocated_compname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.compname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.compname_.IsDefault()) {
    _impl_.compname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.compName)
}

// optional string partName = 7;
inline bool ComponentsFile_ComponentRecord::has_partname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_partname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.partname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ComponentsFile_ComponentRecord::partname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.partName)
  return _internal_partname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_ComponentRecord::set_partname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.partname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.partName)
}
inline std::string* ComponentsFile_ComponentRecord::mutable_partname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_partname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.partName)
  return _s;
}
inline const std::string& ComponentsFile_ComponentRecord::_internal_partname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.partname_.Get();
}
inline void ComponentsFile_ComponentRecord::_internal_set_partname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.partname_.Set(value, GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::_internal_mutable_partname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.partname_.Mutable( GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::release_partname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.partName)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.partname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.partname_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_ComponentRecord::set_allocated_partname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.partname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.partname_.IsDefault()) {
    _impl_.partname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.partName)
}

// optional string attributes = 8;
inline bool ComponentsFile_ComponentRecord::has_attributes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributes_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ComponentsFile_ComponentRecord::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributes)
  return _internal_attributes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_ComponentRecord::set_attributes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.attributes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributes)
}
inline std::string* ComponentsFile_ComponentRecord::mutable_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attributes();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributes)
  return _s;
}
inline const std::string& ComponentsFile_ComponentRecord::_internal_attributes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributes_.Get();
}
inline void ComponentsFile_ComponentRecord::_internal_set_attributes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.attributes_.Set(value, GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::_internal_mutable_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.attributes_.Mutable( GetArena());
}
inline std::string* ComponentsFile_ComponentRecord::release_attributes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributes)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.attributes_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.attributes_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_ComponentRecord::set_allocated_attributes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.attributes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.attributes_.IsDefault()) {
    _impl_.attributes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributes)
}

// optional uint32 id = 9;
inline bool ComponentsFile_ComponentRecord::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t ComponentsFile_ComponentRecord::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.id)
  return _internal_id();
}
inline void ComponentsFile_ComponentRecord::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.id)
}
inline ::uint32_t ComponentsFile_ComponentRecord::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional uint32 index = 10;
inline bool ComponentsFile_ComponentRecord::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void ComponentsFile_ComponentRecord::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::uint32_t ComponentsFile_ComponentRecord::index() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.index)
  return _internal_index();
}
inline void ComponentsFile_ComponentRecord::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.index)
}
inline ::uint32_t ComponentsFile_ComponentRecord::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ComponentsFile_ComponentRecord::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
inline int ComponentsFile_ComponentRecord::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int ComponentsFile_ComponentRecord::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* ComponentsFile_ComponentRecord::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* ComponentsFile_ComponentRecord::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& ComponentsFile_ComponentRecord::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* ComponentsFile_ComponentRecord::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& ComponentsFile_ComponentRecord::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
ComponentsFile_ComponentRecord::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
ComponentsFile_ComponentRecord::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// repeated .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.ToeprintRecord toeprintRecords = 12;
inline int ComponentsFile_ComponentRecord::_internal_toeprintrecords_size() const {
  return _internal_toeprintrecords().size();
}
inline int ComponentsFile_ComponentRecord::toeprintrecords_size() const {
  return _internal_toeprintrecords_size();
}
inline void ComponentsFile_ComponentRecord::clear_toeprintrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.toeprintrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord* ComponentsFile_ComponentRecord::mutable_toeprintrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.toeprintRecords)
  return _internal_mutable_toeprintrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>* ComponentsFile_ComponentRecord::mutable_toeprintrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.toeprintRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_toeprintrecords();
}
inline const ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord& ComponentsFile_ComponentRecord::toeprintrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.toeprintRecords)
  return _internal_toeprintrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord* ComponentsFile_ComponentRecord::add_toeprintrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord* _add = _internal_mutable_toeprintrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.toeprintRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>& ComponentsFile_ComponentRecord::toeprintrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.toeprintRecords)
  return _internal_toeprintrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>&
ComponentsFile_ComponentRecord::_internal_toeprintrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.toeprintrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord_ToeprintRecord>*
ComponentsFile_ComponentRecord::_internal_mutable_toeprintrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.toeprintrecords_;
}

// map<string, string> attributeLookupTable = 13;
inline int ComponentsFile_ComponentRecord::_internal_attributelookuptable_size() const {
  return _internal_attributelookuptable().size();
}
inline int ComponentsFile_ComponentRecord::attributelookuptable_size() const {
  return _internal_attributelookuptable_size();
}
inline void ComponentsFile_ComponentRecord::clear_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributelookuptable_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ComponentsFile_ComponentRecord::_internal_attributelookuptable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributelookuptable_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ComponentsFile_ComponentRecord::attributelookuptable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributeLookupTable)
  return _internal_attributelookuptable();
}
inline ::google::protobuf::Map<std::string, std::string>* ComponentsFile_ComponentRecord::_internal_mutable_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributelookuptable_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* ComponentsFile_ComponentRecord::mutable_attributelookuptable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.ComponentsFile.ComponentRecord.attributeLookupTable)
  return _internal_mutable_attributelookuptable();
}

// -------------------------------------------------------------------

// ComponentsFile_BomDescriptionRecord

// optional string cpn = 1;
inline bool ComponentsFile_BomDescriptionRecord::has_cpn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_cpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpn_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::cpn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.cpn)
  return _internal_cpn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_cpn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cpn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.cpn)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_cpn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cpn();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.cpn)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_cpn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpn_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_cpn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.cpn_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_cpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.cpn_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_cpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.cpn)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.cpn_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.cpn_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_cpn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.cpn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cpn_.IsDefault()) {
    _impl_.cpn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.cpn)
}

// optional string pkg = 2;
inline bool ComponentsFile_BomDescriptionRecord::has_pkg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_pkg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::pkg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.pkg)
  return _internal_pkg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_pkg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pkg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.pkg)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_pkg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkg();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.pkg)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_pkg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_pkg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pkg_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_pkg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pkg_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_pkg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.pkg)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pkg_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pkg_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_pkg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pkg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pkg_.IsDefault()) {
    _impl_.pkg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.pkg)
}

// optional string ipn = 3;
inline bool ComponentsFile_BomDescriptionRecord::has_ipn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_ipn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ipn_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::ipn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.ipn)
  return _internal_ipn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_ipn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ipn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.ipn)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_ipn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ipn();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.ipn)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_ipn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ipn_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_ipn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ipn_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_ipn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.ipn_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_ipn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.ipn)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.ipn_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ipn_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_ipn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.ipn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ipn_.IsDefault()) {
    _impl_.ipn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.ipn)
}

// repeated string descriptions = 4;
inline int ComponentsFile_BomDescriptionRecord::_internal_descriptions_size() const {
  return _internal_descriptions().size();
}
inline int ComponentsFile_BomDescriptionRecord::descriptions_size() const {
  return _internal_descriptions_size();
}
inline void ComponentsFile_BomDescriptionRecord::clear_descriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.descriptions_.Clear();
}
inline std::string* ComponentsFile_BomDescriptionRecord::add_descriptions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_descriptions()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::descriptions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
  return _internal_descriptions().Get(index);
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_descriptions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
  return _internal_mutable_descriptions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile_BomDescriptionRecord::set_descriptions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_descriptions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile_BomDescriptionRecord::add_descriptions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_descriptions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile_BomDescriptionRecord::descriptions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
  return _internal_descriptions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile_BomDescriptionRecord::mutable_descriptions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.descriptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_descriptions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile_BomDescriptionRecord::_internal_descriptions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.descriptions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile_BomDescriptionRecord::_internal_mutable_descriptions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.descriptions_;
}

// optional string vpl_vnd = 5;
inline bool ComponentsFile_BomDescriptionRecord::has_vpl_vnd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_vpl_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vpl_vnd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::vpl_vnd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_vnd)
  return _internal_vpl_vnd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_vpl_vnd(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.vpl_vnd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_vnd)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_vpl_vnd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vpl_vnd();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_vnd)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_vpl_vnd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vpl_vnd_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_vpl_vnd(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.vpl_vnd_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_vpl_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.vpl_vnd_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_vpl_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_vnd)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.vpl_vnd_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.vpl_vnd_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_vpl_vnd(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.vpl_vnd_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vpl_vnd_.IsDefault()) {
    _impl_.vpl_vnd_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_vnd)
}

// optional string vpl_mpn = 6;
inline bool ComponentsFile_BomDescriptionRecord::has_vpl_mpn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_vpl_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vpl_mpn_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::vpl_mpn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_mpn)
  return _internal_vpl_mpn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_vpl_mpn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.vpl_mpn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_mpn)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_vpl_mpn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vpl_mpn();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_mpn)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_vpl_mpn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vpl_mpn_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_vpl_mpn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.vpl_mpn_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_vpl_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.vpl_mpn_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_vpl_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_mpn)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.vpl_mpn_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.vpl_mpn_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_vpl_mpn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.vpl_mpn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vpl_mpn_.IsDefault()) {
    _impl_.vpl_mpn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vpl_mpn)
}

// optional string vnd = 7;
inline bool ComponentsFile_BomDescriptionRecord::has_vnd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vnd_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::vnd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vnd)
  return _internal_vnd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_vnd(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.vnd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vnd)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_vnd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_vnd();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vnd)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_vnd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vnd_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_vnd(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.vnd_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.vnd_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_vnd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vnd)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.vnd_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.vnd_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_vnd(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.vnd_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.vnd_.IsDefault()) {
    _impl_.vnd_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.vnd)
}

// optional string mpn = 8;
inline bool ComponentsFile_BomDescriptionRecord::has_mpn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void ComponentsFile_BomDescriptionRecord::clear_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mpn_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::mpn() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.mpn)
  return _internal_mpn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile_BomDescriptionRecord::set_mpn(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.mpn_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.mpn)
}
inline std::string* ComponentsFile_BomDescriptionRecord::mutable_mpn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_mpn();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.mpn)
  return _s;
}
inline const std::string& ComponentsFile_BomDescriptionRecord::_internal_mpn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mpn_.Get();
}
inline void ComponentsFile_BomDescriptionRecord::_internal_set_mpn(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.mpn_.Set(value, GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::_internal_mutable_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.mpn_.Mutable( GetArena());
}
inline std::string* ComponentsFile_BomDescriptionRecord::release_mpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.mpn)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.mpn_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mpn_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile_BomDescriptionRecord::set_allocated_mpn(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.mpn_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mpn_.IsDefault()) {
    _impl_.mpn_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord.mpn)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ComponentsFile

// optional string units = 1;
inline bool ComponentsFile::has_units() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ComponentsFile::clear_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.units_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ComponentsFile::units() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.units)
  return _internal_units();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile::set_units(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.units_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.units)
}
inline std::string* ComponentsFile::mutable_units() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_units();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.units)
  return _s;
}
inline const std::string& ComponentsFile::_internal_units() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.units_.Get();
}
inline void ComponentsFile::_internal_set_units(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.units_.Set(value, GetArena());
}
inline std::string* ComponentsFile::_internal_mutable_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.units_.Mutable( GetArena());
}
inline std::string* ComponentsFile::release_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.units)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.units_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.units_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile::set_allocated_units(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.units_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.units_.IsDefault()) {
    _impl_.units_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.units)
}

// optional uint32 id = 2;
inline bool ComponentsFile::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ComponentsFile::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t ComponentsFile::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.id)
  return _internal_id();
}
inline void ComponentsFile::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.id)
}
inline ::uint32_t ComponentsFile::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void ComponentsFile::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional .Odb.Lib.Protobuf.BoardSide side = 3;
inline bool ComponentsFile::has_side() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ComponentsFile::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::Odb::Lib::Protobuf::BoardSide ComponentsFile::side() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.side)
  return _internal_side();
}
inline void ComponentsFile::set_side(::Odb::Lib::Protobuf::BoardSide value) {
  _internal_set_side(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.side)
}
inline ::Odb::Lib::Protobuf::BoardSide ComponentsFile::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::BoardSide>(_impl_.side_);
}
inline void ComponentsFile::_internal_set_side(::Odb::Lib::Protobuf::BoardSide value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = value;
}

// optional string layerName = 4;
inline bool ComponentsFile::has_layername() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ComponentsFile::clear_layername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layername_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ComponentsFile::layername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.layerName)
  return _internal_layername();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile::set_layername(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.layername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.layerName)
}
inline std::string* ComponentsFile::mutable_layername() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_layername();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.layerName)
  return _s;
}
inline const std::string& ComponentsFile::_internal_layername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layername_.Get();
}
inline void ComponentsFile::_internal_set_layername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.layername_.Set(value, GetArena());
}
inline std::string* ComponentsFile::_internal_mutable_layername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.layername_.Mutable( GetArena());
}
inline std::string* ComponentsFile::release_layername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.layerName)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.layername_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.layername_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile::set_allocated_layername(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.layername_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.layername_.IsDefault()) {
    _impl_.layername_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.layerName)
}

// optional string path = 5;
inline bool ComponentsFile::has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ComponentsFile::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ComponentsFile::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.path)
}
inline std::string* ComponentsFile::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.path)
  return _s;
}
inline const std::string& ComponentsFile::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void ComponentsFile::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* ComponentsFile::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* ComponentsFile::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.path)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.path)
}

// optional string directory = 6;
inline bool ComponentsFile::has_directory() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ComponentsFile::clear_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.directory_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ComponentsFile::directory() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.directory)
  return _internal_directory();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ComponentsFile::set_directory(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.directory_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.directory)
}
inline std::string* ComponentsFile::mutable_directory() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_directory();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.directory)
  return _s;
}
inline const std::string& ComponentsFile::_internal_directory() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.directory_.Get();
}
inline void ComponentsFile::_internal_set_directory(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.directory_.Set(value, GetArena());
}
inline std::string* ComponentsFile::_internal_mutable_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.directory_.Mutable( GetArena());
}
inline std::string* ComponentsFile::release_directory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.ComponentsFile.directory)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.directory_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.directory_.Set("", GetArena());
  }
  return released;
}
inline void ComponentsFile::set_allocated_directory(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.directory_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.directory_.IsDefault()) {
    _impl_.directory_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.ComponentsFile.directory)
}

// repeated string attributeNames = 7;
inline int ComponentsFile::_internal_attributenames_size() const {
  return _internal_attributenames().size();
}
inline int ComponentsFile::attributenames_size() const {
  return _internal_attributenames_size();
}
inline void ComponentsFile::clear_attributenames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributenames_.Clear();
}
inline std::string* ComponentsFile::add_attributenames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_attributenames()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
  return _s;
}
inline const std::string& ComponentsFile::attributenames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
  return _internal_attributenames().Get(index);
}
inline std::string* ComponentsFile::mutable_attributenames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
  return _internal_mutable_attributenames()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile::set_attributenames(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_attributenames()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile::add_attributenames(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_attributenames(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile::attributenames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
  return _internal_attributenames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile::mutable_attributenames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.attributeNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributenames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile::_internal_attributenames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributenames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile::_internal_mutable_attributenames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributenames_;
}

// repeated string attributeTextValues = 8;
inline int ComponentsFile::_internal_attributetextvalues_size() const {
  return _internal_attributetextvalues().size();
}
inline int ComponentsFile::attributetextvalues_size() const {
  return _internal_attributetextvalues_size();
}
inline void ComponentsFile::clear_attributetextvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributetextvalues_.Clear();
}
inline std::string* ComponentsFile::add_attributetextvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_attributetextvalues()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
  return _s;
}
inline const std::string& ComponentsFile::attributetextvalues(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
  return _internal_attributetextvalues().Get(index);
}
inline std::string* ComponentsFile::mutable_attributetextvalues(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
  return _internal_mutable_attributetextvalues()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile::set_attributetextvalues(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_attributetextvalues()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
}
template <typename Arg_, typename... Args_>
inline void ComponentsFile::add_attributetextvalues(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_attributetextvalues(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile::attributetextvalues() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
  return _internal_attributetextvalues();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile::mutable_attributetextvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.attributeTextValues)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributetextvalues();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ComponentsFile::_internal_attributetextvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributetextvalues_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ComponentsFile::_internal_mutable_attributetextvalues() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributetextvalues_;
}

// repeated .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord componentRecords = 9;
inline int ComponentsFile::_internal_componentrecords_size() const {
  return _internal_componentrecords().size();
}
inline int ComponentsFile::componentrecords_size() const {
  return _internal_componentrecords_size();
}
inline void ComponentsFile::clear_componentrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.componentrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord* ComponentsFile::mutable_componentrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.componentRecords)
  return _internal_mutable_componentrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* ComponentsFile::mutable_componentrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.componentRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_componentrecords();
}
inline const ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord& ComponentsFile::componentrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.componentRecords)
  return _internal_componentrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord* ComponentsFile::add_componentrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord* _add = _internal_mutable_componentrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.componentRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& ComponentsFile::componentrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.componentRecords)
  return _internal_componentrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>&
ComponentsFile::_internal_componentrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.componentrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>*
ComponentsFile::_internal_mutable_componentrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.componentrecords_;
}

// map<string, .Odb.Lib.Protobuf.ComponentsFile.ComponentRecord> componentRecordsByName = 10;
inline int ComponentsFile::_internal_componentrecordsbyname_size() const {
  return _internal_componentrecordsbyname().size();
}
inline int ComponentsFile::componentrecordsbyname_size() const {
  return _internal_componentrecordsbyname_size();
}
inline void ComponentsFile::clear_componentrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.componentrecordsbyname_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& ComponentsFile::_internal_componentrecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.componentrecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>& ComponentsFile::componentrecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.ComponentsFile.componentRecordsByName)
  return _internal_componentrecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* ComponentsFile::_internal_mutable_componentrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.componentrecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_ComponentRecord>* ComponentsFile::mutable_componentrecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.ComponentsFile.componentRecordsByName)
  return _internal_mutable_componentrecordsbyname();
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
inline int ComponentsFile::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int ComponentsFile::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* ComponentsFile::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ComponentsFile.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* ComponentsFile::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ComponentsFile.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& ComponentsFile::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ComponentsFile.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* ComponentsFile::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ComponentsFile.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& ComponentsFile::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ComponentsFile.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
ComponentsFile::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
ComponentsFile::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// map<string, .Odb.Lib.Protobuf.PropertyRecord> propertyRecordsByName = 12;
inline int ComponentsFile::_internal_propertyrecordsbyname_size() const {
  return _internal_propertyrecordsbyname().size();
}
inline int ComponentsFile::propertyrecordsbyname_size() const {
  return _internal_propertyrecordsbyname_size();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>& ComponentsFile::_internal_propertyrecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>& ComponentsFile::propertyrecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.ComponentsFile.propertyRecordsByName)
  return _internal_propertyrecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>* ComponentsFile::_internal_mutable_propertyrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.propertyrecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::PropertyRecord>* ComponentsFile::mutable_propertyrecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.ComponentsFile.propertyRecordsByName)
  return _internal_mutable_propertyrecordsbyname();
}

// map<string, .Odb.Lib.Protobuf.ComponentsFile.BomDescriptionRecord> bomDescriptionRecordsByCpn = 13;
inline int ComponentsFile::_internal_bomdescriptionrecordsbycpn_size() const {
  return _internal_bomdescriptionrecordsbycpn().size();
}
inline int ComponentsFile::bomdescriptionrecordsbycpn_size() const {
  return _internal_bomdescriptionrecordsbycpn_size();
}
inline void ComponentsFile::clear_bomdescriptionrecordsbycpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bomdescriptionrecordsbycpn_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>& ComponentsFile::_internal_bomdescriptionrecordsbycpn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bomdescriptionrecordsbycpn_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>& ComponentsFile::bomdescriptionrecordsbycpn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.ComponentsFile.bomDescriptionRecordsByCpn)
  return _internal_bomdescriptionrecordsbycpn();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>* ComponentsFile::_internal_mutable_bomdescriptionrecordsbycpn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bomdescriptionrecordsbycpn_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::ComponentsFile_BomDescriptionRecord>* ComponentsFile::mutable_bomdescriptionrecordsbycpn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.ComponentsFile.bomDescriptionRecordsByCpn)
  return _internal_mutable_bomdescriptionrecordsbycpn();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // componentsfile_2eproto_2epb_2eh
