// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stephdrfile.proto
// Protobuf C++ Version: 5.29.2

#ifndef stephdrfile_2eproto_2epb_2eh
#define stephdrfile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_stephdrfile_2eproto ODBDESIGN_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ODBDESIGN_EXPORT TableStruct_stephdrfile_2eproto {
  static const ::uint32_t offsets[];
};
ODBDESIGN_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_stephdrfile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class StepHdrFile;
struct StepHdrFileDefaultTypeInternal;
ODBDESIGN_EXPORT extern StepHdrFileDefaultTypeInternal _StepHdrFile_default_instance_;
class StepHdrFile_OnlineValuesEntry_DoNotUse;
struct StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal;
ODBDESIGN_EXPORT extern StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal _StepHdrFile_OnlineValuesEntry_DoNotUse_default_instance_;
class StepHdrFile_StepRepeatRecord;
struct StepHdrFile_StepRepeatRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern StepHdrFile_StepRepeatRecordDefaultTypeInternal _StepHdrFile_StepRepeatRecord_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {

// ===================================================================


// -------------------------------------------------------------------

class ODBDESIGN_EXPORT StepHdrFile_StepRepeatRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord) */ {
 public:
  inline StepHdrFile_StepRepeatRecord() : StepHdrFile_StepRepeatRecord(nullptr) {}
  ~StepHdrFile_StepRepeatRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepHdrFile_StepRepeatRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepHdrFile_StepRepeatRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepHdrFile_StepRepeatRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepHdrFile_StepRepeatRecord(const StepHdrFile_StepRepeatRecord& from) : StepHdrFile_StepRepeatRecord(nullptr, from) {}
  inline StepHdrFile_StepRepeatRecord(StepHdrFile_StepRepeatRecord&& from) noexcept
      : StepHdrFile_StepRepeatRecord(nullptr, std::move(from)) {}
  inline StepHdrFile_StepRepeatRecord& operator=(const StepHdrFile_StepRepeatRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepHdrFile_StepRepeatRecord& operator=(StepHdrFile_StepRepeatRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepHdrFile_StepRepeatRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepHdrFile_StepRepeatRecord* internal_default_instance() {
    return reinterpret_cast<const StepHdrFile_StepRepeatRecord*>(
        &_StepHdrFile_StepRepeatRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StepHdrFile_StepRepeatRecord& a, StepHdrFile_StepRepeatRecord& b) { a.Swap(&b); }
  inline void Swap(StepHdrFile_StepRepeatRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepHdrFile_StepRepeatRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepHdrFile_StepRepeatRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepHdrFile_StepRepeatRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepHdrFile_StepRepeatRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepHdrFile_StepRepeatRecord& from) { StepHdrFile_StepRepeatRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepHdrFile_StepRepeatRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord"; }

 protected:
  explicit StepHdrFile_StepRepeatRecord(::google::protobuf::Arena* arena);
  StepHdrFile_StepRepeatRecord(::google::protobuf::Arena* arena, const StepHdrFile_StepRepeatRecord& from);
  StepHdrFile_StepRepeatRecord(::google::protobuf::Arena* arena, StepHdrFile_StepRepeatRecord&& from) noexcept
      : StepHdrFile_StepRepeatRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kDxFieldNumber = 4,
    kDyFieldNumber = 5,
    kNxFieldNumber = 6,
    kNyFieldNumber = 7,
    kAngleFieldNumber = 8,
    kFlipFieldNumber = 9,
    kMirrorFieldNumber = 10,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional double x = 2;
  bool has_x() const;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // optional double y = 3;
  bool has_y() const;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // optional double dx = 4;
  bool has_dx() const;
  void clear_dx() ;
  double dx() const;
  void set_dx(double value);

  private:
  double _internal_dx() const;
  void _internal_set_dx(double value);

  public:
  // optional double dy = 5;
  bool has_dy() const;
  void clear_dy() ;
  double dy() const;
  void set_dy(double value);

  private:
  double _internal_dy() const;
  void _internal_set_dy(double value);

  public:
  // optional int32 nx = 6;
  bool has_nx() const;
  void clear_nx() ;
  ::int32_t nx() const;
  void set_nx(::int32_t value);

  private:
  ::int32_t _internal_nx() const;
  void _internal_set_nx(::int32_t value);

  public:
  // optional int32 ny = 7;
  bool has_ny() const;
  void clear_ny() ;
  ::int32_t ny() const;
  void set_ny(::int32_t value);

  private:
  ::int32_t _internal_ny() const;
  void _internal_set_ny(::int32_t value);

  public:
  // optional double angle = 8;
  bool has_angle() const;
  void clear_angle() ;
  double angle() const;
  void set_angle(double value);

  private:
  double _internal_angle() const;
  void _internal_set_angle(double value);

  public:
  // optional bool flip = 9;
  bool has_flip() const;
  void clear_flip() ;
  bool flip() const;
  void set_flip(bool value);

  private:
  bool _internal_flip() const;
  void _internal_set_flip(bool value);

  public:
  // optional bool mirror = 10;
  bool has_mirror() const;
  void clear_mirror() ;
  bool mirror() const;
  void set_mirror(bool value);

  private:
  bool _internal_mirror() const;
  void _internal_set_mirror(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepHdrFile_StepRepeatRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    double x_;
    double y_;
    double dx_;
    double dy_;
    ::int32_t nx_;
    ::int32_t ny_;
    double angle_;
    bool flip_;
    bool mirror_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stephdrfile_2eproto;
};
// -------------------------------------------------------------------

class StepHdrFile_OnlineValuesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  StepHdrFile_OnlineValuesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepHdrFile_OnlineValuesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StepHdrFile_OnlineValuesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StepHdrFile_OnlineValuesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StepHdrFile_OnlineValuesEntry_DoNotUse*>(
        &_StepHdrFile_OnlineValuesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_stephdrfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT StepHdrFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.StepHdrFile) */ {
 public:
  inline StepHdrFile() : StepHdrFile(nullptr) {}
  ~StepHdrFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StepHdrFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StepHdrFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StepHdrFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline StepHdrFile(const StepHdrFile& from) : StepHdrFile(nullptr, from) {}
  inline StepHdrFile(StepHdrFile&& from) noexcept
      : StepHdrFile(nullptr, std::move(from)) {}
  inline StepHdrFile& operator=(const StepHdrFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline StepHdrFile& operator=(StepHdrFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StepHdrFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const StepHdrFile* internal_default_instance() {
    return reinterpret_cast<const StepHdrFile*>(
        &_StepHdrFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StepHdrFile& a, StepHdrFile& b) { a.Swap(&b); }
  inline void Swap(StepHdrFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StepHdrFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StepHdrFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StepHdrFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StepHdrFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StepHdrFile& from) { StepHdrFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StepHdrFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.StepHdrFile"; }

 protected:
  explicit StepHdrFile(::google::protobuf::Arena* arena);
  StepHdrFile(::google::protobuf::Arena* arena, const StepHdrFile& from);
  StepHdrFile(::google::protobuf::Arena* arena, StepHdrFile&& from) noexcept
      : StepHdrFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using StepRepeatRecord = StepHdrFile_StepRepeatRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kStepRepeatRecordsFieldNumber = 13,
    kOnlineValuesFieldNumber = 15,
    kAffectingBomFieldNumber = 10,
    kOnlineFieldNumber = 12,
    kPathFieldNumber = 14,
    kXDatumFieldNumber = 1,
    kYDatumFieldNumber = 2,
    kXOriginFieldNumber = 4,
    kYOriginFieldNumber = 5,
    kTopActiveFieldNumber = 6,
    kBottomActiveFieldNumber = 7,
    kIdFieldNumber = 3,
    kAffectingBomChangedFieldNumber = 11,
    kRightActiveFieldNumber = 8,
    kLeftActiveFieldNumber = 9,
  };
  // repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
  int steprepeatrecords_size() const;
  private:
  int _internal_steprepeatrecords_size() const;

  public:
  void clear_steprepeatrecords() ;
  ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord* mutable_steprepeatrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>* mutable_steprepeatrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>& _internal_steprepeatrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>* _internal_mutable_steprepeatrecords();
  public:
  const ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord& steprepeatrecords(int index) const;
  ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord* add_steprepeatrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>& steprepeatrecords() const;
  // map<string, string> onlineValues = 15;
  int onlinevalues_size() const;
  private:
  int _internal_onlinevalues_size() const;

  public:
  void clear_onlinevalues() ;
  const ::google::protobuf::Map<std::string, std::string>& onlinevalues() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_onlinevalues();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_onlinevalues() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_onlinevalues();

  public:
  // optional string affectingBom = 10;
  bool has_affectingbom() const;
  void clear_affectingbom() ;
  const std::string& affectingbom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_affectingbom(Arg_&& arg, Args_... args);
  std::string* mutable_affectingbom();
  PROTOBUF_NODISCARD std::string* release_affectingbom();
  void set_allocated_affectingbom(std::string* value);

  private:
  const std::string& _internal_affectingbom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_affectingbom(
      const std::string& value);
  std::string* _internal_mutable_affectingbom();

  public:
  // optional string online = 12;
  bool has_online() const;
  void clear_online() ;
  const std::string& online() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_online(Arg_&& arg, Args_... args);
  std::string* mutable_online();
  PROTOBUF_NODISCARD std::string* release_online();
  void set_allocated_online(std::string* value);

  private:
  const std::string& _internal_online() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_online(
      const std::string& value);
  std::string* _internal_mutable_online();

  public:
  // optional string path = 14;
  bool has_path() const;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional double xDatum = 1;
  bool has_xdatum() const;
  void clear_xdatum() ;
  double xdatum() const;
  void set_xdatum(double value);

  private:
  double _internal_xdatum() const;
  void _internal_set_xdatum(double value);

  public:
  // optional double yDatum = 2;
  bool has_ydatum() const;
  void clear_ydatum() ;
  double ydatum() const;
  void set_ydatum(double value);

  private:
  double _internal_ydatum() const;
  void _internal_set_ydatum(double value);

  public:
  // optional double xOrigin = 4;
  bool has_xorigin() const;
  void clear_xorigin() ;
  double xorigin() const;
  void set_xorigin(double value);

  private:
  double _internal_xorigin() const;
  void _internal_set_xorigin(double value);

  public:
  // optional double yOrigin = 5;
  bool has_yorigin() const;
  void clear_yorigin() ;
  double yorigin() const;
  void set_yorigin(double value);

  private:
  double _internal_yorigin() const;
  void _internal_set_yorigin(double value);

  public:
  // optional double topActive = 6;
  bool has_topactive() const;
  void clear_topactive() ;
  double topactive() const;
  void set_topactive(double value);

  private:
  double _internal_topactive() const;
  void _internal_set_topactive(double value);

  public:
  // optional double bottomActive = 7;
  bool has_bottomactive() const;
  void clear_bottomactive() ;
  double bottomactive() const;
  void set_bottomactive(double value);

  private:
  double _internal_bottomactive() const;
  void _internal_set_bottomactive(double value);

  public:
  // optional int32 id = 3;
  bool has_id() const;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // optional bool affectingBomChanged = 11;
  bool has_affectingbomchanged() const;
  void clear_affectingbomchanged() ;
  bool affectingbomchanged() const;
  void set_affectingbomchanged(bool value);

  private:
  bool _internal_affectingbomchanged() const;
  void _internal_set_affectingbomchanged(bool value);

  public:
  // optional double rightActive = 8;
  bool has_rightactive() const;
  void clear_rightactive() ;
  double rightactive() const;
  void set_rightactive(double value);

  private:
  double _internal_rightactive() const;
  void _internal_set_rightactive(double value);

  public:
  // optional double leftActive = 9;
  bool has_leftactive() const;
  void clear_leftactive() ;
  double leftactive() const;
  void set_leftactive(double value);

  private:
  double _internal_leftactive() const;
  void _internal_set_leftactive(double value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.StepHdrFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 2,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StepHdrFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord > steprepeatrecords_;
    ::google::protobuf::internal::MapField<StepHdrFile_OnlineValuesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        onlinevalues_;
    ::google::protobuf::internal::ArenaStringPtr affectingbom_;
    ::google::protobuf::internal::ArenaStringPtr online_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    double xdatum_;
    double ydatum_;
    double xorigin_;
    double yorigin_;
    double topactive_;
    double bottomactive_;
    ::int32_t id_;
    bool affectingbomchanged_;
    double rightactive_;
    double leftactive_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stephdrfile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StepHdrFile_StepRepeatRecord

// optional string name = 1;
inline bool StepHdrFile_StepRepeatRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StepHdrFile_StepRepeatRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StepHdrFile_StepRepeatRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name)
}
inline std::string* StepHdrFile_StepRepeatRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name)
  return _s;
}
inline const std::string& StepHdrFile_StepRepeatRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* StepHdrFile_StepRepeatRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* StepHdrFile_StepRepeatRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void StepHdrFile_StepRepeatRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name)
}

// optional double x = 2;
inline bool StepHdrFile_StepRepeatRecord::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double StepHdrFile_StepRepeatRecord::x() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.x)
  return _internal_x();
}
inline void StepHdrFile_StepRepeatRecord::set_x(double value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.x)
}
inline double StepHdrFile_StepRepeatRecord::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_x(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional double y = 3;
inline bool StepHdrFile_StepRepeatRecord::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double StepHdrFile_StepRepeatRecord::y() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.y)
  return _internal_y();
}
inline void StepHdrFile_StepRepeatRecord::set_y(double value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.y)
}
inline double StepHdrFile_StepRepeatRecord::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_y(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional double dx = 4;
inline bool StepHdrFile_StepRepeatRecord::has_dx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_dx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double StepHdrFile_StepRepeatRecord::dx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.dx)
  return _internal_dx();
}
inline void StepHdrFile_StepRepeatRecord::set_dx(double value) {
  _internal_set_dx(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.dx)
}
inline double StepHdrFile_StepRepeatRecord::_internal_dx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dx_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_dx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dx_ = value;
}

// optional double dy = 5;
inline bool StepHdrFile_StepRepeatRecord::has_dy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_dy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double StepHdrFile_StepRepeatRecord::dy() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.dy)
  return _internal_dy();
}
inline void StepHdrFile_StepRepeatRecord::set_dy(double value) {
  _internal_set_dy(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.dy)
}
inline double StepHdrFile_StepRepeatRecord::_internal_dy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dy_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_dy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dy_ = value;
}

// optional int32 nx = 6;
inline bool StepHdrFile_StepRepeatRecord::has_nx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_nx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t StepHdrFile_StepRepeatRecord::nx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.nx)
  return _internal_nx();
}
inline void StepHdrFile_StepRepeatRecord::set_nx(::int32_t value) {
  _internal_set_nx(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.nx)
}
inline ::int32_t StepHdrFile_StepRepeatRecord::_internal_nx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nx_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_nx(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nx_ = value;
}

// optional int32 ny = 7;
inline bool StepHdrFile_StepRepeatRecord::has_ny() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_ny() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ny_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t StepHdrFile_StepRepeatRecord::ny() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.ny)
  return _internal_ny();
}
inline void StepHdrFile_StepRepeatRecord::set_ny(::int32_t value) {
  _internal_set_ny(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.ny)
}
inline ::int32_t StepHdrFile_StepRepeatRecord::_internal_ny() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ny_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_ny(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ny_ = value;
}

// optional double angle = 8;
inline bool StepHdrFile_StepRepeatRecord::has_angle() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_angle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double StepHdrFile_StepRepeatRecord::angle() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.angle)
  return _internal_angle();
}
inline void StepHdrFile_StepRepeatRecord::set_angle(double value) {
  _internal_set_angle(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.angle)
}
inline double StepHdrFile_StepRepeatRecord::_internal_angle() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.angle_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_angle(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.angle_ = value;
}

// optional bool flip = 9;
inline bool StepHdrFile_StepRepeatRecord::has_flip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_flip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flip_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool StepHdrFile_StepRepeatRecord::flip() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.flip)
  return _internal_flip();
}
inline void StepHdrFile_StepRepeatRecord::set_flip(bool value) {
  _internal_set_flip(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.flip)
}
inline bool StepHdrFile_StepRepeatRecord::_internal_flip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flip_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_flip(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flip_ = value;
}

// optional bool mirror = 10;
inline bool StepHdrFile_StepRepeatRecord::has_mirror() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void StepHdrFile_StepRepeatRecord::clear_mirror() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool StepHdrFile_StepRepeatRecord::mirror() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.mirror)
  return _internal_mirror();
}
inline void StepHdrFile_StepRepeatRecord::set_mirror(bool value) {
  _internal_set_mirror(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.mirror)
}
inline bool StepHdrFile_StepRepeatRecord::_internal_mirror() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mirror_;
}
inline void StepHdrFile_StepRepeatRecord::_internal_set_mirror(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mirror_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StepHdrFile

// optional double xDatum = 1;
inline bool StepHdrFile::has_xdatum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void StepHdrFile::clear_xdatum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xdatum_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double StepHdrFile::xdatum() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.xDatum)
  return _internal_xdatum();
}
inline void StepHdrFile::set_xdatum(double value) {
  _internal_set_xdatum(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.xDatum)
}
inline double StepHdrFile::_internal_xdatum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xdatum_;
}
inline void StepHdrFile::_internal_set_xdatum(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xdatum_ = value;
}

// optional double yDatum = 2;
inline bool StepHdrFile::has_ydatum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void StepHdrFile::clear_ydatum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ydatum_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double StepHdrFile::ydatum() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.yDatum)
  return _internal_ydatum();
}
inline void StepHdrFile::set_ydatum(double value) {
  _internal_set_ydatum(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.yDatum)
}
inline double StepHdrFile::_internal_ydatum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ydatum_;
}
inline void StepHdrFile::_internal_set_ydatum(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ydatum_ = value;
}

// optional int32 id = 3;
inline bool StepHdrFile::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void StepHdrFile::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t StepHdrFile::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.id)
  return _internal_id();
}
inline void StepHdrFile::set_id(::int32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.id)
}
inline ::int32_t StepHdrFile::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void StepHdrFile::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional double xOrigin = 4;
inline bool StepHdrFile::has_xorigin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void StepHdrFile::clear_xorigin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xorigin_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double StepHdrFile::xorigin() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.xOrigin)
  return _internal_xorigin();
}
inline void StepHdrFile::set_xorigin(double value) {
  _internal_set_xorigin(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.xOrigin)
}
inline double StepHdrFile::_internal_xorigin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xorigin_;
}
inline void StepHdrFile::_internal_set_xorigin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xorigin_ = value;
}

// optional double yOrigin = 5;
inline bool StepHdrFile::has_yorigin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void StepHdrFile::clear_yorigin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yorigin_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double StepHdrFile::yorigin() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.yOrigin)
  return _internal_yorigin();
}
inline void StepHdrFile::set_yorigin(double value) {
  _internal_set_yorigin(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.yOrigin)
}
inline double StepHdrFile::_internal_yorigin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yorigin_;
}
inline void StepHdrFile::_internal_set_yorigin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yorigin_ = value;
}

// optional double topActive = 6;
inline bool StepHdrFile::has_topactive() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void StepHdrFile::clear_topactive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topactive_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double StepHdrFile::topactive() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.topActive)
  return _internal_topactive();
}
inline void StepHdrFile::set_topactive(double value) {
  _internal_set_topactive(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.topActive)
}
inline double StepHdrFile::_internal_topactive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.topactive_;
}
inline void StepHdrFile::_internal_set_topactive(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.topactive_ = value;
}

// optional double bottomActive = 7;
inline bool StepHdrFile::has_bottomactive() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void StepHdrFile::clear_bottomactive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottomactive_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline double StepHdrFile::bottomactive() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.bottomActive)
  return _internal_bottomactive();
}
inline void StepHdrFile::set_bottomactive(double value) {
  _internal_set_bottomactive(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.bottomActive)
}
inline double StepHdrFile::_internal_bottomactive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bottomactive_;
}
inline void StepHdrFile::_internal_set_bottomactive(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bottomactive_ = value;
}

// optional double rightActive = 8;
inline bool StepHdrFile::has_rightactive() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void StepHdrFile::clear_rightactive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rightactive_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline double StepHdrFile::rightactive() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.rightActive)
  return _internal_rightactive();
}
inline void StepHdrFile::set_rightactive(double value) {
  _internal_set_rightactive(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.rightActive)
}
inline double StepHdrFile::_internal_rightactive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rightactive_;
}
inline void StepHdrFile::_internal_set_rightactive(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rightactive_ = value;
}

// optional double leftActive = 9;
inline bool StepHdrFile::has_leftactive() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void StepHdrFile::clear_leftactive() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leftactive_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline double StepHdrFile::leftactive() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.leftActive)
  return _internal_leftactive();
}
inline void StepHdrFile::set_leftactive(double value) {
  _internal_set_leftactive(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.leftActive)
}
inline double StepHdrFile::_internal_leftactive() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leftactive_;
}
inline void StepHdrFile::_internal_set_leftactive(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leftactive_ = value;
}

// optional string affectingBom = 10;
inline bool StepHdrFile::has_affectingbom() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void StepHdrFile::clear_affectingbom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affectingbom_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& StepHdrFile::affectingbom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.affectingBom)
  return _internal_affectingbom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StepHdrFile::set_affectingbom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.affectingbom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.affectingBom)
}
inline std::string* StepHdrFile::mutable_affectingbom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_affectingbom();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StepHdrFile.affectingBom)
  return _s;
}
inline const std::string& StepHdrFile::_internal_affectingbom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affectingbom_.Get();
}
inline void StepHdrFile::_internal_set_affectingbom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.affectingbom_.Set(value, GetArena());
}
inline std::string* StepHdrFile::_internal_mutable_affectingbom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.affectingbom_.Mutable( GetArena());
}
inline std::string* StepHdrFile::release_affectingbom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.StepHdrFile.affectingBom)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.affectingbom_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.affectingbom_.Set("", GetArena());
  }
  return released;
}
inline void StepHdrFile::set_allocated_affectingbom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.affectingbom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.affectingbom_.IsDefault()) {
    _impl_.affectingbom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.StepHdrFile.affectingBom)
}

// optional bool affectingBomChanged = 11;
inline bool StepHdrFile::has_affectingbomchanged() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void StepHdrFile::clear_affectingbomchanged() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affectingbomchanged_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool StepHdrFile::affectingbomchanged() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.affectingBomChanged)
  return _internal_affectingbomchanged();
}
inline void StepHdrFile::set_affectingbomchanged(bool value) {
  _internal_set_affectingbomchanged(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.affectingBomChanged)
}
inline bool StepHdrFile::_internal_affectingbomchanged() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affectingbomchanged_;
}
inline void StepHdrFile::_internal_set_affectingbomchanged(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affectingbomchanged_ = value;
}

// optional string online = 12;
inline bool StepHdrFile::has_online() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void StepHdrFile::clear_online() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.online_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& StepHdrFile::online() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.online)
  return _internal_online();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StepHdrFile::set_online(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.online_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.online)
}
inline std::string* StepHdrFile::mutable_online() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_online();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StepHdrFile.online)
  return _s;
}
inline const std::string& StepHdrFile::_internal_online() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.online_.Get();
}
inline void StepHdrFile::_internal_set_online(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.online_.Set(value, GetArena());
}
inline std::string* StepHdrFile::_internal_mutable_online() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.online_.Mutable( GetArena());
}
inline std::string* StepHdrFile::release_online() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.StepHdrFile.online)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.online_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.online_.Set("", GetArena());
  }
  return released;
}
inline void StepHdrFile::set_allocated_online(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.online_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.online_.IsDefault()) {
    _impl_.online_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.StepHdrFile.online)
}

// repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
inline int StepHdrFile::_internal_steprepeatrecords_size() const {
  return _internal_steprepeatrecords().size();
}
inline int StepHdrFile::steprepeatrecords_size() const {
  return _internal_steprepeatrecords_size();
}
inline void StepHdrFile::clear_steprepeatrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steprepeatrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord* StepHdrFile::mutable_steprepeatrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StepHdrFile.stepRepeatRecords)
  return _internal_mutable_steprepeatrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>* StepHdrFile::mutable_steprepeatrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.StepHdrFile.stepRepeatRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_steprepeatrecords();
}
inline const ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord& StepHdrFile::steprepeatrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.stepRepeatRecords)
  return _internal_steprepeatrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord* StepHdrFile::add_steprepeatrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord* _add = _internal_mutable_steprepeatrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.StepHdrFile.stepRepeatRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>& StepHdrFile::steprepeatrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.StepHdrFile.stepRepeatRecords)
  return _internal_steprepeatrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>&
StepHdrFile::_internal_steprepeatrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steprepeatrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>*
StepHdrFile::_internal_mutable_steprepeatrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.steprepeatrecords_;
}

// optional string path = 14;
inline bool StepHdrFile::has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void StepHdrFile::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& StepHdrFile::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.StepHdrFile.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StepHdrFile::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.StepHdrFile.path)
}
inline std::string* StepHdrFile::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.StepHdrFile.path)
  return _s;
}
inline const std::string& StepHdrFile::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void StepHdrFile::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* StepHdrFile::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* StepHdrFile::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.StepHdrFile.path)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void StepHdrFile::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.StepHdrFile.path)
}

// map<string, string> onlineValues = 15;
inline int StepHdrFile::_internal_onlinevalues_size() const {
  return _internal_onlinevalues().size();
}
inline int StepHdrFile::onlinevalues_size() const {
  return _internal_onlinevalues_size();
}
inline void StepHdrFile::clear_onlinevalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onlinevalues_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StepHdrFile::_internal_onlinevalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onlinevalues_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StepHdrFile::onlinevalues() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.StepHdrFile.onlineValues)
  return _internal_onlinevalues();
}
inline ::google::protobuf::Map<std::string, std::string>* StepHdrFile::_internal_mutable_onlinevalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.onlinevalues_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StepHdrFile::mutable_onlinevalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.StepHdrFile.onlineValues)
  return _internal_mutable_onlinevalues();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // stephdrfile_2eproto_2epb_2eh
