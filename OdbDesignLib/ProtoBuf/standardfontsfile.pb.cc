// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: standardfontsfile.proto
// Protobuf C++ Version: 5.29.2

#include "standardfontsfile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr StandardFontsFile_CharacterBlock_LineRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        xstart_{0},
        ystart_{0},
        xend_{0},
        yend_{0},
        polarity_{static_cast< ::Odb::Lib::Protobuf::Polarity >(0)},
        shape_{static_cast< ::Odb::Lib::Protobuf::LineShape >(0)},
        width_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlock_LineRecord::StandardFontsFile_CharacterBlock_LineRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal() {}
  union {
    StandardFontsFile_CharacterBlock_LineRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StandardFontsFile_CharacterBlock_LineRecordDefaultTypeInternal _StandardFontsFile_CharacterBlock_LineRecord_default_instance_;

inline constexpr StandardFontsFile_CharacterBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        m_linerecords_{},
        character_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlock::StandardFontsFile_CharacterBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StandardFontsFile_CharacterBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StandardFontsFile_CharacterBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StandardFontsFile_CharacterBlockDefaultTypeInternal() {}
  union {
    StandardFontsFile_CharacterBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StandardFontsFile_CharacterBlockDefaultTypeInternal _StandardFontsFile_CharacterBlock_default_instance_;

inline constexpr StandardFontsFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        m_characterblocks_{},
        xsize_{0},
        ysize_{0},
        offset_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StandardFontsFile::StandardFontsFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StandardFontsFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StandardFontsFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StandardFontsFileDefaultTypeInternal() {}
  union {
    StandardFontsFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StandardFontsFileDefaultTypeInternal _StandardFontsFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_standardfontsfile_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_standardfontsfile_2eproto = nullptr;
const ::uint32_t
    TableStruct_standardfontsfile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.xstart_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.ystart_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.xend_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.yend_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.polarity_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.shape_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord, _impl_.width_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock, _impl_.character_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock, _impl_.m_linerecords_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _impl_.xsize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _impl_.ysize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _impl_.offset_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StandardFontsFile, _impl_.m_characterblocks_),
        0,
        1,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord)},
        {22, 32, -1, sizeof(::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock)},
        {34, 46, -1, sizeof(::Odb::Lib::Protobuf::StandardFontsFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_StandardFontsFile_CharacterBlock_LineRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_StandardFontsFile_CharacterBlock_default_instance_._instance,
    &::Odb::Lib::Protobuf::_StandardFontsFile_default_instance_._instance,
};
const char descriptor_table_protodef_standardfontsfile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027standardfontsfile.proto\022\020Odb.Lib.Proto"
    "buf\032\013enums.proto\"\355\004\n\021StandardFontsFile\022\022"
    "\n\005xSize\030\001 \001(\001H\000\210\001\001\022\022\n\005ySize\030\002 \001(\001H\001\210\001\001\022\023"
    "\n\006offset\030\003 \001(\001H\002\210\001\001\022M\n\021m_characterBlocks"
    "\030\004 \003(\01322.Odb.Lib.Protobuf.StandardFontsF"
    "ile.CharacterBlock\032\254\003\n\016CharacterBlock\022\026\n"
    "\tcharacter\030\001 \001(\tH\000\210\001\001\022T\n\rm_lineRecords\030\002"
    " \003(\0132=.Odb.Lib.Protobuf.StandardFontsFil"
    "e.CharacterBlock.LineRecord\032\235\002\n\nLineReco"
    "rd\022\023\n\006xStart\030\001 \001(\001H\000\210\001\001\022\023\n\006yStart\030\002 \001(\001H"
    "\001\210\001\001\022\021\n\004xEnd\030\003 \001(\001H\002\210\001\001\022\021\n\004yEnd\030\004 \001(\001H\003\210"
    "\001\001\0221\n\010polarity\030\005 \001(\0162\032.Odb.Lib.Protobuf."
    "PolarityH\004\210\001\001\022/\n\005shape\030\006 \001(\0162\033.Odb.Lib.P"
    "rotobuf.LineShapeH\005\210\001\001\022\022\n\005width\030\007 \001(\001H\006\210"
    "\001\001B\t\n\007_xStartB\t\n\007_yStartB\007\n\005_xEndB\007\n\005_yE"
    "ndB\013\n\t_polarityB\010\n\006_shapeB\010\n\006_widthB\014\n\n_"
    "characterB\010\n\006_xSizeB\010\n\006_ySizeB\t\n\007_offset"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_standardfontsfile_2eproto_deps[1] =
    {
        &::descriptor_table_enums_2eproto,
};
static ::absl::once_flag descriptor_table_standardfontsfile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_standardfontsfile_2eproto = {
    false,
    false,
    688,
    descriptor_table_protodef_standardfontsfile_2eproto,
    "standardfontsfile.proto",
    &descriptor_table_standardfontsfile_2eproto_once,
    descriptor_table_standardfontsfile_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_standardfontsfile_2eproto::offsets,
    file_level_enum_descriptors_standardfontsfile_2eproto,
    file_level_service_descriptors_standardfontsfile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
// ===================================================================

class StandardFontsFile_CharacterBlock_LineRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StandardFontsFile_CharacterBlock_LineRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_._has_bits_);
};

StandardFontsFile_CharacterBlock_LineRecord::StandardFontsFile_CharacterBlock_LineRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
}
StandardFontsFile_CharacterBlock_LineRecord::StandardFontsFile_CharacterBlock_LineRecord(
    ::google::protobuf::Arena* arena, const StandardFontsFile_CharacterBlock_LineRecord& from)
    : StandardFontsFile_CharacterBlock_LineRecord(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE StandardFontsFile_CharacterBlock_LineRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void StandardFontsFile_CharacterBlock_LineRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xstart_),
           0,
           offsetof(Impl_, width_) -
               offsetof(Impl_, xstart_) +
               sizeof(Impl_::width_));
}
StandardFontsFile_CharacterBlock_LineRecord::~StandardFontsFile_CharacterBlock_LineRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
  SharedDtor(*this);
}
inline void StandardFontsFile_CharacterBlock_LineRecord::SharedDtor(MessageLite& self) {
  StandardFontsFile_CharacterBlock_LineRecord& this_ = static_cast<StandardFontsFile_CharacterBlock_LineRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StandardFontsFile_CharacterBlock_LineRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StandardFontsFile_CharacterBlock_LineRecord(arena);
}
constexpr auto StandardFontsFile_CharacterBlock_LineRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StandardFontsFile_CharacterBlock_LineRecord),
                                            alignof(StandardFontsFile_CharacterBlock_LineRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StandardFontsFile_CharacterBlock_LineRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StandardFontsFile_CharacterBlock_LineRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StandardFontsFile_CharacterBlock_LineRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StandardFontsFile_CharacterBlock_LineRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StandardFontsFile_CharacterBlock_LineRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StandardFontsFile_CharacterBlock_LineRecord>(), &StandardFontsFile_CharacterBlock_LineRecord::ByteSizeLong,
            &StandardFontsFile_CharacterBlock_LineRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_._cached_size_),
        false,
    },
    &StandardFontsFile_CharacterBlock_LineRecord::kDescriptorMethods,
    &descriptor_table_standardfontsfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StandardFontsFile_CharacterBlock_LineRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> StandardFontsFile_CharacterBlock_LineRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional double xStart = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.xstart_)}},
    // optional double yStart = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.ystart_)}},
    // optional double xEnd = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.xend_)}},
    // optional double yEnd = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.yend_)}},
    // optional .Odb.Lib.Protobuf.Polarity polarity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StandardFontsFile_CharacterBlock_LineRecord, _impl_.polarity_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.polarity_)}},
    // optional .Odb.Lib.Protobuf.LineShape shape = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StandardFontsFile_CharacterBlock_LineRecord, _impl_.shape_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.shape_)}},
    // optional double width = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 6, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double xStart = 1;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.xstart_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double yStart = 2;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.ystart_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double xEnd = 3;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.xend_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double yEnd = 4;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.yend_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional .Odb.Lib.Protobuf.Polarity polarity = 5;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.polarity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .Odb.Lib.Protobuf.LineShape shape = 6;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.shape_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional double width = 7;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.width_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void StandardFontsFile_CharacterBlock_LineRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.xstart_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.width_) -
        reinterpret_cast<char*>(&_impl_.xstart_)) + sizeof(_impl_.width_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StandardFontsFile_CharacterBlock_LineRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StandardFontsFile_CharacterBlock_LineRecord& this_ = static_cast<const StandardFontsFile_CharacterBlock_LineRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StandardFontsFile_CharacterBlock_LineRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StandardFontsFile_CharacterBlock_LineRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional double xStart = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_xstart(), target);
          }

          // optional double yStart = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_ystart(), target);
          }

          // optional double xEnd = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_xend(), target);
          }

          // optional double yEnd = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_yend(), target);
          }

          // optional .Odb.Lib.Protobuf.Polarity polarity = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_polarity(), target);
          }

          // optional .Odb.Lib.Protobuf.LineShape shape = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_shape(), target);
          }

          // optional double width = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_width(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StandardFontsFile_CharacterBlock_LineRecord::ByteSizeLong(const MessageLite& base) {
          const StandardFontsFile_CharacterBlock_LineRecord& this_ = static_cast<const StandardFontsFile_CharacterBlock_LineRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StandardFontsFile_CharacterBlock_LineRecord::ByteSizeLong() const {
          const StandardFontsFile_CharacterBlock_LineRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional double xStart = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 9;
            }
            // optional double yStart = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 9;
            }
            // optional double xEnd = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 9;
            }
            // optional double yEnd = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 9;
            }
            // optional .Odb.Lib.Protobuf.Polarity polarity = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_polarity());
            }
            // optional .Odb.Lib.Protobuf.LineShape shape = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_shape());
            }
            // optional double width = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StandardFontsFile_CharacterBlock_LineRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StandardFontsFile_CharacterBlock_LineRecord*>(&to_msg);
  auto& from = static_cast<const StandardFontsFile_CharacterBlock_LineRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.xstart_ = from._impl_.xstart_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ystart_ = from._impl_.ystart_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.xend_ = from._impl_.xend_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.yend_ = from._impl_.yend_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.polarity_ = from._impl_.polarity_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.shape_ = from._impl_.shape_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StandardFontsFile_CharacterBlock_LineRecord::CopyFrom(const StandardFontsFile_CharacterBlock_LineRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StandardFontsFile_CharacterBlock_LineRecord::InternalSwap(StandardFontsFile_CharacterBlock_LineRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.width_)
      + sizeof(StandardFontsFile_CharacterBlock_LineRecord::_impl_.width_)
      - PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock_LineRecord, _impl_.xstart_)>(
          reinterpret_cast<char*>(&_impl_.xstart_),
          reinterpret_cast<char*>(&other->_impl_.xstart_));
}

::google::protobuf::Metadata StandardFontsFile_CharacterBlock_LineRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StandardFontsFile_CharacterBlock::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StandardFontsFile_CharacterBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_._has_bits_);
};

StandardFontsFile_CharacterBlock::StandardFontsFile_CharacterBlock(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
}
inline PROTOBUF_NDEBUG_INLINE StandardFontsFile_CharacterBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        m_linerecords_{visibility, arena, from.m_linerecords_},
        character_(arena, from.character_) {}

StandardFontsFile_CharacterBlock::StandardFontsFile_CharacterBlock(
    ::google::protobuf::Arena* arena,
    const StandardFontsFile_CharacterBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StandardFontsFile_CharacterBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
}
inline PROTOBUF_NDEBUG_INLINE StandardFontsFile_CharacterBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        m_linerecords_{visibility, arena},
        character_(arena) {}

inline void StandardFontsFile_CharacterBlock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StandardFontsFile_CharacterBlock::~StandardFontsFile_CharacterBlock() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
  SharedDtor(*this);
}
inline void StandardFontsFile_CharacterBlock::SharedDtor(MessageLite& self) {
  StandardFontsFile_CharacterBlock& this_ = static_cast<StandardFontsFile_CharacterBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.character_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StandardFontsFile_CharacterBlock::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StandardFontsFile_CharacterBlock(arena);
}
constexpr auto StandardFontsFile_CharacterBlock::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_.m_linerecords_) +
          decltype(StandardFontsFile_CharacterBlock::_impl_.m_linerecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(StandardFontsFile_CharacterBlock), alignof(StandardFontsFile_CharacterBlock), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StandardFontsFile_CharacterBlock::PlacementNew_,
                                 sizeof(StandardFontsFile_CharacterBlock),
                                 alignof(StandardFontsFile_CharacterBlock));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StandardFontsFile_CharacterBlock::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StandardFontsFile_CharacterBlock_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StandardFontsFile_CharacterBlock::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StandardFontsFile_CharacterBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StandardFontsFile_CharacterBlock::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StandardFontsFile_CharacterBlock>(), &StandardFontsFile_CharacterBlock::ByteSizeLong,
            &StandardFontsFile_CharacterBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_._cached_size_),
        false,
    },
    &StandardFontsFile_CharacterBlock::kDescriptorMethods,
    &descriptor_table_standardfontsfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StandardFontsFile_CharacterBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 67, 2> StandardFontsFile_CharacterBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_.m_linerecords_)}},
    // optional string character = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_.character_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string character = 1;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_.character_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile_CharacterBlock, _impl_.m_linerecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock_LineRecord>()},
  }}, {{
    "\61\11\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock"
    "character"
  }},
};

PROTOBUF_NOINLINE void StandardFontsFile_CharacterBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.m_linerecords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.character_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StandardFontsFile_CharacterBlock::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StandardFontsFile_CharacterBlock& this_ = static_cast<const StandardFontsFile_CharacterBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StandardFontsFile_CharacterBlock::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StandardFontsFile_CharacterBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string character = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_character();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.character");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_m_linerecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_m_linerecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StandardFontsFile_CharacterBlock::ByteSizeLong(const MessageLite& base) {
          const StandardFontsFile_CharacterBlock& this_ = static_cast<const StandardFontsFile_CharacterBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StandardFontsFile_CharacterBlock::ByteSizeLong() const {
          const StandardFontsFile_CharacterBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock.LineRecord m_lineRecords = 2;
            {
              total_size += 1UL * this_._internal_m_linerecords_size();
              for (const auto& msg : this_._internal_m_linerecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional string character = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_character());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StandardFontsFile_CharacterBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StandardFontsFile_CharacterBlock*>(&to_msg);
  auto& from = static_cast<const StandardFontsFile_CharacterBlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_m_linerecords()->MergeFrom(
      from._internal_m_linerecords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_character(from._internal_character());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StandardFontsFile_CharacterBlock::CopyFrom(const StandardFontsFile_CharacterBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StandardFontsFile_CharacterBlock::InternalSwap(StandardFontsFile_CharacterBlock* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.m_linerecords_.InternalSwap(&other->_impl_.m_linerecords_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.character_, &other->_impl_.character_, arena);
}

::google::protobuf::Metadata StandardFontsFile_CharacterBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StandardFontsFile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StandardFontsFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_._has_bits_);
};

StandardFontsFile::StandardFontsFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.StandardFontsFile)
}
inline PROTOBUF_NDEBUG_INLINE StandardFontsFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::StandardFontsFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        m_characterblocks_{visibility, arena, from.m_characterblocks_} {}

StandardFontsFile::StandardFontsFile(
    ::google::protobuf::Arena* arena,
    const StandardFontsFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StandardFontsFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xsize_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, xsize_),
           offsetof(Impl_, offset_) -
               offsetof(Impl_, xsize_) +
               sizeof(Impl_::offset_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.StandardFontsFile)
}
inline PROTOBUF_NDEBUG_INLINE StandardFontsFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        m_characterblocks_{visibility, arena} {}

inline void StandardFontsFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xsize_),
           0,
           offsetof(Impl_, offset_) -
               offsetof(Impl_, xsize_) +
               sizeof(Impl_::offset_));
}
StandardFontsFile::~StandardFontsFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.StandardFontsFile)
  SharedDtor(*this);
}
inline void StandardFontsFile::SharedDtor(MessageLite& self) {
  StandardFontsFile& this_ = static_cast<StandardFontsFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* StandardFontsFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StandardFontsFile(arena);
}
constexpr auto StandardFontsFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.m_characterblocks_) +
          decltype(StandardFontsFile::_impl_.m_characterblocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(StandardFontsFile), alignof(StandardFontsFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StandardFontsFile::PlacementNew_,
                                 sizeof(StandardFontsFile),
                                 alignof(StandardFontsFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StandardFontsFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StandardFontsFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StandardFontsFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StandardFontsFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StandardFontsFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StandardFontsFile>(), &StandardFontsFile::ByteSizeLong,
            &StandardFontsFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_._cached_size_),
        false,
    },
    &StandardFontsFile::kDescriptorMethods,
    &descriptor_table_standardfontsfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StandardFontsFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> StandardFontsFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.m_characterblocks_)}},
    // optional double xSize = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 0, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.xsize_)}},
    // optional double ySize = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.ysize_)}},
    // optional double offset = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.offset_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional double xSize = 1;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.xsize_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double ySize = 2;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.ysize_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double offset = 3;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.offset_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
    {PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.m_characterblocks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StandardFontsFile_CharacterBlock>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StandardFontsFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.StandardFontsFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.m_characterblocks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.xsize_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.offset_) -
        reinterpret_cast<char*>(&_impl_.xsize_)) + sizeof(_impl_.offset_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StandardFontsFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StandardFontsFile& this_ = static_cast<const StandardFontsFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StandardFontsFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StandardFontsFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.StandardFontsFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional double xSize = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_xsize(), target);
          }

          // optional double ySize = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_ysize(), target);
          }

          // optional double offset = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_offset(), target);
          }

          // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_m_characterblocks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_m_characterblocks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.StandardFontsFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StandardFontsFile::ByteSizeLong(const MessageLite& base) {
          const StandardFontsFile& this_ = static_cast<const StandardFontsFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StandardFontsFile::ByteSizeLong() const {
          const StandardFontsFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.StandardFontsFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.StandardFontsFile.CharacterBlock m_characterBlocks = 4;
            {
              total_size += 1UL * this_._internal_m_characterblocks_size();
              for (const auto& msg : this_._internal_m_characterblocks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional double xSize = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 9;
            }
            // optional double ySize = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 9;
            }
            // optional double offset = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StandardFontsFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StandardFontsFile*>(&to_msg);
  auto& from = static_cast<const StandardFontsFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.StandardFontsFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_m_characterblocks()->MergeFrom(
      from._internal_m_characterblocks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.xsize_ = from._impl_.xsize_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ysize_ = from._impl_.ysize_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.offset_ = from._impl_.offset_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StandardFontsFile::CopyFrom(const StandardFontsFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.StandardFontsFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StandardFontsFile::InternalSwap(StandardFontsFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.m_characterblocks_.InternalSwap(&other->_impl_.m_characterblocks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.offset_)
      + sizeof(StandardFontsFile::_impl_.offset_)
      - PROTOBUF_FIELD_OFFSET(StandardFontsFile, _impl_.xsize_)>(
          reinterpret_cast<char*>(&_impl_.xsize_),
          reinterpret_cast<char*>(&other->_impl_.xsize_));
}

::google::protobuf::Metadata StandardFontsFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_standardfontsfile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
