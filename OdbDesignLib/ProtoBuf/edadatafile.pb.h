// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: edadatafile.proto
// Protobuf C++ Version: 5.29.2

#ifndef edadatafile_2eproto_2epb_2eh
#define edadatafile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common.pb.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_edadatafile_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_edadatafile_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_edadatafile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class EdaDataFile;
struct EdaDataFileDefaultTypeInternal;
extern EdaDataFileDefaultTypeInternal _EdaDataFile_default_instance_;
class EdaDataFile_FeatureGroupRecord;
struct EdaDataFile_FeatureGroupRecordDefaultTypeInternal;
extern EdaDataFile_FeatureGroupRecordDefaultTypeInternal _EdaDataFile_FeatureGroupRecord_default_instance_;
class EdaDataFile_FeatureIdRecord;
struct EdaDataFile_FeatureIdRecordDefaultTypeInternal;
extern EdaDataFile_FeatureIdRecordDefaultTypeInternal _EdaDataFile_FeatureIdRecord_default_instance_;
class EdaDataFile_NetRecord;
struct EdaDataFile_NetRecordDefaultTypeInternal;
extern EdaDataFile_NetRecordDefaultTypeInternal _EdaDataFile_NetRecord_default_instance_;
class EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse;
struct EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal;
extern EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;
class EdaDataFile_NetRecord_SubnetRecord;
struct EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal;
extern EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal _EdaDataFile_NetRecord_SubnetRecord_default_instance_;
class EdaDataFile_NetRecordsByNameEntry_DoNotUse;
struct EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal;
extern EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_NetRecordsByNameEntry_DoNotUse_default_instance_;
class EdaDataFile_PackageRecord;
struct EdaDataFile_PackageRecordDefaultTypeInternal;
extern EdaDataFile_PackageRecordDefaultTypeInternal _EdaDataFile_PackageRecord_default_instance_;
class EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse;
struct EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal;
extern EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;
class EdaDataFile_PackageRecord_OutlineRecord;
struct EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal;
extern EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal _EdaDataFile_PackageRecord_OutlineRecord_default_instance_;
class EdaDataFile_PackageRecord_PinRecord;
struct EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal;
extern EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal _EdaDataFile_PackageRecord_PinRecord_default_instance_;
class EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse;
struct EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal;
extern EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse_default_instance_;
class EdaDataFile_PackageRecordsByNameEntry_DoNotUse;
struct EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal;
extern EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecordsByNameEntry_DoNotUse_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {
enum EdaDataFile_FeatureIdRecord_Type : int {
  EdaDataFile_FeatureIdRecord_Type_COPPER = 0,
  EdaDataFile_FeatureIdRecord_Type_LAMINATE = 1,
  EdaDataFile_FeatureIdRecord_Type_HOLE = 2,
  EdaDataFile_FeatureIdRecord_Type_EdaDataFile_FeatureIdRecord_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_FeatureIdRecord_Type_EdaDataFile_FeatureIdRecord_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_FeatureIdRecord_Type_IsValid(int value);
extern const uint32_t EdaDataFile_FeatureIdRecord_Type_internal_data_[];
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord_Type_Type_MIN = static_cast<EdaDataFile_FeatureIdRecord_Type>(0);
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord_Type_Type_MAX = static_cast<EdaDataFile_FeatureIdRecord_Type>(2);
constexpr int EdaDataFile_FeatureIdRecord_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_FeatureIdRecord_Type_descriptor();
template <typename T>
const std::string& EdaDataFile_FeatureIdRecord_Type_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_FeatureIdRecord_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return EdaDataFile_FeatureIdRecord_Type_Name(static_cast<EdaDataFile_FeatureIdRecord_Type>(value));
}
template <>
inline const std::string& EdaDataFile_FeatureIdRecord_Type_Name(EdaDataFile_FeatureIdRecord_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_FeatureIdRecord_Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EdaDataFile_FeatureIdRecord_Type_Parse(absl::string_view name, EdaDataFile_FeatureIdRecord_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_FeatureIdRecord_Type>(
      EdaDataFile_FeatureIdRecord_Type_descriptor(), name, value);
}
enum EdaDataFile_NetRecord_SubnetRecord_Type : int {
  EdaDataFile_NetRecord_SubnetRecord_Type_VIA = 0,
  EdaDataFile_NetRecord_SubnetRecord_Type_TRACE = 1,
  EdaDataFile_NetRecord_SubnetRecord_Type_PLANE = 2,
  EdaDataFile_NetRecord_SubnetRecord_Type_TOEPRINT = 3,
  EdaDataFile_NetRecord_SubnetRecord_Type_EdaDataFile_NetRecord_SubnetRecord_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_NetRecord_SubnetRecord_Type_EdaDataFile_NetRecord_SubnetRecord_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_NetRecord_SubnetRecord_Type_IsValid(int value);
extern const uint32_t EdaDataFile_NetRecord_SubnetRecord_Type_internal_data_[];
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord_Type_Type_MIN = static_cast<EdaDataFile_NetRecord_SubnetRecord_Type>(0);
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord_Type_Type_MAX = static_cast<EdaDataFile_NetRecord_SubnetRecord_Type>(3);
constexpr int EdaDataFile_NetRecord_SubnetRecord_Type_Type_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_NetRecord_SubnetRecord_Type_descriptor();
template <typename T>
const std::string& EdaDataFile_NetRecord_SubnetRecord_Type_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_NetRecord_SubnetRecord_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return EdaDataFile_NetRecord_SubnetRecord_Type_Name(static_cast<EdaDataFile_NetRecord_SubnetRecord_Type>(value));
}
template <>
inline const std::string& EdaDataFile_NetRecord_SubnetRecord_Type_Name(EdaDataFile_NetRecord_SubnetRecord_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_NetRecord_SubnetRecord_Type_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool EdaDataFile_NetRecord_SubnetRecord_Type_Parse(absl::string_view name, EdaDataFile_NetRecord_SubnetRecord_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_NetRecord_SubnetRecord_Type>(
      EdaDataFile_NetRecord_SubnetRecord_Type_descriptor(), name, value);
}
enum EdaDataFile_NetRecord_SubnetRecord_FillType : int {
  EdaDataFile_NetRecord_SubnetRecord_FillType_SOLID = 0,
  EdaDataFile_NetRecord_SubnetRecord_FillType_OUTLINE = 1,
  EdaDataFile_NetRecord_SubnetRecord_FillType_EdaDataFile_NetRecord_SubnetRecord_FillType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_NetRecord_SubnetRecord_FillType_EdaDataFile_NetRecord_SubnetRecord_FillType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_NetRecord_SubnetRecord_FillType_IsValid(int value);
extern const uint32_t EdaDataFile_NetRecord_SubnetRecord_FillType_internal_data_[];
constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_MIN = static_cast<EdaDataFile_NetRecord_SubnetRecord_FillType>(0);
constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_MAX = static_cast<EdaDataFile_NetRecord_SubnetRecord_FillType>(1);
constexpr int EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor();
template <typename T>
const std::string& EdaDataFile_NetRecord_SubnetRecord_FillType_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_NetRecord_SubnetRecord_FillType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FillType_Name().");
  return EdaDataFile_NetRecord_SubnetRecord_FillType_Name(static_cast<EdaDataFile_NetRecord_SubnetRecord_FillType>(value));
}
template <>
inline const std::string& EdaDataFile_NetRecord_SubnetRecord_FillType_Name(EdaDataFile_NetRecord_SubnetRecord_FillType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool EdaDataFile_NetRecord_SubnetRecord_FillType_Parse(absl::string_view name, EdaDataFile_NetRecord_SubnetRecord_FillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_NetRecord_SubnetRecord_FillType>(
      EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor(), name, value);
}
enum EdaDataFile_NetRecord_SubnetRecord_CutoutType : int {
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_CIRCLE = 0,
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_RECTANGLE = 1,
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_OCTAGON = 2,
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_EXACT = 3,
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_EdaDataFile_NetRecord_SubnetRecord_CutoutType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_NetRecord_SubnetRecord_CutoutType_EdaDataFile_NetRecord_SubnetRecord_CutoutType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_NetRecord_SubnetRecord_CutoutType_IsValid(int value);
extern const uint32_t EdaDataFile_NetRecord_SubnetRecord_CutoutType_internal_data_[];
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_MIN = static_cast<EdaDataFile_NetRecord_SubnetRecord_CutoutType>(0);
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_MAX = static_cast<EdaDataFile_NetRecord_SubnetRecord_CutoutType>(3);
constexpr int EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor();
template <typename T>
const std::string& EdaDataFile_NetRecord_SubnetRecord_CutoutType_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_NetRecord_SubnetRecord_CutoutType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CutoutType_Name().");
  return EdaDataFile_NetRecord_SubnetRecord_CutoutType_Name(static_cast<EdaDataFile_NetRecord_SubnetRecord_CutoutType>(value));
}
template <>
inline const std::string& EdaDataFile_NetRecord_SubnetRecord_CutoutType_Name(EdaDataFile_NetRecord_SubnetRecord_CutoutType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool EdaDataFile_NetRecord_SubnetRecord_CutoutType_Parse(absl::string_view name, EdaDataFile_NetRecord_SubnetRecord_CutoutType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_NetRecord_SubnetRecord_CutoutType>(
      EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor(), name, value);
}
enum EdaDataFile_PackageRecord_OutlineRecord_Type : int {
  EdaDataFile_PackageRecord_OutlineRecord_Type_Rectangle = 0,
  EdaDataFile_PackageRecord_OutlineRecord_Type_Circle = 1,
  EdaDataFile_PackageRecord_OutlineRecord_Type_Square = 2,
  EdaDataFile_PackageRecord_OutlineRecord_Type_Contour = 3,
  EdaDataFile_PackageRecord_OutlineRecord_Type_EdaDataFile_PackageRecord_OutlineRecord_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_PackageRecord_OutlineRecord_Type_EdaDataFile_PackageRecord_OutlineRecord_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_PackageRecord_OutlineRecord_Type_IsValid(int value);
extern const uint32_t EdaDataFile_PackageRecord_OutlineRecord_Type_internal_data_[];
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord_Type_Type_MIN = static_cast<EdaDataFile_PackageRecord_OutlineRecord_Type>(0);
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord_Type_Type_MAX = static_cast<EdaDataFile_PackageRecord_OutlineRecord_Type>(3);
constexpr int EdaDataFile_PackageRecord_OutlineRecord_Type_Type_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor();
template <typename T>
const std::string& EdaDataFile_PackageRecord_OutlineRecord_Type_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_PackageRecord_OutlineRecord_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return EdaDataFile_PackageRecord_OutlineRecord_Type_Name(static_cast<EdaDataFile_PackageRecord_OutlineRecord_Type>(value));
}
template <>
inline const std::string& EdaDataFile_PackageRecord_OutlineRecord_Type_Name(EdaDataFile_PackageRecord_OutlineRecord_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool EdaDataFile_PackageRecord_OutlineRecord_Type_Parse(absl::string_view name, EdaDataFile_PackageRecord_OutlineRecord_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_PackageRecord_OutlineRecord_Type>(
      EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor(), name, value);
}
enum EdaDataFile_PackageRecord_PinRecord_Type : int {
  EdaDataFile_PackageRecord_PinRecord_Type_ThroughHole = 0,
  EdaDataFile_PackageRecord_PinRecord_Type_Blind = 1,
  EdaDataFile_PackageRecord_PinRecord_Type_Surface = 2,
  EdaDataFile_PackageRecord_PinRecord_Type_EdaDataFile_PackageRecord_PinRecord_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_PackageRecord_PinRecord_Type_EdaDataFile_PackageRecord_PinRecord_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_PackageRecord_PinRecord_Type_IsValid(int value);
extern const uint32_t EdaDataFile_PackageRecord_PinRecord_Type_internal_data_[];
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord_Type_Type_MIN = static_cast<EdaDataFile_PackageRecord_PinRecord_Type>(0);
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord_Type_Type_MAX = static_cast<EdaDataFile_PackageRecord_PinRecord_Type>(2);
constexpr int EdaDataFile_PackageRecord_PinRecord_Type_Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_PackageRecord_PinRecord_Type_descriptor();
template <typename T>
const std::string& EdaDataFile_PackageRecord_PinRecord_Type_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_PackageRecord_PinRecord_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return EdaDataFile_PackageRecord_PinRecord_Type_Name(static_cast<EdaDataFile_PackageRecord_PinRecord_Type>(value));
}
template <>
inline const std::string& EdaDataFile_PackageRecord_PinRecord_Type_Name(EdaDataFile_PackageRecord_PinRecord_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_PackageRecord_PinRecord_Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EdaDataFile_PackageRecord_PinRecord_Type_Parse(absl::string_view name, EdaDataFile_PackageRecord_PinRecord_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_PackageRecord_PinRecord_Type>(
      EdaDataFile_PackageRecord_PinRecord_Type_descriptor(), name, value);
}
enum EdaDataFile_PackageRecord_PinRecord_ElectricalType : int {
  EdaDataFile_PackageRecord_PinRecord_ElectricalType_Electrical = 0,
  EdaDataFile_PackageRecord_PinRecord_ElectricalType_NonElectrical = 1,
  EdaDataFile_PackageRecord_PinRecord_ElectricalType_Undefined = 2,
  EdaDataFile_PackageRecord_PinRecord_ElectricalType_EdaDataFile_PackageRecord_PinRecord_ElectricalType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_PackageRecord_PinRecord_ElectricalType_EdaDataFile_PackageRecord_PinRecord_ElectricalType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_PackageRecord_PinRecord_ElectricalType_IsValid(int value);
extern const uint32_t EdaDataFile_PackageRecord_PinRecord_ElectricalType_internal_data_[];
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_MIN = static_cast<EdaDataFile_PackageRecord_PinRecord_ElectricalType>(0);
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_MAX = static_cast<EdaDataFile_PackageRecord_PinRecord_ElectricalType>(2);
constexpr int EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor();
template <typename T>
const std::string& EdaDataFile_PackageRecord_PinRecord_ElectricalType_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_PackageRecord_PinRecord_ElectricalType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ElectricalType_Name().");
  return EdaDataFile_PackageRecord_PinRecord_ElectricalType_Name(static_cast<EdaDataFile_PackageRecord_PinRecord_ElectricalType>(value));
}
template <>
inline const std::string& EdaDataFile_PackageRecord_PinRecord_ElectricalType_Name(EdaDataFile_PackageRecord_PinRecord_ElectricalType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool EdaDataFile_PackageRecord_PinRecord_ElectricalType_Parse(absl::string_view name, EdaDataFile_PackageRecord_PinRecord_ElectricalType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_PackageRecord_PinRecord_ElectricalType>(
      EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor(), name, value);
}
enum EdaDataFile_PackageRecord_PinRecord_MountType : int {
  EdaDataFile_PackageRecord_PinRecord_MountType_Smt = 0,
  EdaDataFile_PackageRecord_PinRecord_MountType_RecommendedSmtPad = 1,
  EdaDataFile_PackageRecord_PinRecord_MountType_MT_ThroughHole = 2,
  EdaDataFile_PackageRecord_PinRecord_MountType_RecommendedThroughHole = 3,
  EdaDataFile_PackageRecord_PinRecord_MountType_PressFit = 4,
  EdaDataFile_PackageRecord_PinRecord_MountType_NonBoard = 5,
  EdaDataFile_PackageRecord_PinRecord_MountType_Hole = 6,
  EdaDataFile_PackageRecord_PinRecord_MountType_MT_Undefined = 7,
  EdaDataFile_PackageRecord_PinRecord_MountType_EdaDataFile_PackageRecord_PinRecord_MountType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EdaDataFile_PackageRecord_PinRecord_MountType_EdaDataFile_PackageRecord_PinRecord_MountType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EdaDataFile_PackageRecord_PinRecord_MountType_IsValid(int value);
extern const uint32_t EdaDataFile_PackageRecord_PinRecord_MountType_internal_data_[];
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord_MountType_MountType_MIN = static_cast<EdaDataFile_PackageRecord_PinRecord_MountType>(0);
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord_MountType_MountType_MAX = static_cast<EdaDataFile_PackageRecord_PinRecord_MountType>(7);
constexpr int EdaDataFile_PackageRecord_PinRecord_MountType_MountType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
EdaDataFile_PackageRecord_PinRecord_MountType_descriptor();
template <typename T>
const std::string& EdaDataFile_PackageRecord_PinRecord_MountType_Name(T value) {
  static_assert(std::is_same<T, EdaDataFile_PackageRecord_PinRecord_MountType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MountType_Name().");
  return EdaDataFile_PackageRecord_PinRecord_MountType_Name(static_cast<EdaDataFile_PackageRecord_PinRecord_MountType>(value));
}
template <>
inline const std::string& EdaDataFile_PackageRecord_PinRecord_MountType_Name(EdaDataFile_PackageRecord_PinRecord_MountType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EdaDataFile_PackageRecord_PinRecord_MountType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool EdaDataFile_PackageRecord_PinRecord_MountType_Parse(absl::string_view name, EdaDataFile_PackageRecord_PinRecord_MountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EdaDataFile_PackageRecord_PinRecord_MountType>(
      EdaDataFile_PackageRecord_PinRecord_MountType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class EdaDataFile_PackageRecord_PinRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord) */ {
 public:
  inline EdaDataFile_PackageRecord_PinRecord() : EdaDataFile_PackageRecord_PinRecord(nullptr) {}
  ~EdaDataFile_PackageRecord_PinRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_PackageRecord_PinRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_PackageRecord_PinRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_PackageRecord_PinRecord(const EdaDataFile_PackageRecord_PinRecord& from) : EdaDataFile_PackageRecord_PinRecord(nullptr, from) {}
  inline EdaDataFile_PackageRecord_PinRecord(EdaDataFile_PackageRecord_PinRecord&& from) noexcept
      : EdaDataFile_PackageRecord_PinRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_PackageRecord_PinRecord& operator=(const EdaDataFile_PackageRecord_PinRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_PackageRecord_PinRecord& operator=(EdaDataFile_PackageRecord_PinRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_PackageRecord_PinRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_PackageRecord_PinRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecord_PinRecord*>(
        &_EdaDataFile_PackageRecord_PinRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(EdaDataFile_PackageRecord_PinRecord& a, EdaDataFile_PackageRecord_PinRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_PackageRecord_PinRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_PackageRecord_PinRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_PackageRecord_PinRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_PackageRecord_PinRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_PackageRecord_PinRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_PackageRecord_PinRecord& from) { EdaDataFile_PackageRecord_PinRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_PackageRecord_PinRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord"; }

 protected:
  explicit EdaDataFile_PackageRecord_PinRecord(::google::protobuf::Arena* arena);
  EdaDataFile_PackageRecord_PinRecord(::google::protobuf::Arena* arena, const EdaDataFile_PackageRecord_PinRecord& from);
  EdaDataFile_PackageRecord_PinRecord(::google::protobuf::Arena* arena, EdaDataFile_PackageRecord_PinRecord&& from) noexcept
      : EdaDataFile_PackageRecord_PinRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = EdaDataFile_PackageRecord_PinRecord_Type;
  static constexpr Type ThroughHole = EdaDataFile_PackageRecord_PinRecord_Type_ThroughHole;
  static constexpr Type Blind = EdaDataFile_PackageRecord_PinRecord_Type_Blind;
  static constexpr Type Surface = EdaDataFile_PackageRecord_PinRecord_Type_Surface;
  static inline bool Type_IsValid(int value) {
    return EdaDataFile_PackageRecord_PinRecord_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = EdaDataFile_PackageRecord_PinRecord_Type_Type_MIN;
  static constexpr Type Type_MAX = EdaDataFile_PackageRecord_PinRecord_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = EdaDataFile_PackageRecord_PinRecord_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return EdaDataFile_PackageRecord_PinRecord_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return EdaDataFile_PackageRecord_PinRecord_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return EdaDataFile_PackageRecord_PinRecord_Type_Parse(name, value);
  }
  using ElectricalType = EdaDataFile_PackageRecord_PinRecord_ElectricalType;
  static constexpr ElectricalType Electrical = EdaDataFile_PackageRecord_PinRecord_ElectricalType_Electrical;
  static constexpr ElectricalType NonElectrical = EdaDataFile_PackageRecord_PinRecord_ElectricalType_NonElectrical;
  static constexpr ElectricalType Undefined = EdaDataFile_PackageRecord_PinRecord_ElectricalType_Undefined;
  static inline bool ElectricalType_IsValid(int value) {
    return EdaDataFile_PackageRecord_PinRecord_ElectricalType_IsValid(value);
  }
  static constexpr ElectricalType ElectricalType_MIN = EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_MIN;
  static constexpr ElectricalType ElectricalType_MAX = EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_MAX;
  static constexpr int ElectricalType_ARRAYSIZE = EdaDataFile_PackageRecord_PinRecord_ElectricalType_ElectricalType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ElectricalType_descriptor() {
    return EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor();
  }
  template <typename T>
  static inline const std::string& ElectricalType_Name(T value) {
    return EdaDataFile_PackageRecord_PinRecord_ElectricalType_Name(value);
  }
  static inline bool ElectricalType_Parse(absl::string_view name, ElectricalType* value) {
    return EdaDataFile_PackageRecord_PinRecord_ElectricalType_Parse(name, value);
  }
  using MountType = EdaDataFile_PackageRecord_PinRecord_MountType;
  static constexpr MountType Smt = EdaDataFile_PackageRecord_PinRecord_MountType_Smt;
  static constexpr MountType RecommendedSmtPad = EdaDataFile_PackageRecord_PinRecord_MountType_RecommendedSmtPad;
  static constexpr MountType MT_ThroughHole = EdaDataFile_PackageRecord_PinRecord_MountType_MT_ThroughHole;
  static constexpr MountType RecommendedThroughHole = EdaDataFile_PackageRecord_PinRecord_MountType_RecommendedThroughHole;
  static constexpr MountType PressFit = EdaDataFile_PackageRecord_PinRecord_MountType_PressFit;
  static constexpr MountType NonBoard = EdaDataFile_PackageRecord_PinRecord_MountType_NonBoard;
  static constexpr MountType Hole = EdaDataFile_PackageRecord_PinRecord_MountType_Hole;
  static constexpr MountType MT_Undefined = EdaDataFile_PackageRecord_PinRecord_MountType_MT_Undefined;
  static inline bool MountType_IsValid(int value) {
    return EdaDataFile_PackageRecord_PinRecord_MountType_IsValid(value);
  }
  static constexpr MountType MountType_MIN = EdaDataFile_PackageRecord_PinRecord_MountType_MountType_MIN;
  static constexpr MountType MountType_MAX = EdaDataFile_PackageRecord_PinRecord_MountType_MountType_MAX;
  static constexpr int MountType_ARRAYSIZE = EdaDataFile_PackageRecord_PinRecord_MountType_MountType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* MountType_descriptor() {
    return EdaDataFile_PackageRecord_PinRecord_MountType_descriptor();
  }
  template <typename T>
  static inline const std::string& MountType_Name(T value) {
    return EdaDataFile_PackageRecord_PinRecord_MountType_Name(value);
  }
  static inline bool MountType_Parse(absl::string_view name, MountType* value) {
    return EdaDataFile_PackageRecord_PinRecord_MountType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kXCenterFieldNumber = 3,
    kYCenterFieldNumber = 4,
    kTypeFieldNumber = 2,
    kElectricalTypeFieldNumber = 6,
    kFinishedHoleSizeFieldNumber = 5,
    kMountTypeFieldNumber = 7,
    kIdFieldNumber = 8,
    kIndexFieldNumber = 9,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional double xCenter = 3;
  bool has_xcenter() const;
  void clear_xcenter() ;
  double xcenter() const;
  void set_xcenter(double value);

  private:
  double _internal_xcenter() const;
  void _internal_set_xcenter(double value);

  public:
  // optional double yCenter = 4;
  bool has_ycenter() const;
  void clear_ycenter() ;
  double ycenter() const;
  void set_ycenter(double value);

  private:
  double _internal_ycenter() const;
  void _internal_set_ycenter(double value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type type() const;
  void set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
  bool has_electricaltype() const;
  void clear_electricaltype() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType electricaltype() const;
  void set_electricaltype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType _internal_electricaltype() const;
  void _internal_set_electricaltype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType value);

  public:
  // optional double finishedHoleSize = 5;
  bool has_finishedholesize() const;
  void clear_finishedholesize() ;
  double finishedholesize() const;
  void set_finishedholesize(double value);

  private:
  double _internal_finishedholesize() const;
  void _internal_set_finishedholesize(double value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
  bool has_mounttype() const;
  void clear_mounttype() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType mounttype() const;
  void set_mounttype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType _internal_mounttype() const;
  void _internal_set_mounttype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType value);

  public:
  // optional uint32 id = 8;
  bool has_id() const;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // optional uint32 index = 9;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_PackageRecord_PinRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    double xcenter_;
    double ycenter_;
    int type_;
    int electricaltype_;
    double finishedholesize_;
    int mounttype_;
    ::uint32_t id_;
    ::uint32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse*>(
        &_EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_edadatafile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      85, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse*>(
        &_EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_edadatafile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      81, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EdaDataFile_FeatureIdRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord) */ {
 public:
  inline EdaDataFile_FeatureIdRecord() : EdaDataFile_FeatureIdRecord(nullptr) {}
  ~EdaDataFile_FeatureIdRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_FeatureIdRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_FeatureIdRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_FeatureIdRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_FeatureIdRecord(const EdaDataFile_FeatureIdRecord& from) : EdaDataFile_FeatureIdRecord(nullptr, from) {}
  inline EdaDataFile_FeatureIdRecord(EdaDataFile_FeatureIdRecord&& from) noexcept
      : EdaDataFile_FeatureIdRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_FeatureIdRecord& operator=(const EdaDataFile_FeatureIdRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_FeatureIdRecord& operator=(EdaDataFile_FeatureIdRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_FeatureIdRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_FeatureIdRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_FeatureIdRecord*>(
        &_EdaDataFile_FeatureIdRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EdaDataFile_FeatureIdRecord& a, EdaDataFile_FeatureIdRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_FeatureIdRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_FeatureIdRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_FeatureIdRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_FeatureIdRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_FeatureIdRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_FeatureIdRecord& from) { EdaDataFile_FeatureIdRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_FeatureIdRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord"; }

 protected:
  explicit EdaDataFile_FeatureIdRecord(::google::protobuf::Arena* arena);
  EdaDataFile_FeatureIdRecord(::google::protobuf::Arena* arena, const EdaDataFile_FeatureIdRecord& from);
  EdaDataFile_FeatureIdRecord(::google::protobuf::Arena* arena, EdaDataFile_FeatureIdRecord&& from) noexcept
      : EdaDataFile_FeatureIdRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = EdaDataFile_FeatureIdRecord_Type;
  static constexpr Type COPPER = EdaDataFile_FeatureIdRecord_Type_COPPER;
  static constexpr Type LAMINATE = EdaDataFile_FeatureIdRecord_Type_LAMINATE;
  static constexpr Type HOLE = EdaDataFile_FeatureIdRecord_Type_HOLE;
  static inline bool Type_IsValid(int value) {
    return EdaDataFile_FeatureIdRecord_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = EdaDataFile_FeatureIdRecord_Type_Type_MIN;
  static constexpr Type Type_MAX = EdaDataFile_FeatureIdRecord_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = EdaDataFile_FeatureIdRecord_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return EdaDataFile_FeatureIdRecord_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return EdaDataFile_FeatureIdRecord_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return EdaDataFile_FeatureIdRecord_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kLayerNumberFieldNumber = 2,
    kFeatureNumberFieldNumber = 3,
  };
  // optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type type() const;
  void set_type(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type value);

  public:
  // optional uint32 layerNumber = 2;
  bool has_layernumber() const;
  void clear_layernumber() ;
  ::uint32_t layernumber() const;
  void set_layernumber(::uint32_t value);

  private:
  ::uint32_t _internal_layernumber() const;
  void _internal_set_layernumber(::uint32_t value);

  public:
  // optional uint32 featureNumber = 3;
  bool has_featurenumber() const;
  void clear_featurenumber() ;
  ::uint32_t featurenumber() const;
  void set_featurenumber(::uint32_t value);

  private:
  ::uint32_t _internal_featurenumber() const;
  void _internal_set_featurenumber(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_FeatureIdRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int type_;
    ::uint32_t layernumber_;
    ::uint32_t featurenumber_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse*>(
        &_EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_edadatafile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      76, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EdaDataFile_NetRecord_SubnetRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord) */ {
 public:
  inline EdaDataFile_NetRecord_SubnetRecord() : EdaDataFile_NetRecord_SubnetRecord(nullptr) {}
  ~EdaDataFile_NetRecord_SubnetRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_NetRecord_SubnetRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_NetRecord_SubnetRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_SubnetRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_NetRecord_SubnetRecord(const EdaDataFile_NetRecord_SubnetRecord& from) : EdaDataFile_NetRecord_SubnetRecord(nullptr, from) {}
  inline EdaDataFile_NetRecord_SubnetRecord(EdaDataFile_NetRecord_SubnetRecord&& from) noexcept
      : EdaDataFile_NetRecord_SubnetRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_NetRecord_SubnetRecord& operator=(const EdaDataFile_NetRecord_SubnetRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_NetRecord_SubnetRecord& operator=(EdaDataFile_NetRecord_SubnetRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_NetRecord_SubnetRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_NetRecord_SubnetRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_NetRecord_SubnetRecord*>(
        &_EdaDataFile_NetRecord_SubnetRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EdaDataFile_NetRecord_SubnetRecord& a, EdaDataFile_NetRecord_SubnetRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_NetRecord_SubnetRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_NetRecord_SubnetRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_NetRecord_SubnetRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_NetRecord_SubnetRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_NetRecord_SubnetRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_NetRecord_SubnetRecord& from) { EdaDataFile_NetRecord_SubnetRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_NetRecord_SubnetRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord"; }

 protected:
  explicit EdaDataFile_NetRecord_SubnetRecord(::google::protobuf::Arena* arena);
  EdaDataFile_NetRecord_SubnetRecord(::google::protobuf::Arena* arena, const EdaDataFile_NetRecord_SubnetRecord& from);
  EdaDataFile_NetRecord_SubnetRecord(::google::protobuf::Arena* arena, EdaDataFile_NetRecord_SubnetRecord&& from) noexcept
      : EdaDataFile_NetRecord_SubnetRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = EdaDataFile_NetRecord_SubnetRecord_Type;
  static constexpr Type VIA = EdaDataFile_NetRecord_SubnetRecord_Type_VIA;
  static constexpr Type TRACE = EdaDataFile_NetRecord_SubnetRecord_Type_TRACE;
  static constexpr Type PLANE = EdaDataFile_NetRecord_SubnetRecord_Type_PLANE;
  static constexpr Type TOEPRINT = EdaDataFile_NetRecord_SubnetRecord_Type_TOEPRINT;
  static inline bool Type_IsValid(int value) {
    return EdaDataFile_NetRecord_SubnetRecord_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = EdaDataFile_NetRecord_SubnetRecord_Type_Type_MIN;
  static constexpr Type Type_MAX = EdaDataFile_NetRecord_SubnetRecord_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = EdaDataFile_NetRecord_SubnetRecord_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return EdaDataFile_NetRecord_SubnetRecord_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return EdaDataFile_NetRecord_SubnetRecord_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return EdaDataFile_NetRecord_SubnetRecord_Type_Parse(name, value);
  }
  using FillType = EdaDataFile_NetRecord_SubnetRecord_FillType;
  static constexpr FillType SOLID = EdaDataFile_NetRecord_SubnetRecord_FillType_SOLID;
  static constexpr FillType OUTLINE = EdaDataFile_NetRecord_SubnetRecord_FillType_OUTLINE;
  static inline bool FillType_IsValid(int value) {
    return EdaDataFile_NetRecord_SubnetRecord_FillType_IsValid(value);
  }
  static constexpr FillType FillType_MIN = EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_MIN;
  static constexpr FillType FillType_MAX = EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_MAX;
  static constexpr int FillType_ARRAYSIZE = EdaDataFile_NetRecord_SubnetRecord_FillType_FillType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FillType_descriptor() {
    return EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor();
  }
  template <typename T>
  static inline const std::string& FillType_Name(T value) {
    return EdaDataFile_NetRecord_SubnetRecord_FillType_Name(value);
  }
  static inline bool FillType_Parse(absl::string_view name, FillType* value) {
    return EdaDataFile_NetRecord_SubnetRecord_FillType_Parse(name, value);
  }
  using CutoutType = EdaDataFile_NetRecord_SubnetRecord_CutoutType;
  static constexpr CutoutType CIRCLE = EdaDataFile_NetRecord_SubnetRecord_CutoutType_CIRCLE;
  static constexpr CutoutType RECTANGLE = EdaDataFile_NetRecord_SubnetRecord_CutoutType_RECTANGLE;
  static constexpr CutoutType OCTAGON = EdaDataFile_NetRecord_SubnetRecord_CutoutType_OCTAGON;
  static constexpr CutoutType EXACT = EdaDataFile_NetRecord_SubnetRecord_CutoutType_EXACT;
  static inline bool CutoutType_IsValid(int value) {
    return EdaDataFile_NetRecord_SubnetRecord_CutoutType_IsValid(value);
  }
  static constexpr CutoutType CutoutType_MIN = EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_MIN;
  static constexpr CutoutType CutoutType_MAX = EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_MAX;
  static constexpr int CutoutType_ARRAYSIZE = EdaDataFile_NetRecord_SubnetRecord_CutoutType_CutoutType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* CutoutType_descriptor() {
    return EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor();
  }
  template <typename T>
  static inline const std::string& CutoutType_Name(T value) {
    return EdaDataFile_NetRecord_SubnetRecord_CutoutType_Name(value);
  }
  static inline bool CutoutType_Parse(absl::string_view name, CutoutType* value) {
    return EdaDataFile_NetRecord_SubnetRecord_CutoutType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureIdRecordsFieldNumber = 2,
    kTypeFieldNumber = 1,
    kFillTypeFieldNumber = 3,
    kFillSizeFieldNumber = 5,
    kCutoutTypeFieldNumber = 4,
    kSideFieldNumber = 6,
    kComponentNumberFieldNumber = 7,
    kToeprintNumberFieldNumber = 8,
    kIndexFieldNumber = 9,
  };
  // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
  int featureidrecords_size() const;
  private:
  int _internal_featureidrecords_size() const;

  public:
  void clear_featureidrecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* mutable_featureidrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* mutable_featureidrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& _internal_featureidrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* _internal_mutable_featureidrecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord& featureidrecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* add_featureidrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& featureidrecords() const;
  // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type type() const;
  void set_type(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
  bool has_filltype() const;
  void clear_filltype() ;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType filltype() const;
  void set_filltype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType _internal_filltype() const;
  void _internal_set_filltype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType value);

  public:
  // optional double fillSize = 5;
  bool has_fillsize() const;
  void clear_fillsize() ;
  double fillsize() const;
  void set_fillsize(double value);

  private:
  double _internal_fillsize() const;
  void _internal_set_fillsize(double value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
  bool has_cutouttype() const;
  void clear_cutouttype() ;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType cutouttype() const;
  void set_cutouttype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType _internal_cutouttype() const;
  void _internal_set_cutouttype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType value);

  public:
  // optional .Odb.Lib.Protobuf.BoardSide side = 6;
  bool has_side() const;
  void clear_side() ;
  ::Odb::Lib::Protobuf::BoardSide side() const;
  void set_side(::Odb::Lib::Protobuf::BoardSide value);

  private:
  ::Odb::Lib::Protobuf::BoardSide _internal_side() const;
  void _internal_set_side(::Odb::Lib::Protobuf::BoardSide value);

  public:
  // optional uint32 componentNumber = 7;
  bool has_componentnumber() const;
  void clear_componentnumber() ;
  ::uint32_t componentnumber() const;
  void set_componentnumber(::uint32_t value);

  private:
  ::uint32_t _internal_componentnumber() const;
  void _internal_set_componentnumber(::uint32_t value);

  public:
  // optional uint32 toeprintNumber = 8;
  bool has_toeprintnumber() const;
  void clear_toeprintnumber() ;
  ::uint32_t toeprintnumber() const;
  void set_toeprintnumber(::uint32_t value);

  private:
  ::uint32_t _internal_toeprintnumber() const;
  void _internal_set_toeprintnumber(::uint32_t value);

  public:
  // optional uint32 index = 9;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_NetRecord_SubnetRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord > featureidrecords_;
    int type_;
    int filltype_;
    double fillsize_;
    int cutouttype_;
    int side_;
    ::uint32_t componentnumber_;
    ::uint32_t toeprintnumber_;
    ::uint32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_FeatureGroupRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord) */ {
 public:
  inline EdaDataFile_FeatureGroupRecord() : EdaDataFile_FeatureGroupRecord(nullptr) {}
  ~EdaDataFile_FeatureGroupRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_FeatureGroupRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_FeatureGroupRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_FeatureGroupRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_FeatureGroupRecord(const EdaDataFile_FeatureGroupRecord& from) : EdaDataFile_FeatureGroupRecord(nullptr, from) {}
  inline EdaDataFile_FeatureGroupRecord(EdaDataFile_FeatureGroupRecord&& from) noexcept
      : EdaDataFile_FeatureGroupRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_FeatureGroupRecord& operator=(const EdaDataFile_FeatureGroupRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_FeatureGroupRecord& operator=(EdaDataFile_FeatureGroupRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_FeatureGroupRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_FeatureGroupRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_FeatureGroupRecord*>(
        &_EdaDataFile_FeatureGroupRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EdaDataFile_FeatureGroupRecord& a, EdaDataFile_FeatureGroupRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_FeatureGroupRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_FeatureGroupRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_FeatureGroupRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_FeatureGroupRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_FeatureGroupRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_FeatureGroupRecord& from) { EdaDataFile_FeatureGroupRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_FeatureGroupRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord"; }

 protected:
  explicit EdaDataFile_FeatureGroupRecord(::google::protobuf::Arena* arena);
  EdaDataFile_FeatureGroupRecord(::google::protobuf::Arena* arena, const EdaDataFile_FeatureGroupRecord& from);
  EdaDataFile_FeatureGroupRecord(::google::protobuf::Arena* arena, EdaDataFile_FeatureGroupRecord&& from) noexcept
      : EdaDataFile_FeatureGroupRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPropertyRecordsFieldNumber = 2,
    kFeatureIdRecordsFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
  int featureidrecords_size() const;
  private:
  int _internal_featureidrecords_size() const;

  public:
  void clear_featureidrecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* mutable_featureidrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* mutable_featureidrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& _internal_featureidrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* _internal_mutable_featureidrecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord& featureidrecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* add_featureidrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& featureidrecords() const;
  // optional string type = 1;
  bool has_type() const;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_FeatureGroupRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord > featureidrecords_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_PackageRecord_OutlineRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord) */ {
 public:
  inline EdaDataFile_PackageRecord_OutlineRecord() : EdaDataFile_PackageRecord_OutlineRecord(nullptr) {}
  ~EdaDataFile_PackageRecord_OutlineRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_PackageRecord_OutlineRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_PackageRecord_OutlineRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_OutlineRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_PackageRecord_OutlineRecord(const EdaDataFile_PackageRecord_OutlineRecord& from) : EdaDataFile_PackageRecord_OutlineRecord(nullptr, from) {}
  inline EdaDataFile_PackageRecord_OutlineRecord(EdaDataFile_PackageRecord_OutlineRecord&& from) noexcept
      : EdaDataFile_PackageRecord_OutlineRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_PackageRecord_OutlineRecord& operator=(const EdaDataFile_PackageRecord_OutlineRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_PackageRecord_OutlineRecord& operator=(EdaDataFile_PackageRecord_OutlineRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_PackageRecord_OutlineRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_PackageRecord_OutlineRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecord_OutlineRecord*>(
        &_EdaDataFile_PackageRecord_OutlineRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(EdaDataFile_PackageRecord_OutlineRecord& a, EdaDataFile_PackageRecord_OutlineRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_PackageRecord_OutlineRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_PackageRecord_OutlineRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_PackageRecord_OutlineRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_PackageRecord_OutlineRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_PackageRecord_OutlineRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_PackageRecord_OutlineRecord& from) { EdaDataFile_PackageRecord_OutlineRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_PackageRecord_OutlineRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord"; }

 protected:
  explicit EdaDataFile_PackageRecord_OutlineRecord(::google::protobuf::Arena* arena);
  EdaDataFile_PackageRecord_OutlineRecord(::google::protobuf::Arena* arena, const EdaDataFile_PackageRecord_OutlineRecord& from);
  EdaDataFile_PackageRecord_OutlineRecord(::google::protobuf::Arena* arena, EdaDataFile_PackageRecord_OutlineRecord&& from) noexcept
      : EdaDataFile_PackageRecord_OutlineRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = EdaDataFile_PackageRecord_OutlineRecord_Type;
  static constexpr Type Rectangle = EdaDataFile_PackageRecord_OutlineRecord_Type_Rectangle;
  static constexpr Type Circle = EdaDataFile_PackageRecord_OutlineRecord_Type_Circle;
  static constexpr Type Square = EdaDataFile_PackageRecord_OutlineRecord_Type_Square;
  static constexpr Type Contour = EdaDataFile_PackageRecord_OutlineRecord_Type_Contour;
  static inline bool Type_IsValid(int value) {
    return EdaDataFile_PackageRecord_OutlineRecord_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = EdaDataFile_PackageRecord_OutlineRecord_Type_Type_MIN;
  static constexpr Type Type_MAX = EdaDataFile_PackageRecord_OutlineRecord_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = EdaDataFile_PackageRecord_OutlineRecord_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return EdaDataFile_PackageRecord_OutlineRecord_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return EdaDataFile_PackageRecord_OutlineRecord_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kContourPolygonsFieldNumber = 10,
    kLowerLeftXFieldNumber = 2,
    kLowerLeftYFieldNumber = 3,
    kWidthFieldNumber = 4,
    kHeightFieldNumber = 5,
    kXCenterFieldNumber = 6,
    kYCenterFieldNumber = 7,
    kHalfSideFieldNumber = 8,
    kRadiusFieldNumber = 9,
    kTypeFieldNumber = 1,
  };
  // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
  int contourpolygons_size() const;
  private:
  int _internal_contourpolygons_size() const;

  public:
  void clear_contourpolygons() ;
  ::Odb::Lib::Protobuf::ContourPolygon* mutable_contourpolygons(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>* mutable_contourpolygons();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>& _internal_contourpolygons() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>* _internal_mutable_contourpolygons();
  public:
  const ::Odb::Lib::Protobuf::ContourPolygon& contourpolygons(int index) const;
  ::Odb::Lib::Protobuf::ContourPolygon* add_contourpolygons();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>& contourpolygons() const;
  // optional double lowerLeftX = 2;
  bool has_lowerleftx() const;
  void clear_lowerleftx() ;
  double lowerleftx() const;
  void set_lowerleftx(double value);

  private:
  double _internal_lowerleftx() const;
  void _internal_set_lowerleftx(double value);

  public:
  // optional double lowerLeftY = 3;
  bool has_lowerlefty() const;
  void clear_lowerlefty() ;
  double lowerlefty() const;
  void set_lowerlefty(double value);

  private:
  double _internal_lowerlefty() const;
  void _internal_set_lowerlefty(double value);

  public:
  // optional double width = 4;
  bool has_width() const;
  void clear_width() ;
  double width() const;
  void set_width(double value);

  private:
  double _internal_width() const;
  void _internal_set_width(double value);

  public:
  // optional double height = 5;
  bool has_height() const;
  void clear_height() ;
  double height() const;
  void set_height(double value);

  private:
  double _internal_height() const;
  void _internal_set_height(double value);

  public:
  // optional double xCenter = 6;
  bool has_xcenter() const;
  void clear_xcenter() ;
  double xcenter() const;
  void set_xcenter(double value);

  private:
  double _internal_xcenter() const;
  void _internal_set_xcenter(double value);

  public:
  // optional double yCenter = 7;
  bool has_ycenter() const;
  void clear_ycenter() ;
  double ycenter() const;
  void set_ycenter(double value);

  private:
  double _internal_ycenter() const;
  void _internal_set_ycenter(double value);

  public:
  // optional double halfSide = 8;
  bool has_halfside() const;
  void clear_halfside() ;
  double halfside() const;
  void set_halfside(double value);

  private:
  double _internal_halfside() const;
  void _internal_set_halfside(double value);

  public:
  // optional double radius = 9;
  bool has_radius() const;
  void clear_radius() ;
  double radius() const;
  void set_radius(double value);

  private:
  double _internal_radius() const;
  void _internal_set_radius(double value);

  public:
  // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type type() const;
  void set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type value);

  private:
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_PackageRecord_OutlineRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::ContourPolygon > contourpolygons_;
    double lowerleftx_;
    double lowerlefty_;
    double width_;
    double height_;
    double xcenter_;
    double ycenter_;
    double halfside_;
    double radius_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_NetRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.NetRecord) */ {
 public:
  inline EdaDataFile_NetRecord() : EdaDataFile_NetRecord(nullptr) {}
  ~EdaDataFile_NetRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_NetRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_NetRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_NetRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_NetRecord(const EdaDataFile_NetRecord& from) : EdaDataFile_NetRecord(nullptr, from) {}
  inline EdaDataFile_NetRecord(EdaDataFile_NetRecord&& from) noexcept
      : EdaDataFile_NetRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_NetRecord& operator=(const EdaDataFile_NetRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_NetRecord& operator=(EdaDataFile_NetRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_NetRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_NetRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_NetRecord*>(
        &_EdaDataFile_NetRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(EdaDataFile_NetRecord& a, EdaDataFile_NetRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_NetRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_NetRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_NetRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_NetRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_NetRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_NetRecord& from) { EdaDataFile_NetRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_NetRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.NetRecord"; }

 protected:
  explicit EdaDataFile_NetRecord(::google::protobuf::Arena* arena);
  EdaDataFile_NetRecord(::google::protobuf::Arena* arena, const EdaDataFile_NetRecord& from);
  EdaDataFile_NetRecord(::google::protobuf::Arena* arena, EdaDataFile_NetRecord&& from) noexcept
      : EdaDataFile_NetRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SubnetRecord = EdaDataFile_NetRecord_SubnetRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kSubnetRecordsFieldNumber = 4,
    kPropertyRecordsFieldNumber = 5,
    kAttributeLookupTableFieldNumber = 6,
    kNameFieldNumber = 1,
    kAttributesIdStringFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
  int subnetrecords_size() const;
  private:
  int _internal_subnetrecords_size() const;

  public:
  void clear_subnetrecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord* mutable_subnetrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>* mutable_subnetrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>& _internal_subnetrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>* _internal_mutable_subnetrecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord& subnetrecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord* add_subnetrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>& subnetrecords() const;
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // map<string, string> attributeLookupTable = 6;
  int attributelookuptable_size() const;
  private:
  int _internal_attributelookuptable_size() const;

  public:
  void clear_attributelookuptable() ;
  const ::google::protobuf::Map<std::string, std::string>& attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_attributelookuptable();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_attributelookuptable();

  public:
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string attributesIdString = 2;
  bool has_attributesidstring() const;
  void clear_attributesidstring() ;
  const std::string& attributesidstring() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributesidstring(Arg_&& arg, Args_... args);
  std::string* mutable_attributesidstring();
  PROTOBUF_NODISCARD std::string* release_attributesidstring();
  void set_allocated_attributesidstring(std::string* value);

  private:
  const std::string& _internal_attributesidstring() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributesidstring(
      const std::string& value);
  std::string* _internal_mutable_attributesidstring();

  public:
  // optional uint32 index = 3;
  bool has_index() const;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      89, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_NetRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord > subnetrecords_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::internal::MapField<EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributelookuptable_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr attributesidstring_;
    ::uint32_t index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_PackageRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile.PackageRecord) */ {
 public:
  inline EdaDataFile_PackageRecord() : EdaDataFile_PackageRecord(nullptr) {}
  ~EdaDataFile_PackageRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile_PackageRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile_PackageRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile_PackageRecord(const EdaDataFile_PackageRecord& from) : EdaDataFile_PackageRecord(nullptr, from) {}
  inline EdaDataFile_PackageRecord(EdaDataFile_PackageRecord&& from) noexcept
      : EdaDataFile_PackageRecord(nullptr, std::move(from)) {}
  inline EdaDataFile_PackageRecord& operator=(const EdaDataFile_PackageRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile_PackageRecord& operator=(EdaDataFile_PackageRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile_PackageRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile_PackageRecord* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecord*>(
        &_EdaDataFile_PackageRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(EdaDataFile_PackageRecord& a, EdaDataFile_PackageRecord& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile_PackageRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile_PackageRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile_PackageRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile_PackageRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile_PackageRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile_PackageRecord& from) { EdaDataFile_PackageRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile_PackageRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile.PackageRecord"; }

 protected:
  explicit EdaDataFile_PackageRecord(::google::protobuf::Arena* arena);
  EdaDataFile_PackageRecord(::google::protobuf::Arena* arena, const EdaDataFile_PackageRecord& from);
  EdaDataFile_PackageRecord(::google::protobuf::Arena* arena, EdaDataFile_PackageRecord&& from) noexcept
      : EdaDataFile_PackageRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OutlineRecord = EdaDataFile_PackageRecord_OutlineRecord;
  using PinRecord = EdaDataFile_PackageRecord_PinRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kPinRecordsFieldNumber = 8,
    kPinRecordsByNameFieldNumber = 9,
    kPropertyRecordsFieldNumber = 10,
    kOutlineRecordsFieldNumber = 11,
    kAttributeLookupTableFieldNumber = 12,
    kNameFieldNumber = 1,
    kAttributesIdStringFieldNumber = 7,
    kPitchFieldNumber = 2,
    kXMinFieldNumber = 3,
    kYMinFieldNumber = 4,
    kXMaxFieldNumber = 5,
    kYMaxFieldNumber = 6,
  };
  // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
  int pinrecords_size() const;
  private:
  int _internal_pinrecords_size() const;

  public:
  void clear_pinrecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord* mutable_pinrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* mutable_pinrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& _internal_pinrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* _internal_mutable_pinrecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord& pinrecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord* add_pinrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& pinrecords() const;
  // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord> pinRecordsByName = 9;
  int pinrecordsbyname_size() const;
  private:
  int _internal_pinrecordsbyname_size() const;

  public:
  void clear_pinrecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& pinrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* mutable_pinrecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& _internal_pinrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* _internal_mutable_pinrecordsbyname();

  public:
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
  int outlinerecords_size() const;
  private:
  int _internal_outlinerecords_size() const;

  public:
  void clear_outlinerecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord* mutable_outlinerecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>* mutable_outlinerecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>& _internal_outlinerecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>* _internal_mutable_outlinerecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord& outlinerecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord* add_outlinerecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>& outlinerecords() const;
  // map<string, string> attributeLookupTable = 12;
  int attributelookuptable_size() const;
  private:
  int _internal_attributelookuptable_size() const;

  public:
  void clear_attributelookuptable() ;
  const ::google::protobuf::Map<std::string, std::string>& attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_attributelookuptable();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attributelookuptable() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_attributelookuptable();

  public:
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string attributesIdString = 7;
  bool has_attributesidstring() const;
  void clear_attributesidstring() ;
  const std::string& attributesidstring() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributesidstring(Arg_&& arg, Args_... args);
  std::string* mutable_attributesidstring();
  PROTOBUF_NODISCARD std::string* release_attributesidstring();
  void set_allocated_attributesidstring(std::string* value);

  private:
  const std::string& _internal_attributesidstring() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributesidstring(
      const std::string& value);
  std::string* _internal_mutable_attributesidstring();

  public:
  // optional double pitch = 2;
  bool has_pitch() const;
  void clear_pitch() ;
  double pitch() const;
  void set_pitch(double value);

  private:
  double _internal_pitch() const;
  void _internal_set_pitch(double value);

  public:
  // optional double xMin = 3;
  bool has_xmin() const;
  void clear_xmin() ;
  double xmin() const;
  void set_xmin(double value);

  private:
  double _internal_xmin() const;
  void _internal_set_xmin(double value);

  public:
  // optional double yMin = 4;
  bool has_ymin() const;
  void clear_ymin() ;
  double ymin() const;
  void set_ymin(double value);

  private:
  double _internal_ymin() const;
  void _internal_set_ymin(double value);

  public:
  // optional double xMax = 5;
  bool has_xmax() const;
  void clear_xmax() ;
  double xmax() const;
  void set_xmax(double value);

  private:
  double _internal_xmax() const;
  void _internal_set_xmax(double value);

  public:
  // optional double yMax = 6;
  bool has_ymax() const;
  void clear_ymax() ;
  double ymax() const;
  void set_ymax(double value);

  private:
  double _internal_ymax() const;
  void _internal_set_ymax(double value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 6,
      117, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile_PackageRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord > pinrecords_;
    ::google::protobuf::internal::MapField<EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        pinrecordsbyname_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord > outlinerecords_;
    ::google::protobuf::internal::MapField<EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        attributelookuptable_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr attributesidstring_;
    double pitch_;
    double xmin_;
    double ymin_;
    double xmax_;
    double ymax_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};
// -------------------------------------------------------------------

class EdaDataFile_NetRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  EdaDataFile_NetRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_NetRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EdaDataFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EdaDataFile_NetRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_NetRecordsByNameEntry_DoNotUse*>(
        &_EdaDataFile_NetRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_edadatafile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EdaDataFile_PackageRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  EdaDataFile_PackageRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile_PackageRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EdaDataFile_PackageRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EdaDataFile_PackageRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile_PackageRecordsByNameEntry_DoNotUse*>(
        &_EdaDataFile_PackageRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_edadatafile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      66, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class EdaDataFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.EdaDataFile) */ {
 public:
  inline EdaDataFile() : EdaDataFile(nullptr) {}
  ~EdaDataFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EdaDataFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EdaDataFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdaDataFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdaDataFile(const EdaDataFile& from) : EdaDataFile(nullptr, from) {}
  inline EdaDataFile(EdaDataFile&& from) noexcept
      : EdaDataFile(nullptr, std::move(from)) {}
  inline EdaDataFile& operator=(const EdaDataFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdaDataFile& operator=(EdaDataFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdaDataFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdaDataFile* internal_default_instance() {
    return reinterpret_cast<const EdaDataFile*>(
        &_EdaDataFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(EdaDataFile& a, EdaDataFile& b) { a.Swap(&b); }
  inline void Swap(EdaDataFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdaDataFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdaDataFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EdaDataFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdaDataFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdaDataFile& from) { EdaDataFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EdaDataFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.EdaDataFile"; }

 protected:
  explicit EdaDataFile(::google::protobuf::Arena* arena);
  EdaDataFile(::google::protobuf::Arena* arena, const EdaDataFile& from);
  EdaDataFile(::google::protobuf::Arena* arena, EdaDataFile&& from) noexcept
      : EdaDataFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FeatureIdRecord = EdaDataFile_FeatureIdRecord;
  using NetRecord = EdaDataFile_NetRecord;
  using PackageRecord = EdaDataFile_PackageRecord;
  using FeatureGroupRecord = EdaDataFile_FeatureGroupRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kLayerNamesFieldNumber = 4,
    kAttributeNamesFieldNumber = 5,
    kAttributeTextValuesFieldNumber = 6,
    kNetRecordsFieldNumber = 7,
    kNetRecordsByNameFieldNumber = 8,
    kPackageRecordsFieldNumber = 9,
    kPackageRecordsByNameFieldNumber = 10,
    kPropertyRecordsFieldNumber = 11,
    kFeatureGroupRecordsFieldNumber = 12,
    kPathFieldNumber = 1,
    kUnitsFieldNumber = 2,
    kSourceFieldNumber = 3,
  };
  // repeated string layerNames = 4;
  int layernames_size() const;
  private:
  int _internal_layernames_size() const;

  public:
  void clear_layernames() ;
  const std::string& layernames(int index) const;
  std::string* mutable_layernames(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_layernames(int index, Arg_&& value, Args_... args);
  std::string* add_layernames();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_layernames(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& layernames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_layernames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_layernames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_layernames();

  public:
  // repeated string attributeNames = 5;
  int attributenames_size() const;
  private:
  int _internal_attributenames_size() const;

  public:
  void clear_attributenames() ;
  const std::string& attributenames(int index) const;
  std::string* mutable_attributenames(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributenames(int index, Arg_&& value, Args_... args);
  std::string* add_attributenames();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_attributenames(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& attributenames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_attributenames();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_attributenames() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_attributenames();

  public:
  // repeated string attributeTextValues = 6;
  int attributetextvalues_size() const;
  private:
  int _internal_attributetextvalues_size() const;

  public:
  void clear_attributetextvalues() ;
  const std::string& attributetextvalues(int index) const;
  std::string* mutable_attributetextvalues(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributetextvalues(int index, Arg_&& value, Args_... args);
  std::string* add_attributetextvalues();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_attributetextvalues(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& attributetextvalues() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_attributetextvalues();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_attributetextvalues() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_attributetextvalues();

  public:
  // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
  int netrecords_size() const;
  private:
  int _internal_netrecords_size() const;

  public:
  void clear_netrecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord* mutable_netrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* mutable_netrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& _internal_netrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* _internal_mutable_netrecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord& netrecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord* add_netrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& netrecords() const;
  // map<string, .Odb.Lib.Protobuf.EdaDataFile.NetRecord> netRecordsByName = 8;
  int netrecordsbyname_size() const;
  private:
  int _internal_netrecordsbyname_size() const;

  public:
  void clear_netrecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& netrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* mutable_netrecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& _internal_netrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* _internal_mutable_netrecordsbyname();

  public:
  // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
  int packagerecords_size() const;
  private:
  int _internal_packagerecords_size() const;

  public:
  void clear_packagerecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord* mutable_packagerecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* mutable_packagerecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& _internal_packagerecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* _internal_mutable_packagerecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord& packagerecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord* add_packagerecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& packagerecords() const;
  // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord> packageRecordsByName = 10;
  int packagerecordsbyname_size() const;
  private:
  int _internal_packagerecordsbyname_size() const;

  public:
  void clear_packagerecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& packagerecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* mutable_packagerecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& _internal_packagerecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* _internal_mutable_packagerecordsbyname();

  public:
  // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
  int propertyrecords_size() const;
  private:
  int _internal_propertyrecords_size() const;

  public:
  void clear_propertyrecords() ;
  ::Odb::Lib::Protobuf::PropertyRecord* mutable_propertyrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* mutable_propertyrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& _internal_propertyrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* _internal_mutable_propertyrecords();
  public:
  const ::Odb::Lib::Protobuf::PropertyRecord& propertyrecords(int index) const;
  ::Odb::Lib::Protobuf::PropertyRecord* add_propertyrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& propertyrecords() const;
  // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
  int featuregrouprecords_size() const;
  private:
  int _internal_featuregrouprecords_size() const;

  public:
  void clear_featuregrouprecords() ;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord* mutable_featuregrouprecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>* mutable_featuregrouprecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>& _internal_featuregrouprecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>* _internal_mutable_featuregrouprecords();
  public:
  const ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord& featuregrouprecords(int index) const;
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord* add_featuregrouprecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>& featuregrouprecords() const;
  // optional string path = 1;
  bool has_path() const;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional string units = 2;
  bool has_units() const;
  void clear_units() ;
  const std::string& units() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_units(Arg_&& arg, Args_... args);
  std::string* mutable_units();
  PROTOBUF_NODISCARD std::string* release_units();
  void set_allocated_units(std::string* value);

  private:
  const std::string& _internal_units() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_units(
      const std::string& value);
  std::string* _internal_mutable_units();

  public:
  // optional string source = 3;
  bool has_source() const;
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* value);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.EdaDataFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 8,
      139, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdaDataFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> layernames_;
    ::google::protobuf::RepeatedPtrField<std::string> attributenames_;
    ::google::protobuf::RepeatedPtrField<std::string> attributetextvalues_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_NetRecord > netrecords_;
    ::google::protobuf::internal::MapField<EdaDataFile_NetRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        netrecordsbyname_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord > packagerecords_;
    ::google::protobuf::internal::MapField<EdaDataFile_PackageRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        packagerecordsbyname_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::PropertyRecord > propertyrecords_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord > featuregrouprecords_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr units_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_edadatafile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EdaDataFile_FeatureIdRecord

// optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
inline bool EdaDataFile_FeatureIdRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_FeatureIdRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.type)
  return _internal_type();
}
inline void EdaDataFile_FeatureIdRecord::set_type(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.type)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type>(_impl_.type_);
}
inline void EdaDataFile_FeatureIdRecord::_internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional uint32 layerNumber = 2;
inline bool EdaDataFile_FeatureIdRecord::has_layernumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_FeatureIdRecord::clear_layernumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layernumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t EdaDataFile_FeatureIdRecord::layernumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.layerNumber)
  return _internal_layernumber();
}
inline void EdaDataFile_FeatureIdRecord::set_layernumber(::uint32_t value) {
  _internal_set_layernumber(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.layerNumber)
}
inline ::uint32_t EdaDataFile_FeatureIdRecord::_internal_layernumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layernumber_;
}
inline void EdaDataFile_FeatureIdRecord::_internal_set_layernumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layernumber_ = value;
}

// optional uint32 featureNumber = 3;
inline bool EdaDataFile_FeatureIdRecord::has_featurenumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_FeatureIdRecord::clear_featurenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.featurenumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t EdaDataFile_FeatureIdRecord::featurenumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.featureNumber)
  return _internal_featurenumber();
}
inline void EdaDataFile_FeatureIdRecord::set_featurenumber(::uint32_t value) {
  _internal_set_featurenumber(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.featureNumber)
}
inline ::uint32_t EdaDataFile_FeatureIdRecord::_internal_featurenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.featurenumber_;
}
inline void EdaDataFile_FeatureIdRecord::_internal_set_featurenumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.featurenumber_ = value;
}

// -------------------------------------------------------------------

// EdaDataFile_NetRecord_SubnetRecord

// optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.type)
  return _internal_type();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_type(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.type)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type>(_impl_.type_);
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
inline int EdaDataFile_NetRecord_SubnetRecord::_internal_featureidrecords_size() const {
  return _internal_featureidrecords().size();
}
inline int EdaDataFile_NetRecord_SubnetRecord::featureidrecords_size() const {
  return _internal_featureidrecords_size();
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_featureidrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.featureidrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* EdaDataFile_NetRecord_SubnetRecord::mutable_featureidrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.featureIdRecords)
  return _internal_mutable_featureidrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* EdaDataFile_NetRecord_SubnetRecord::mutable_featureidrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.featureIdRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_featureidrecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord& EdaDataFile_NetRecord_SubnetRecord::featureidrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.featureIdRecords)
  return _internal_featureidrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* EdaDataFile_NetRecord_SubnetRecord::add_featureidrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* _add = _internal_mutable_featureidrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.featureIdRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& EdaDataFile_NetRecord_SubnetRecord::featureidrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.featureIdRecords)
  return _internal_featureidrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>&
EdaDataFile_NetRecord_SubnetRecord::_internal_featureidrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.featureidrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>*
EdaDataFile_NetRecord_SubnetRecord::_internal_mutable_featureidrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.featureidrecords_;
}

// optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_filltype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_filltype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filltype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::filltype() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.fillType)
  return _internal_filltype();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_filltype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType value) {
  _internal_set_filltype(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.fillType)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::_internal_filltype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType>(_impl_.filltype_);
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_filltype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filltype_ = value;
}

// optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_cutouttype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_cutouttype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cutouttype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::cutouttype() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.cutoutType)
  return _internal_cutouttype();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_cutouttype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType value) {
  _internal_set_cutouttype(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.cutoutType)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::_internal_cutouttype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType>(_impl_.cutouttype_);
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_cutouttype(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cutouttype_ = value;
}

// optional double fillSize = 5;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_fillsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_fillsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fillsize_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double EdaDataFile_NetRecord_SubnetRecord::fillsize() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.fillSize)
  return _internal_fillsize();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_fillsize(double value) {
  _internal_set_fillsize(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.fillSize)
}
inline double EdaDataFile_NetRecord_SubnetRecord::_internal_fillsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fillsize_;
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_fillsize(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fillsize_ = value;
}

// optional .Odb.Lib.Protobuf.BoardSide side = 6;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_side() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::Odb::Lib::Protobuf::BoardSide EdaDataFile_NetRecord_SubnetRecord::side() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.side)
  return _internal_side();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_side(::Odb::Lib::Protobuf::BoardSide value) {
  _internal_set_side(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.side)
}
inline ::Odb::Lib::Protobuf::BoardSide EdaDataFile_NetRecord_SubnetRecord::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::BoardSide>(_impl_.side_);
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_side(::Odb::Lib::Protobuf::BoardSide value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = value;
}

// optional uint32 componentNumber = 7;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_componentnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_componentnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.componentnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::componentnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.componentNumber)
  return _internal_componentnumber();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_componentnumber(::uint32_t value) {
  _internal_set_componentnumber(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.componentNumber)
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::_internal_componentnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.componentnumber_;
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_componentnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.componentnumber_ = value;
}

// optional uint32 toeprintNumber = 8;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_toeprintnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_toeprintnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.toeprintnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::toeprintnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.toeprintNumber)
  return _internal_toeprintnumber();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_toeprintnumber(::uint32_t value) {
  _internal_set_toeprintnumber(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.toeprintNumber)
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::_internal_toeprintnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.toeprintnumber_;
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_toeprintnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.toeprintnumber_ = value;
}

// optional uint32 index = 9;
inline bool EdaDataFile_NetRecord_SubnetRecord::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord_SubnetRecord::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::index() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.index)
  return _internal_index();
}
inline void EdaDataFile_NetRecord_SubnetRecord::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.index)
}
inline ::uint32_t EdaDataFile_NetRecord_SubnetRecord::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void EdaDataFile_NetRecord_SubnetRecord::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EdaDataFile_NetRecord

// optional string name = 1;
inline bool EdaDataFile_NetRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EdaDataFile_NetRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_NetRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.name)
}
inline std::string* EdaDataFile_NetRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.NetRecord.name)
  return _s;
}
inline const std::string& EdaDataFile_NetRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void EdaDataFile_NetRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EdaDataFile_NetRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EdaDataFile_NetRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.NetRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_NetRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.NetRecord.name)
}

// optional string attributesIdString = 2;
inline bool EdaDataFile_NetRecord::has_attributesidstring() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord::clear_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributesidstring_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EdaDataFile_NetRecord::attributesidstring() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString)
  return _internal_attributesidstring();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_NetRecord::set_attributesidstring(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.attributesidstring_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString)
}
inline std::string* EdaDataFile_NetRecord::mutable_attributesidstring() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attributesidstring();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString)
  return _s;
}
inline const std::string& EdaDataFile_NetRecord::_internal_attributesidstring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributesidstring_.Get();
}
inline void EdaDataFile_NetRecord::_internal_set_attributesidstring(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.attributesidstring_.Set(value, GetArena());
}
inline std::string* EdaDataFile_NetRecord::_internal_mutable_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.attributesidstring_.Mutable( GetArena());
}
inline std::string* EdaDataFile_NetRecord::release_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.attributesidstring_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.attributesidstring_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_NetRecord::set_allocated_attributesidstring(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.attributesidstring_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.attributesidstring_.IsDefault()) {
    _impl_.attributesidstring_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString)
}

// optional uint32 index = 3;
inline bool EdaDataFile_NetRecord::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_NetRecord::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t EdaDataFile_NetRecord::index() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.index)
  return _internal_index();
}
inline void EdaDataFile_NetRecord::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.NetRecord.index)
}
inline ::uint32_t EdaDataFile_NetRecord::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void EdaDataFile_NetRecord::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
inline int EdaDataFile_NetRecord::_internal_subnetrecords_size() const {
  return _internal_subnetrecords().size();
}
inline int EdaDataFile_NetRecord::subnetrecords_size() const {
  return _internal_subnetrecords_size();
}
inline void EdaDataFile_NetRecord::clear_subnetrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subnetrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord* EdaDataFile_NetRecord::mutable_subnetrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.NetRecord.subnetRecords)
  return _internal_mutable_subnetrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>* EdaDataFile_NetRecord::mutable_subnetrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.subnetRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subnetrecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord& EdaDataFile_NetRecord::subnetrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.subnetRecords)
  return _internal_subnetrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord* EdaDataFile_NetRecord::add_subnetrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord* _add = _internal_mutable_subnetrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.NetRecord.subnetRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>& EdaDataFile_NetRecord::subnetrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.subnetRecords)
  return _internal_subnetrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>&
EdaDataFile_NetRecord::_internal_subnetrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subnetrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>*
EdaDataFile_NetRecord::_internal_mutable_subnetrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subnetrecords_;
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
inline int EdaDataFile_NetRecord::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int EdaDataFile_NetRecord::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_NetRecord::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.NetRecord.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* EdaDataFile_NetRecord::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& EdaDataFile_NetRecord::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.NetRecord.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_NetRecord::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.NetRecord.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& EdaDataFile_NetRecord::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.NetRecord.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
EdaDataFile_NetRecord::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
EdaDataFile_NetRecord::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// map<string, string> attributeLookupTable = 6;
inline int EdaDataFile_NetRecord::_internal_attributelookuptable_size() const {
  return _internal_attributelookuptable().size();
}
inline int EdaDataFile_NetRecord::attributelookuptable_size() const {
  return _internal_attributelookuptable_size();
}
inline void EdaDataFile_NetRecord::clear_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributelookuptable_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& EdaDataFile_NetRecord::_internal_attributelookuptable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributelookuptable_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& EdaDataFile_NetRecord::attributelookuptable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable)
  return _internal_attributelookuptable();
}
inline ::google::protobuf::Map<std::string, std::string>* EdaDataFile_NetRecord::_internal_mutable_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributelookuptable_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* EdaDataFile_NetRecord::mutable_attributelookuptable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable)
  return _internal_mutable_attributelookuptable();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EdaDataFile_PackageRecord_OutlineRecord

// optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.type)
  return _internal_type();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.type)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type>(_impl_.type_);
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional double lowerLeftX = 2;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_lowerleftx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_lowerleftx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lowerleftx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::lowerleftx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.lowerLeftX)
  return _internal_lowerleftx();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_lowerleftx(double value) {
  _internal_set_lowerleftx(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.lowerLeftX)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_lowerleftx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lowerleftx_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_lowerleftx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lowerleftx_ = value;
}

// optional double lowerLeftY = 3;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_lowerlefty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_lowerlefty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lowerlefty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::lowerlefty() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.lowerLeftY)
  return _internal_lowerlefty();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_lowerlefty(double value) {
  _internal_set_lowerlefty(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.lowerLeftY)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_lowerlefty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lowerlefty_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_lowerlefty(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lowerlefty_ = value;
}

// optional double width = 4;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::width() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.width)
  return _internal_width();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_width(double value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.width)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_width(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// optional double height = 5;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::height() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.height)
  return _internal_height();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_height(double value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.height)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_height(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// optional double xCenter = 6;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_xcenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_xcenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::xcenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.xCenter)
  return _internal_xcenter();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_xcenter(double value) {
  _internal_set_xcenter(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.xCenter)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_xcenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xcenter_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_xcenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = value;
}

// optional double yCenter = 7;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_ycenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_ycenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::ycenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.yCenter)
  return _internal_ycenter();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_ycenter(double value) {
  _internal_set_ycenter(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.yCenter)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_ycenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ycenter_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_ycenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = value;
}

// optional double halfSide = 8;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_halfside() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_halfside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.halfside_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::halfside() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.halfSide)
  return _internal_halfside();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_halfside(double value) {
  _internal_set_halfside(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.halfSide)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_halfside() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.halfside_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_halfside(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.halfside_ = value;
}

// optional double radius = 9;
inline bool EdaDataFile_PackageRecord_OutlineRecord::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double EdaDataFile_PackageRecord_OutlineRecord::radius() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.radius)
  return _internal_radius();
}
inline void EdaDataFile_PackageRecord_OutlineRecord::set_radius(double value) {
  _internal_set_radius(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.radius)
}
inline double EdaDataFile_PackageRecord_OutlineRecord::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void EdaDataFile_PackageRecord_OutlineRecord::_internal_set_radius(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
inline int EdaDataFile_PackageRecord_OutlineRecord::_internal_contourpolygons_size() const {
  return _internal_contourpolygons().size();
}
inline int EdaDataFile_PackageRecord_OutlineRecord::contourpolygons_size() const {
  return _internal_contourpolygons_size();
}
inline ::Odb::Lib::Protobuf::ContourPolygon* EdaDataFile_PackageRecord_OutlineRecord::mutable_contourpolygons(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.contourPolygons)
  return _internal_mutable_contourpolygons()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>* EdaDataFile_PackageRecord_OutlineRecord::mutable_contourpolygons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.contourPolygons)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contourpolygons();
}
inline const ::Odb::Lib::Protobuf::ContourPolygon& EdaDataFile_PackageRecord_OutlineRecord::contourpolygons(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.contourPolygons)
  return _internal_contourpolygons().Get(index);
}
inline ::Odb::Lib::Protobuf::ContourPolygon* EdaDataFile_PackageRecord_OutlineRecord::add_contourpolygons() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::ContourPolygon* _add = _internal_mutable_contourpolygons()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.contourPolygons)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>& EdaDataFile_PackageRecord_OutlineRecord::contourpolygons() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.contourPolygons)
  return _internal_contourpolygons();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>&
EdaDataFile_PackageRecord_OutlineRecord::_internal_contourpolygons() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contourpolygons_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon>*
EdaDataFile_PackageRecord_OutlineRecord::_internal_mutable_contourpolygons() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contourpolygons_;
}

// -------------------------------------------------------------------

// EdaDataFile_PackageRecord_PinRecord

// optional string name = 1;
inline bool EdaDataFile_PackageRecord_PinRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EdaDataFile_PackageRecord_PinRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_PackageRecord_PinRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name)
}
inline std::string* EdaDataFile_PackageRecord_PinRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name)
  return _s;
}
inline const std::string& EdaDataFile_PackageRecord_PinRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EdaDataFile_PackageRecord_PinRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EdaDataFile_PackageRecord_PinRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_PackageRecord_PinRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name)
}

// optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
inline bool EdaDataFile_PackageRecord_PinRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.type)
  return _internal_type();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.type)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type>(_impl_.type_);
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_type(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional double xCenter = 3;
inline bool EdaDataFile_PackageRecord_PinRecord::has_xcenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_xcenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double EdaDataFile_PackageRecord_PinRecord::xcenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.xCenter)
  return _internal_xcenter();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_xcenter(double value) {
  _internal_set_xcenter(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.xCenter)
}
inline double EdaDataFile_PackageRecord_PinRecord::_internal_xcenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xcenter_;
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_xcenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = value;
}

// optional double yCenter = 4;
inline bool EdaDataFile_PackageRecord_PinRecord::has_ycenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_ycenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double EdaDataFile_PackageRecord_PinRecord::ycenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.yCenter)
  return _internal_ycenter();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_ycenter(double value) {
  _internal_set_ycenter(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.yCenter)
}
inline double EdaDataFile_PackageRecord_PinRecord::_internal_ycenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ycenter_;
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_ycenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = value;
}

// optional double finishedHoleSize = 5;
inline bool EdaDataFile_PackageRecord_PinRecord::has_finishedholesize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_finishedholesize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finishedholesize_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double EdaDataFile_PackageRecord_PinRecord::finishedholesize() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.finishedHoleSize)
  return _internal_finishedholesize();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_finishedholesize(double value) {
  _internal_set_finishedholesize(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.finishedHoleSize)
}
inline double EdaDataFile_PackageRecord_PinRecord::_internal_finishedholesize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.finishedholesize_;
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_finishedholesize(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.finishedholesize_ = value;
}

// optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
inline bool EdaDataFile_PackageRecord_PinRecord::has_electricaltype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_electricaltype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.electricaltype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::electricaltype() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.electricalType)
  return _internal_electricaltype();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_electricaltype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType value) {
  _internal_set_electricaltype(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.electricalType)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::_internal_electricaltype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType>(_impl_.electricaltype_);
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_electricaltype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.electricaltype_ = value;
}

// optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
inline bool EdaDataFile_PackageRecord_PinRecord::has_mounttype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_mounttype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mounttype_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::mounttype() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.mountType)
  return _internal_mounttype();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_mounttype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType value) {
  _internal_set_mounttype(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.mountType)
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::_internal_mounttype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType>(_impl_.mounttype_);
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_mounttype(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mounttype_ = value;
}

// optional uint32 id = 8;
inline bool EdaDataFile_PackageRecord_PinRecord::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::uint32_t EdaDataFile_PackageRecord_PinRecord::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.id)
  return _internal_id();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_id(::uint32_t value) {
  _internal_set_id(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.id)
}
inline ::uint32_t EdaDataFile_PackageRecord_PinRecord::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// optional uint32 index = 9;
inline bool EdaDataFile_PackageRecord_PinRecord::has_index() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord_PinRecord::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::uint32_t EdaDataFile_PackageRecord_PinRecord::index() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.index)
  return _internal_index();
}
inline void EdaDataFile_PackageRecord_PinRecord::set_index(::uint32_t value) {
  _internal_set_index(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.index)
}
inline ::uint32_t EdaDataFile_PackageRecord_PinRecord::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void EdaDataFile_PackageRecord_PinRecord::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// EdaDataFile_PackageRecord

// optional string name = 1;
inline bool EdaDataFile_PackageRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EdaDataFile_PackageRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_PackageRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name)
}
inline std::string* EdaDataFile_PackageRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name)
  return _s;
}
inline const std::string& EdaDataFile_PackageRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void EdaDataFile_PackageRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* EdaDataFile_PackageRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* EdaDataFile_PackageRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_PackageRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name)
}

// optional double pitch = 2;
inline bool EdaDataFile_PackageRecord::has_pitch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_pitch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double EdaDataFile_PackageRecord::pitch() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pitch)
  return _internal_pitch();
}
inline void EdaDataFile_PackageRecord::set_pitch(double value) {
  _internal_set_pitch(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pitch)
}
inline double EdaDataFile_PackageRecord::_internal_pitch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pitch_;
}
inline void EdaDataFile_PackageRecord::_internal_set_pitch(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pitch_ = value;
}

// optional double xMin = 3;
inline bool EdaDataFile_PackageRecord::has_xmin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_xmin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xmin_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double EdaDataFile_PackageRecord::xmin() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.xMin)
  return _internal_xmin();
}
inline void EdaDataFile_PackageRecord::set_xmin(double value) {
  _internal_set_xmin(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.xMin)
}
inline double EdaDataFile_PackageRecord::_internal_xmin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xmin_;
}
inline void EdaDataFile_PackageRecord::_internal_set_xmin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xmin_ = value;
}

// optional double yMin = 4;
inline bool EdaDataFile_PackageRecord::has_ymin() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_ymin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ymin_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double EdaDataFile_PackageRecord::ymin() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.yMin)
  return _internal_ymin();
}
inline void EdaDataFile_PackageRecord::set_ymin(double value) {
  _internal_set_ymin(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.yMin)
}
inline double EdaDataFile_PackageRecord::_internal_ymin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ymin_;
}
inline void EdaDataFile_PackageRecord::_internal_set_ymin(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ymin_ = value;
}

// optional double xMax = 5;
inline bool EdaDataFile_PackageRecord::has_xmax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_xmax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xmax_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double EdaDataFile_PackageRecord::xmax() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.xMax)
  return _internal_xmax();
}
inline void EdaDataFile_PackageRecord::set_xmax(double value) {
  _internal_set_xmax(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.xMax)
}
inline double EdaDataFile_PackageRecord::_internal_xmax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xmax_;
}
inline void EdaDataFile_PackageRecord::_internal_set_xmax(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xmax_ = value;
}

// optional double yMax = 6;
inline bool EdaDataFile_PackageRecord::has_ymax() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_ymax() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ymax_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double EdaDataFile_PackageRecord::ymax() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.yMax)
  return _internal_ymax();
}
inline void EdaDataFile_PackageRecord::set_ymax(double value) {
  _internal_set_ymax(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.yMax)
}
inline double EdaDataFile_PackageRecord::_internal_ymax() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ymax_;
}
inline void EdaDataFile_PackageRecord::_internal_set_ymax(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ymax_ = value;
}

// optional string attributesIdString = 7;
inline bool EdaDataFile_PackageRecord::has_attributesidstring() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile_PackageRecord::clear_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributesidstring_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EdaDataFile_PackageRecord::attributesidstring() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString)
  return _internal_attributesidstring();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_PackageRecord::set_attributesidstring(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.attributesidstring_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString)
}
inline std::string* EdaDataFile_PackageRecord::mutable_attributesidstring() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attributesidstring();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString)
  return _s;
}
inline const std::string& EdaDataFile_PackageRecord::_internal_attributesidstring() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributesidstring_.Get();
}
inline void EdaDataFile_PackageRecord::_internal_set_attributesidstring(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.attributesidstring_.Set(value, GetArena());
}
inline std::string* EdaDataFile_PackageRecord::_internal_mutable_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.attributesidstring_.Mutable( GetArena());
}
inline std::string* EdaDataFile_PackageRecord::release_attributesidstring() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.attributesidstring_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.attributesidstring_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_PackageRecord::set_allocated_attributesidstring(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.attributesidstring_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.attributesidstring_.IsDefault()) {
    _impl_.attributesidstring_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString)
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
inline int EdaDataFile_PackageRecord::_internal_pinrecords_size() const {
  return _internal_pinrecords().size();
}
inline int EdaDataFile_PackageRecord::pinrecords_size() const {
  return _internal_pinrecords_size();
}
inline void EdaDataFile_PackageRecord::clear_pinrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pinrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord* EdaDataFile_PackageRecord::mutable_pinrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecords)
  return _internal_mutable_pinrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* EdaDataFile_PackageRecord::mutable_pinrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pinrecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord& EdaDataFile_PackageRecord::pinrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecords)
  return _internal_pinrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord* EdaDataFile_PackageRecord::add_pinrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord* _add = _internal_mutable_pinrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& EdaDataFile_PackageRecord::pinrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecords)
  return _internal_pinrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>&
EdaDataFile_PackageRecord::_internal_pinrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pinrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>*
EdaDataFile_PackageRecord::_internal_mutable_pinrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pinrecords_;
}

// map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord> pinRecordsByName = 9;
inline int EdaDataFile_PackageRecord::_internal_pinrecordsbyname_size() const {
  return _internal_pinrecordsbyname().size();
}
inline int EdaDataFile_PackageRecord::pinrecordsbyname_size() const {
  return _internal_pinrecordsbyname_size();
}
inline void EdaDataFile_PackageRecord::clear_pinrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pinrecordsbyname_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& EdaDataFile_PackageRecord::_internal_pinrecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pinrecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>& EdaDataFile_PackageRecord::pinrecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecordsByName)
  return _internal_pinrecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* EdaDataFile_PackageRecord::_internal_mutable_pinrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pinrecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>* EdaDataFile_PackageRecord::mutable_pinrecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecordsByName)
  return _internal_mutable_pinrecordsbyname();
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
inline int EdaDataFile_PackageRecord::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int EdaDataFile_PackageRecord::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_PackageRecord::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* EdaDataFile_PackageRecord::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& EdaDataFile_PackageRecord::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_PackageRecord::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& EdaDataFile_PackageRecord::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
EdaDataFile_PackageRecord::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
EdaDataFile_PackageRecord::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
inline int EdaDataFile_PackageRecord::_internal_outlinerecords_size() const {
  return _internal_outlinerecords().size();
}
inline int EdaDataFile_PackageRecord::outlinerecords_size() const {
  return _internal_outlinerecords_size();
}
inline void EdaDataFile_PackageRecord::clear_outlinerecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outlinerecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord* EdaDataFile_PackageRecord::mutable_outlinerecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.outlineRecords)
  return _internal_mutable_outlinerecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>* EdaDataFile_PackageRecord::mutable_outlinerecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.outlineRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outlinerecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord& EdaDataFile_PackageRecord::outlinerecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.outlineRecords)
  return _internal_outlinerecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord* EdaDataFile_PackageRecord::add_outlinerecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord* _add = _internal_mutable_outlinerecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.outlineRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>& EdaDataFile_PackageRecord::outlinerecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.outlineRecords)
  return _internal_outlinerecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>&
EdaDataFile_PackageRecord::_internal_outlinerecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outlinerecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>*
EdaDataFile_PackageRecord::_internal_mutable_outlinerecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outlinerecords_;
}

// map<string, string> attributeLookupTable = 12;
inline int EdaDataFile_PackageRecord::_internal_attributelookuptable_size() const {
  return _internal_attributelookuptable().size();
}
inline int EdaDataFile_PackageRecord::attributelookuptable_size() const {
  return _internal_attributelookuptable_size();
}
inline void EdaDataFile_PackageRecord::clear_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributelookuptable_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& EdaDataFile_PackageRecord::_internal_attributelookuptable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributelookuptable_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& EdaDataFile_PackageRecord::attributelookuptable() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable)
  return _internal_attributelookuptable();
}
inline ::google::protobuf::Map<std::string, std::string>* EdaDataFile_PackageRecord::_internal_mutable_attributelookuptable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attributelookuptable_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* EdaDataFile_PackageRecord::mutable_attributelookuptable() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable)
  return _internal_mutable_attributelookuptable();
}

// -------------------------------------------------------------------

// EdaDataFile_FeatureGroupRecord

// optional string type = 1;
inline bool EdaDataFile_FeatureGroupRecord::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile_FeatureGroupRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EdaDataFile_FeatureGroupRecord::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile_FeatureGroupRecord::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type)
}
inline std::string* EdaDataFile_FeatureGroupRecord::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type)
  return _s;
}
inline const std::string& EdaDataFile_FeatureGroupRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void EdaDataFile_FeatureGroupRecord::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* EdaDataFile_FeatureGroupRecord::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* EdaDataFile_FeatureGroupRecord::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile_FeatureGroupRecord::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type)
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
inline int EdaDataFile_FeatureGroupRecord::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int EdaDataFile_FeatureGroupRecord::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_FeatureGroupRecord::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* EdaDataFile_FeatureGroupRecord::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& EdaDataFile_FeatureGroupRecord::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile_FeatureGroupRecord::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& EdaDataFile_FeatureGroupRecord::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
EdaDataFile_FeatureGroupRecord::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
EdaDataFile_FeatureGroupRecord::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
inline int EdaDataFile_FeatureGroupRecord::_internal_featureidrecords_size() const {
  return _internal_featureidrecords().size();
}
inline int EdaDataFile_FeatureGroupRecord::featureidrecords_size() const {
  return _internal_featureidrecords_size();
}
inline void EdaDataFile_FeatureGroupRecord::clear_featureidrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.featureidrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* EdaDataFile_FeatureGroupRecord::mutable_featureidrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.featureIdRecords)
  return _internal_mutable_featureidrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>* EdaDataFile_FeatureGroupRecord::mutable_featureidrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.featureIdRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_featureidrecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord& EdaDataFile_FeatureGroupRecord::featureidrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.featureIdRecords)
  return _internal_featureidrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* EdaDataFile_FeatureGroupRecord::add_featureidrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord* _add = _internal_mutable_featureidrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.featureIdRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>& EdaDataFile_FeatureGroupRecord::featureidrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.featureIdRecords)
  return _internal_featureidrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>&
EdaDataFile_FeatureGroupRecord::_internal_featureidrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.featureidrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>*
EdaDataFile_FeatureGroupRecord::_internal_mutable_featureidrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.featureidrecords_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EdaDataFile

// optional string path = 1;
inline bool EdaDataFile::has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void EdaDataFile::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EdaDataFile::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.path)
}
inline std::string* EdaDataFile::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.path)
  return _s;
}
inline const std::string& EdaDataFile::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void EdaDataFile::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* EdaDataFile::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* EdaDataFile::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.path)
}

// optional string units = 2;
inline bool EdaDataFile::has_units() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void EdaDataFile::clear_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.units_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EdaDataFile::units() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.units)
  return _internal_units();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile::set_units(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.units_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.units)
}
inline std::string* EdaDataFile::mutable_units() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_units();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.units)
  return _s;
}
inline const std::string& EdaDataFile::_internal_units() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.units_.Get();
}
inline void EdaDataFile::_internal_set_units(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.units_.Set(value, GetArena());
}
inline std::string* EdaDataFile::_internal_mutable_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.units_.Mutable( GetArena());
}
inline std::string* EdaDataFile::release_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.units)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.units_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.units_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile::set_allocated_units(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.units_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.units_.IsDefault()) {
    _impl_.units_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.units)
}

// optional string source = 3;
inline bool EdaDataFile::has_source() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void EdaDataFile::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& EdaDataFile::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EdaDataFile::set_source(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.source)
}
inline std::string* EdaDataFile::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.source)
  return _s;
}
inline const std::string& EdaDataFile::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void EdaDataFile::_internal_set_source(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_.Set(value, GetArena());
}
inline std::string* EdaDataFile::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.source_.Mutable( GetArena());
}
inline std::string* EdaDataFile::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.EdaDataFile.source)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void EdaDataFile::set_allocated_source(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.EdaDataFile.source)
}

// repeated string layerNames = 4;
inline int EdaDataFile::_internal_layernames_size() const {
  return _internal_layernames().size();
}
inline int EdaDataFile::layernames_size() const {
  return _internal_layernames_size();
}
inline void EdaDataFile::clear_layernames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layernames_.Clear();
}
inline std::string* EdaDataFile::add_layernames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_layernames()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.EdaDataFile.layerNames)
  return _s;
}
inline const std::string& EdaDataFile::layernames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.layerNames)
  return _internal_layernames().Get(index);
}
inline std::string* EdaDataFile::mutable_layernames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.layerNames)
  return _internal_mutable_layernames()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::set_layernames(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_layernames()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.layerNames)
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::add_layernames(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_layernames(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.layerNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::layernames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.layerNames)
  return _internal_layernames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::mutable_layernames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.layerNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_layernames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::_internal_layernames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layernames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::_internal_mutable_layernames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.layernames_;
}

// repeated string attributeNames = 5;
inline int EdaDataFile::_internal_attributenames_size() const {
  return _internal_attributenames().size();
}
inline int EdaDataFile::attributenames_size() const {
  return _internal_attributenames_size();
}
inline void EdaDataFile::clear_attributenames() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributenames_.Clear();
}
inline std::string* EdaDataFile::add_attributenames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_attributenames()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
  return _s;
}
inline const std::string& EdaDataFile::attributenames(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
  return _internal_attributenames().Get(index);
}
inline std::string* EdaDataFile::mutable_attributenames(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
  return _internal_mutable_attributenames()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::set_attributenames(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_attributenames()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::add_attributenames(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_attributenames(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::attributenames() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
  return _internal_attributenames();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::mutable_attributenames() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.attributeNames)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributenames();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::_internal_attributenames() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributenames_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::_internal_mutable_attributenames() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributenames_;
}

// repeated string attributeTextValues = 6;
inline int EdaDataFile::_internal_attributetextvalues_size() const {
  return _internal_attributetextvalues().size();
}
inline int EdaDataFile::attributetextvalues_size() const {
  return _internal_attributetextvalues_size();
}
inline void EdaDataFile::clear_attributetextvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attributetextvalues_.Clear();
}
inline std::string* EdaDataFile::add_attributetextvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_attributetextvalues()->Add();
  // @@protoc_insertion_point(field_add_mutable:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
  return _s;
}
inline const std::string& EdaDataFile::attributetextvalues(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
  return _internal_attributetextvalues().Get(index);
}
inline std::string* EdaDataFile::mutable_attributetextvalues(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
  return _internal_mutable_attributetextvalues()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::set_attributetextvalues(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_attributetextvalues()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
}
template <typename Arg_, typename... Args_>
inline void EdaDataFile::add_attributetextvalues(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_attributetextvalues(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::attributetextvalues() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
  return _internal_attributetextvalues();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::mutable_attributetextvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.attributeTextValues)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attributetextvalues();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
EdaDataFile::_internal_attributetextvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attributetextvalues_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
EdaDataFile::_internal_mutable_attributetextvalues() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attributetextvalues_;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
inline int EdaDataFile::_internal_netrecords_size() const {
  return _internal_netrecords().size();
}
inline int EdaDataFile::netrecords_size() const {
  return _internal_netrecords_size();
}
inline void EdaDataFile::clear_netrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord* EdaDataFile::mutable_netrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.netRecords)
  return _internal_mutable_netrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* EdaDataFile::mutable_netrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.netRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_netrecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord& EdaDataFile::netrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.netRecords)
  return _internal_netrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_NetRecord* EdaDataFile::add_netrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_NetRecord* _add = _internal_mutable_netrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.netRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& EdaDataFile::netrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.netRecords)
  return _internal_netrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>&
EdaDataFile::_internal_netrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>*
EdaDataFile::_internal_mutable_netrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.netrecords_;
}

// map<string, .Odb.Lib.Protobuf.EdaDataFile.NetRecord> netRecordsByName = 8;
inline int EdaDataFile::_internal_netrecordsbyname_size() const {
  return _internal_netrecordsbyname().size();
}
inline int EdaDataFile::netrecordsbyname_size() const {
  return _internal_netrecordsbyname_size();
}
inline void EdaDataFile::clear_netrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netrecordsbyname_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& EdaDataFile::_internal_netrecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netrecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>& EdaDataFile::netrecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.EdaDataFile.netRecordsByName)
  return _internal_netrecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* EdaDataFile::_internal_mutable_netrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.netrecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>* EdaDataFile::mutable_netrecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.EdaDataFile.netRecordsByName)
  return _internal_mutable_netrecordsbyname();
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
inline int EdaDataFile::_internal_packagerecords_size() const {
  return _internal_packagerecords().size();
}
inline int EdaDataFile::packagerecords_size() const {
  return _internal_packagerecords_size();
}
inline void EdaDataFile::clear_packagerecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packagerecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord* EdaDataFile::mutable_packagerecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.packageRecords)
  return _internal_mutable_packagerecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* EdaDataFile::mutable_packagerecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.packageRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_packagerecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord& EdaDataFile::packagerecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.packageRecords)
  return _internal_packagerecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord* EdaDataFile::add_packagerecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord* _add = _internal_mutable_packagerecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.packageRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& EdaDataFile::packagerecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.packageRecords)
  return _internal_packagerecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>&
EdaDataFile::_internal_packagerecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packagerecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>*
EdaDataFile::_internal_mutable_packagerecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.packagerecords_;
}

// map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord> packageRecordsByName = 10;
inline int EdaDataFile::_internal_packagerecordsbyname_size() const {
  return _internal_packagerecordsbyname().size();
}
inline int EdaDataFile::packagerecordsbyname_size() const {
  return _internal_packagerecordsbyname_size();
}
inline void EdaDataFile::clear_packagerecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packagerecordsbyname_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& EdaDataFile::_internal_packagerecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packagerecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>& EdaDataFile::packagerecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.EdaDataFile.packageRecordsByName)
  return _internal_packagerecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* EdaDataFile::_internal_mutable_packagerecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.packagerecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>* EdaDataFile::mutable_packagerecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.EdaDataFile.packageRecordsByName)
  return _internal_mutable_packagerecordsbyname();
}

// repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
inline int EdaDataFile::_internal_propertyrecords_size() const {
  return _internal_propertyrecords().size();
}
inline int EdaDataFile::propertyrecords_size() const {
  return _internal_propertyrecords_size();
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile::mutable_propertyrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.propertyRecords)
  return _internal_mutable_propertyrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>* EdaDataFile::mutable_propertyrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.propertyRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_propertyrecords();
}
inline const ::Odb::Lib::Protobuf::PropertyRecord& EdaDataFile::propertyrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.propertyRecords)
  return _internal_propertyrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::PropertyRecord* EdaDataFile::add_propertyrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::PropertyRecord* _add = _internal_mutable_propertyrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.propertyRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>& EdaDataFile::propertyrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.propertyRecords)
  return _internal_propertyrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>&
EdaDataFile::_internal_propertyrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.propertyrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::PropertyRecord>*
EdaDataFile::_internal_mutable_propertyrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.propertyrecords_;
}

// repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
inline int EdaDataFile::_internal_featuregrouprecords_size() const {
  return _internal_featuregrouprecords().size();
}
inline int EdaDataFile::featuregrouprecords_size() const {
  return _internal_featuregrouprecords_size();
}
inline void EdaDataFile::clear_featuregrouprecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.featuregrouprecords_.Clear();
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord* EdaDataFile::mutable_featuregrouprecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.EdaDataFile.featureGroupRecords)
  return _internal_mutable_featuregrouprecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>* EdaDataFile::mutable_featuregrouprecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.EdaDataFile.featureGroupRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_featuregrouprecords();
}
inline const ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord& EdaDataFile::featuregrouprecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.EdaDataFile.featureGroupRecords)
  return _internal_featuregrouprecords().Get(index);
}
inline ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord* EdaDataFile::add_featuregrouprecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord* _add = _internal_mutable_featuregrouprecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.EdaDataFile.featureGroupRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>& EdaDataFile::featuregrouprecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.EdaDataFile.featureGroupRecords)
  return _internal_featuregrouprecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>&
EdaDataFile::_internal_featuregrouprecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.featuregrouprecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>*
EdaDataFile::_internal_mutable_featuregrouprecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.featuregrouprecords_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType>() {
  return ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // edadatafile_2eproto_2epb_2eh
