// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf C++ Version: 5.29.2

#include "common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr PropertyRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        floatvalues_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR PropertyRecord::PropertyRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PropertyRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropertyRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropertyRecordDefaultTypeInternal() {}
  union {
    PropertyRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropertyRecordDefaultTypeInternal _PropertyRecord_default_instance_;

inline constexpr ContourPolygon_PolygonPart::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        endx_{0},
        endy_{0},
        type_{static_cast< ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type >(0)},
        isclockwise_{false},
        xcenter_{0},
        ycenter_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ContourPolygon_PolygonPart::ContourPolygon_PolygonPart(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContourPolygon_PolygonPartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContourPolygon_PolygonPartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContourPolygon_PolygonPartDefaultTypeInternal() {}
  union {
    ContourPolygon_PolygonPart _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContourPolygon_PolygonPartDefaultTypeInternal _ContourPolygon_PolygonPart_default_instance_;

inline constexpr ContourPolygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        polygonparts_{},
        xstart_{0},
        ystart_{0},
        type_{static_cast< ::Odb::Lib::Protobuf::ContourPolygon_Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ContourPolygon::ContourPolygon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContourPolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContourPolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContourPolygonDefaultTypeInternal() {}
  union {
    ContourPolygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContourPolygonDefaultTypeInternal _ContourPolygon_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::PropertyRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::PropertyRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::PropertyRecord, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::PropertyRecord, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::PropertyRecord, _impl_.floatvalues_),
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.endx_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.endy_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.xcenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.ycenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart, _impl_.isclockwise_),
        2,
        0,
        1,
        4,
        5,
        3,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _impl_.xstart_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _impl_.ystart_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ContourPolygon, _impl_.polygonparts_),
        2,
        0,
        1,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Odb::Lib::Protobuf::PropertyRecord)},
        {14, 28, -1, sizeof(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart)},
        {34, 46, -1, sizeof(::Odb::Lib::Protobuf::ContourPolygon)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_PropertyRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_ContourPolygon_PolygonPart_default_instance_._instance,
    &::Odb::Lib::Protobuf::_ContourPolygon_default_instance_._instance,
};
const char descriptor_table_protodef_common_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014common.proto\022\020Odb.Lib.Protobuf\"_\n\016Prop"
    "ertyRecord\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022\022\n\005value\030\002"
    " \001(\tH\001\210\001\001\022\023\n\013floatValues\030\003 \003(\001B\007\n\005_nameB"
    "\010\n\006_value\"\230\004\n\016ContourPolygon\0228\n\004type\030\001 \001"
    "(\0162%.Odb.Lib.Protobuf.ContourPolygon.Typ"
    "eH\000\210\001\001\022\023\n\006xStart\030\002 \001(\001H\001\210\001\001\022\023\n\006yStart\030\003 "
    "\001(\001H\002\210\001\001\022B\n\014polygonParts\030\004 \003(\0132,.Odb.Lib"
    ".Protobuf.ContourPolygon.PolygonPart\032\240\002\n"
    "\013PolygonPart\022D\n\004type\030\001 \001(\01621.Odb.Lib.Pro"
    "tobuf.ContourPolygon.PolygonPart.TypeH\000\210"
    "\001\001\022\021\n\004endX\030\002 \001(\001H\001\210\001\001\022\021\n\004endY\030\003 \001(\001H\002\210\001\001"
    "\022\024\n\007xCenter\030\004 \001(\001H\003\210\001\001\022\024\n\007yCenter\030\005 \001(\001H"
    "\004\210\001\001\022\030\n\013isClockwise\030\006 \001(\010H\005\210\001\001\"\034\n\004Type\022\013"
    "\n\007Segment\020\000\022\007\n\003Arc\020\001B\007\n\005_typeB\007\n\005_endXB\007"
    "\n\005_endYB\n\n\010_xCenterB\n\n\010_yCenterB\016\n\014_isCl"
    "ockwise\"\034\n\004Type\022\n\n\006Island\020\000\022\010\n\004Hole\020\001B\007\n"
    "\005_typeB\t\n\007_xStartB\t\n\007_yStartb\006proto3"
};
static ::absl::once_flag descriptor_table_common_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false,
    false,
    676,
    descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_common_2eproto::offsets,
    file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::google::protobuf::EnumDescriptor* ContourPolygon_PolygonPart_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ContourPolygon_PolygonPart_Type_internal_data_[] = {
    131072u, 0u, };
bool ContourPolygon_PolygonPart_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::Segment;
constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::Arc;
constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::Type_MIN;
constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::Type_MAX;
constexpr int ContourPolygon_PolygonPart::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ContourPolygon_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2eproto);
  return file_level_enum_descriptors_common_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ContourPolygon_Type_internal_data_[] = {
    131072u, 0u, };
bool ContourPolygon_Type_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ContourPolygon_Type ContourPolygon::Island;
constexpr ContourPolygon_Type ContourPolygon::Hole;
constexpr ContourPolygon_Type ContourPolygon::Type_MIN;
constexpr ContourPolygon_Type ContourPolygon::Type_MAX;
constexpr int ContourPolygon::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class PropertyRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PropertyRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_._has_bits_);
};

PropertyRecord::PropertyRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.PropertyRecord)
}
inline PROTOBUF_NDEBUG_INLINE PropertyRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::PropertyRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        floatvalues_{visibility, arena, from.floatvalues_},
        name_(arena, from.name_),
        value_(arena, from.value_) {}

PropertyRecord::PropertyRecord(
    ::google::protobuf::Arena* arena,
    const PropertyRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PropertyRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.PropertyRecord)
}
inline PROTOBUF_NDEBUG_INLINE PropertyRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        floatvalues_{visibility, arena},
        name_(arena),
        value_(arena) {}

inline void PropertyRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PropertyRecord::~PropertyRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.PropertyRecord)
  SharedDtor(*this);
}
inline void PropertyRecord::SharedDtor(MessageLite& self) {
  PropertyRecord& this_ = static_cast<PropertyRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PropertyRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PropertyRecord(arena);
}
constexpr auto PropertyRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.floatvalues_) +
          decltype(PropertyRecord::_impl_.floatvalues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PropertyRecord), alignof(PropertyRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PropertyRecord::PlacementNew_,
                                 sizeof(PropertyRecord),
                                 alignof(PropertyRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PropertyRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PropertyRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PropertyRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PropertyRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PropertyRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PropertyRecord>(), &PropertyRecord::ByteSizeLong,
            &PropertyRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_._cached_size_),
        false,
    },
    &PropertyRecord::kDescriptorMethods,
    &descriptor_table_common_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PropertyRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 49, 2> PropertyRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::PropertyRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.name_)}},
    // optional string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.value_)}},
    // repeated double floatValues = 3;
    {::_pbi::TcParser::FastF64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.floatvalues_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string value = 2;
    {PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated double floatValues = 3;
    {PROTOBUF_FIELD_OFFSET(PropertyRecord, _impl_.floatvalues_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
    "\37\4\5\0\0\0\0\0"
    "Odb.Lib.Protobuf.PropertyRecord"
    "name"
    "value"
  }},
};

PROTOBUF_NOINLINE void PropertyRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.PropertyRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.floatvalues_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PropertyRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PropertyRecord& this_ = static_cast<const PropertyRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PropertyRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PropertyRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.PropertyRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.PropertyRecord.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string value = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.PropertyRecord.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated double floatValues = 3;
          if (this_._internal_floatvalues_size() > 0) {
            target = stream->WriteFixedPacked(3, this_._internal_floatvalues(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.PropertyRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PropertyRecord::ByteSizeLong(const MessageLite& base) {
          const PropertyRecord& this_ = static_cast<const PropertyRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PropertyRecord::ByteSizeLong() const {
          const PropertyRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.PropertyRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated double floatValues = 3;
            {
              std::size_t data_size = std::size_t{8} *
                  ::_pbi::FromIntSize(this_._internal_floatvalues_size());
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size));
              total_size += tag_size + data_size;
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional string value = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PropertyRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropertyRecord*>(&to_msg);
  auto& from = static_cast<const PropertyRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.PropertyRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_floatvalues()->MergeFrom(from._internal_floatvalues());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_value(from._internal_value());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropertyRecord::CopyFrom(const PropertyRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.PropertyRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PropertyRecord::InternalSwap(PropertyRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.floatvalues_.InternalSwap(&other->_impl_.floatvalues_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata PropertyRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ContourPolygon_PolygonPart::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ContourPolygon_PolygonPart>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_._has_bits_);
};

ContourPolygon_PolygonPart::ContourPolygon_PolygonPart(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
}
ContourPolygon_PolygonPart::ContourPolygon_PolygonPart(
    ::google::protobuf::Arena* arena, const ContourPolygon_PolygonPart& from)
    : ContourPolygon_PolygonPart(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ContourPolygon_PolygonPart::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ContourPolygon_PolygonPart::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, endx_),
           0,
           offsetof(Impl_, ycenter_) -
               offsetof(Impl_, endx_) +
               sizeof(Impl_::ycenter_));
}
ContourPolygon_PolygonPart::~ContourPolygon_PolygonPart() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
  SharedDtor(*this);
}
inline void ContourPolygon_PolygonPart::SharedDtor(MessageLite& self) {
  ContourPolygon_PolygonPart& this_ = static_cast<ContourPolygon_PolygonPart&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ContourPolygon_PolygonPart::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContourPolygon_PolygonPart(arena);
}
constexpr auto ContourPolygon_PolygonPart::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ContourPolygon_PolygonPart),
                                            alignof(ContourPolygon_PolygonPart));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContourPolygon_PolygonPart::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContourPolygon_PolygonPart_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContourPolygon_PolygonPart::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContourPolygon_PolygonPart>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContourPolygon_PolygonPart::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContourPolygon_PolygonPart>(), &ContourPolygon_PolygonPart::ByteSizeLong,
            &ContourPolygon_PolygonPart::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_._cached_size_),
        false,
    },
    &ContourPolygon_PolygonPart::kDescriptorMethods,
    &descriptor_table_common_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContourPolygon_PolygonPart::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> ContourPolygon_PolygonPart::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContourPolygon_PolygonPart, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.type_)}},
    // optional double endX = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.endx_)}},
    // optional double endY = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.endy_)}},
    // optional double xCenter = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 4, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.xcenter_)}},
    // optional double yCenter = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 5, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.ycenter_)}},
    // optional bool isClockwise = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ContourPolygon_PolygonPart, _impl_.isclockwise_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.isclockwise_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional double endX = 2;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.endx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double endY = 3;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.endy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double xCenter = 4;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.xcenter_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double yCenter = 5;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.ycenter_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional bool isClockwise = 6;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.isclockwise_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ContourPolygon_PolygonPart::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.endx_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ycenter_) -
        reinterpret_cast<char*>(&_impl_.endx_)) + sizeof(_impl_.ycenter_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContourPolygon_PolygonPart::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContourPolygon_PolygonPart& this_ = static_cast<const ContourPolygon_PolygonPart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContourPolygon_PolygonPart::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContourPolygon_PolygonPart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional double endX = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_endx(), target);
          }

          // optional double endY = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_endy(), target);
          }

          // optional double xCenter = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_xcenter(), target);
          }

          // optional double yCenter = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_ycenter(), target);
          }

          // optional bool isClockwise = 6;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_isclockwise(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContourPolygon_PolygonPart::ByteSizeLong(const MessageLite& base) {
          const ContourPolygon_PolygonPart& this_ = static_cast<const ContourPolygon_PolygonPart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContourPolygon_PolygonPart::ByteSizeLong() const {
          const ContourPolygon_PolygonPart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // optional double endX = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 9;
            }
            // optional double endY = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 9;
            }
            // optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional bool isClockwise = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 2;
            }
            // optional double xCenter = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 9;
            }
            // optional double yCenter = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContourPolygon_PolygonPart::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContourPolygon_PolygonPart*>(&to_msg);
  auto& from = static_cast<const ContourPolygon_PolygonPart&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.endx_ = from._impl_.endx_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.endy_ = from._impl_.endy_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.isclockwise_ = from._impl_.isclockwise_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.xcenter_ = from._impl_.xcenter_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.ycenter_ = from._impl_.ycenter_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContourPolygon_PolygonPart::CopyFrom(const ContourPolygon_PolygonPart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContourPolygon_PolygonPart::InternalSwap(ContourPolygon_PolygonPart* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.ycenter_)
      + sizeof(ContourPolygon_PolygonPart::_impl_.ycenter_)
      - PROTOBUF_FIELD_OFFSET(ContourPolygon_PolygonPart, _impl_.endx_)>(
          reinterpret_cast<char*>(&_impl_.endx_),
          reinterpret_cast<char*>(&other->_impl_.endx_));
}

::google::protobuf::Metadata ContourPolygon_PolygonPart::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ContourPolygon::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ContourPolygon>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_._has_bits_);
};

ContourPolygon::ContourPolygon(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.ContourPolygon)
}
inline PROTOBUF_NDEBUG_INLINE ContourPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::ContourPolygon& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        polygonparts_{visibility, arena, from.polygonparts_} {}

ContourPolygon::ContourPolygon(
    ::google::protobuf::Arena* arena,
    const ContourPolygon& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContourPolygon* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xstart_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, xstart_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, xstart_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.ContourPolygon)
}
inline PROTOBUF_NDEBUG_INLINE ContourPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        polygonparts_{visibility, arena} {}

inline void ContourPolygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xstart_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, xstart_) +
               sizeof(Impl_::type_));
}
ContourPolygon::~ContourPolygon() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.ContourPolygon)
  SharedDtor(*this);
}
inline void ContourPolygon::SharedDtor(MessageLite& self) {
  ContourPolygon& this_ = static_cast<ContourPolygon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ContourPolygon::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContourPolygon(arena);
}
constexpr auto ContourPolygon::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.polygonparts_) +
          decltype(ContourPolygon::_impl_.polygonparts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ContourPolygon), alignof(ContourPolygon), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ContourPolygon::PlacementNew_,
                                 sizeof(ContourPolygon),
                                 alignof(ContourPolygon));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContourPolygon::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContourPolygon_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContourPolygon::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContourPolygon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContourPolygon::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContourPolygon>(), &ContourPolygon::ByteSizeLong,
            &ContourPolygon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_._cached_size_),
        false,
    },
    &ContourPolygon::kDescriptorMethods,
    &descriptor_table_common_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContourPolygon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ContourPolygon::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ContourPolygon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.polygonparts_)}},
    // optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ContourPolygon, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.type_)}},
    // optional double xStart = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.xstart_)}},
    // optional double yStart = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 1, 0, PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.ystart_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional double xStart = 2;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.xstart_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double yStart = 3;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.ystart_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
    {PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.polygonparts_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ContourPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.ContourPolygon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.polygonparts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.xstart_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.xstart_)) + sizeof(_impl_.type_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContourPolygon::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContourPolygon& this_ = static_cast<const ContourPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContourPolygon::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContourPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.ContourPolygon)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional double xStart = 2;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_xstart(), target);
          }

          // optional double yStart = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_ystart(), target);
          }

          // repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_polygonparts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_polygonparts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.ContourPolygon)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContourPolygon::ByteSizeLong(const MessageLite& base) {
          const ContourPolygon& this_ = static_cast<const ContourPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContourPolygon::ByteSizeLong() const {
          const ContourPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.ContourPolygon)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
            {
              total_size += 1UL * this_._internal_polygonparts_size();
              for (const auto& msg : this_._internal_polygonparts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional double xStart = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 9;
            }
            // optional double yStart = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 9;
            }
            // optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContourPolygon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContourPolygon*>(&to_msg);
  auto& from = static_cast<const ContourPolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.ContourPolygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_polygonparts()->MergeFrom(
      from._internal_polygonparts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.xstart_ = from._impl_.xstart_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.ystart_ = from._impl_.ystart_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContourPolygon::CopyFrom(const ContourPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.ContourPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContourPolygon::InternalSwap(ContourPolygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.polygonparts_.InternalSwap(&other->_impl_.polygonparts_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.type_)
      + sizeof(ContourPolygon::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(ContourPolygon, _impl_.xstart_)>(
          reinterpret_cast<char*>(&_impl_.xstart_),
          reinterpret_cast<char*>(&other->_impl_.xstart_));
}

::google::protobuf::Metadata ContourPolygon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
