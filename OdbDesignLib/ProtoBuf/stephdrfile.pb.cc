// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: stephdrfile.proto
// Protobuf C++ Version: 5.29.2

#include "stephdrfile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr StepHdrFile_StepRepeatRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        dx_{0},
        dy_{0},
        nx_{0},
        ny_{0},
        angle_{0},
        flip_{false},
        mirror_{false} {}

template <typename>
PROTOBUF_CONSTEXPR StepHdrFile_StepRepeatRecord::StepHdrFile_StepRepeatRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StepHdrFile_StepRepeatRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepHdrFile_StepRepeatRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepHdrFile_StepRepeatRecordDefaultTypeInternal() {}
  union {
    StepHdrFile_StepRepeatRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepHdrFile_StepRepeatRecordDefaultTypeInternal _StepHdrFile_StepRepeatRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR StepHdrFile_OnlineValuesEntry_DoNotUse::StepHdrFile_OnlineValuesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : StepHdrFile_OnlineValuesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : StepHdrFile_OnlineValuesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    StepHdrFile_OnlineValuesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepHdrFile_OnlineValuesEntry_DoNotUseDefaultTypeInternal _StepHdrFile_OnlineValuesEntry_DoNotUse_default_instance_;

inline constexpr StepHdrFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        steprepeatrecords_{},
        onlinevalues_{},
        affectingbom_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        online_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        xdatum_{0},
        ydatum_{0},
        id_{0},
        xorigin_{0},
        yorigin_{0},
        topactive_{0},
        bottomactive_{0},
        rightactive_{0},
        leftactive_{0},
        affectingbomchanged_{false} {}

template <typename>
PROTOBUF_CONSTEXPR StepHdrFile::StepHdrFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StepHdrFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StepHdrFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StepHdrFileDefaultTypeInternal() {}
  union {
    StepHdrFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StepHdrFileDefaultTypeInternal _StepHdrFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_stephdrfile_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_stephdrfile_2eproto = nullptr;
const ::uint32_t
    TableStruct_stephdrfile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.dx_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.dy_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.nx_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.ny_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.angle_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.flip_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord, _impl_.mirror_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.xdatum_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.ydatum_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.xorigin_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.yorigin_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.topactive_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.bottomactive_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.rightactive_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.leftactive_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.affectingbom_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.affectingbomchanged_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.online_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.steprepeatrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::StepHdrFile, _impl_.onlinevalues_),
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        0,
        12,
        1,
        ~0u,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 18, -1, sizeof(::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord)},
        {28, 38, -1, sizeof(::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse)},
        {40, 63, -1, sizeof(::Odb::Lib::Protobuf::StepHdrFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_StepHdrFile_StepRepeatRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_StepHdrFile_OnlineValuesEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_StepHdrFile_default_instance_._instance,
};
const char descriptor_table_protodef_stephdrfile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021stephdrfile.proto\022\020Odb.Lib.Protobuf\"\315\007"
    "\n\013StepHdrFile\022\023\n\006xDatum\030\001 \001(\002H\000\210\001\001\022\023\n\006yD"
    "atum\030\002 \001(\002H\001\210\001\001\022\017\n\002id\030\003 \001(\005H\002\210\001\001\022\024\n\007xOri"
    "gin\030\004 \001(\002H\003\210\001\001\022\024\n\007yOrigin\030\005 \001(\002H\004\210\001\001\022\026\n\t"
    "topActive\030\006 \001(\002H\005\210\001\001\022\031\n\014bottomActive\030\007 \001"
    "(\002H\006\210\001\001\022\030\n\013rightActive\030\010 \001(\002H\007\210\001\001\022\027\n\nlef"
    "tActive\030\t \001(\002H\010\210\001\001\022\031\n\014affectingBom\030\n \001(\t"
    "H\t\210\001\001\022 \n\023affectingBomChanged\030\013 \001(\010H\n\210\001\001\022"
    "\023\n\006online\030\014 \001(\tH\013\210\001\001\022I\n\021stepRepeatRecord"
    "s\030\r \003(\0132..Odb.Lib.Protobuf.StepHdrFile.S"
    "tepRepeatRecord\022\021\n\004path\030\016 \001(\tH\014\210\001\001\022E\n\014on"
    "lineValues\030\017 \003(\0132/.Odb.Lib.Protobuf.Step"
    "HdrFile.OnlineValuesEntry\032\224\002\n\020StepRepeat"
    "Record\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022\016\n\001x\030\002 \001(\002H\001\210\001"
    "\001\022\016\n\001y\030\003 \001(\002H\002\210\001\001\022\017\n\002dx\030\004 \001(\002H\003\210\001\001\022\017\n\002dy"
    "\030\005 \001(\002H\004\210\001\001\022\017\n\002nx\030\006 \001(\005H\005\210\001\001\022\017\n\002ny\030\007 \001(\005"
    "H\006\210\001\001\022\022\n\005angle\030\010 \001(\002H\007\210\001\001\022\021\n\004flip\030\t \001(\010H"
    "\010\210\001\001\022\023\n\006mirror\030\n \001(\010H\t\210\001\001B\007\n\005_nameB\004\n\002_x"
    "B\004\n\002_yB\005\n\003_dxB\005\n\003_dyB\005\n\003_nxB\005\n\003_nyB\010\n\006_a"
    "ngleB\007\n\005_flipB\t\n\007_mirror\0323\n\021OnlineValues"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\t\n"
    "\007_xDatumB\t\n\007_yDatumB\005\n\003_idB\n\n\010_xOriginB\n"
    "\n\010_yOriginB\014\n\n_topActiveB\017\n\r_bottomActiv"
    "eB\016\n\014_rightActiveB\r\n\013_leftActiveB\017\n\r_aff"
    "ectingBomB\026\n\024_affectingBomChangedB\t\n\007_on"
    "lineB\007\n\005_pathb\006proto3"
};
static ::absl::once_flag descriptor_table_stephdrfile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_stephdrfile_2eproto = {
    false,
    false,
    1021,
    descriptor_table_protodef_stephdrfile_2eproto,
    "stephdrfile.proto",
    &descriptor_table_stephdrfile_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_stephdrfile_2eproto::offsets,
    file_level_enum_descriptors_stephdrfile_2eproto,
    file_level_service_descriptors_stephdrfile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
// ===================================================================

class StepHdrFile_StepRepeatRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StepHdrFile_StepRepeatRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_._has_bits_);
};

StepHdrFile_StepRepeatRecord::StepHdrFile_StepRepeatRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
}
inline PROTOBUF_NDEBUG_INLINE StepHdrFile_StepRepeatRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

StepHdrFile_StepRepeatRecord::StepHdrFile_StepRepeatRecord(
    ::google::protobuf::Arena* arena,
    const StepHdrFile_StepRepeatRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StepHdrFile_StepRepeatRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, mirror_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::mirror_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
}
inline PROTOBUF_NDEBUG_INLINE StepHdrFile_StepRepeatRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void StepHdrFile_StepRepeatRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, mirror_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::mirror_));
}
StepHdrFile_StepRepeatRecord::~StepHdrFile_StepRepeatRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
  SharedDtor(*this);
}
inline void StepHdrFile_StepRepeatRecord::SharedDtor(MessageLite& self) {
  StepHdrFile_StepRepeatRecord& this_ = static_cast<StepHdrFile_StepRepeatRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StepHdrFile_StepRepeatRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StepHdrFile_StepRepeatRecord(arena);
}
constexpr auto StepHdrFile_StepRepeatRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StepHdrFile_StepRepeatRecord),
                                            alignof(StepHdrFile_StepRepeatRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StepHdrFile_StepRepeatRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StepHdrFile_StepRepeatRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StepHdrFile_StepRepeatRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StepHdrFile_StepRepeatRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StepHdrFile_StepRepeatRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StepHdrFile_StepRepeatRecord>(), &StepHdrFile_StepRepeatRecord::ByteSizeLong,
            &StepHdrFile_StepRepeatRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_._cached_size_),
        false,
    },
    &StepHdrFile_StepRepeatRecord::kDescriptorMethods,
    &descriptor_table_stephdrfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StepHdrFile_StepRepeatRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 66, 2> StepHdrFile_StepRepeatRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.name_)}},
    // optional float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.x_)}},
    // optional float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.y_)}},
    // optional float dx = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.dx_)}},
    // optional float dy = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.dy_)}},
    // optional int32 nx = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StepHdrFile_StepRepeatRecord, _impl_.nx_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.nx_)}},
    // optional int32 ny = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StepHdrFile_StepRepeatRecord, _impl_.ny_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.ny_)}},
    // optional float angle = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.angle_)}},
    // optional bool flip = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StepHdrFile_StepRepeatRecord, _impl_.flip_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.flip_)}},
    // optional bool mirror = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StepHdrFile_StepRepeatRecord, _impl_.mirror_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.mirror_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional float x = 2;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.x_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 3;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.y_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float dx = 4;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.dx_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float dy = 5;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.dy_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 nx = 6;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.nx_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 ny = 7;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.ny_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float angle = 8;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.angle_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional bool flip = 9;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.flip_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool mirror = 10;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.mirror_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\55\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord"
    "name"
  }},
};

PROTOBUF_NOINLINE void StepHdrFile_StepRepeatRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.angle_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.angle_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.flip_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mirror_) -
        reinterpret_cast<char*>(&_impl_.flip_)) + sizeof(_impl_.mirror_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StepHdrFile_StepRepeatRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StepHdrFile_StepRepeatRecord& this_ = static_cast<const StepHdrFile_StepRepeatRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StepHdrFile_StepRepeatRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StepHdrFile_StepRepeatRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional float x = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // optional float y = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // optional float dx = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_dx(), target);
          }

          // optional float dy = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_dy(), target);
          }

          // optional int32 nx = 6;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_nx(), target);
          }

          // optional int32 ny = 7;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<7>(
                    stream, this_._internal_ny(), target);
          }

          // optional float angle = 8;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_angle(), target);
          }

          // optional bool flip = 9;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_flip(), target);
          }

          // optional bool mirror = 10;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_mirror(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StepHdrFile_StepRepeatRecord::ByteSizeLong(const MessageLite& base) {
          const StepHdrFile_StepRepeatRecord& this_ = static_cast<const StepHdrFile_StepRepeatRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StepHdrFile_StepRepeatRecord::ByteSizeLong() const {
          const StepHdrFile_StepRepeatRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional float x = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // optional float y = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float dx = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float dy = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional int32 nx = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_nx());
            }
            // optional int32 ny = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ny());
            }
            // optional float angle = 8;
            if (cached_has_bits & 0x00000080u) {
              total_size += 5;
            }
          }
          if (cached_has_bits & 0x00000300u) {
            // optional bool flip = 9;
            if (cached_has_bits & 0x00000100u) {
              total_size += 2;
            }
            // optional bool mirror = 10;
            if (cached_has_bits & 0x00000200u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StepHdrFile_StepRepeatRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StepHdrFile_StepRepeatRecord*>(&to_msg);
  auto& from = static_cast<const StepHdrFile_StepRepeatRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.dx_ = from._impl_.dx_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.dy_ = from._impl_.dy_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.nx_ = from._impl_.nx_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ny_ = from._impl_.ny_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.angle_ = from._impl_.angle_;
    }
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.flip_ = from._impl_.flip_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.mirror_ = from._impl_.mirror_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StepHdrFile_StepRepeatRecord::CopyFrom(const StepHdrFile_StepRepeatRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StepHdrFile_StepRepeatRecord::InternalSwap(StepHdrFile_StepRepeatRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.mirror_)
      + sizeof(StepHdrFile_StepRepeatRecord::_impl_.mirror_)
      - PROTOBUF_FIELD_OFFSET(StepHdrFile_StepRepeatRecord, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata StepHdrFile_StepRepeatRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              StepHdrFile_OnlineValuesEntry_DoNotUse::StepHdrFile_OnlineValuesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              StepHdrFile_OnlineValuesEntry_DoNotUse::StepHdrFile_OnlineValuesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              StepHdrFile_OnlineValuesEntry_DoNotUse::StepHdrFile_OnlineValuesEntry_DoNotUse() : SuperType() {}
              StepHdrFile_OnlineValuesEntry_DoNotUse::StepHdrFile_OnlineValuesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* StepHdrFile_OnlineValuesEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) StepHdrFile_OnlineValuesEntry_DoNotUse(arena);
              }
              constexpr auto StepHdrFile_OnlineValuesEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StepHdrFile_OnlineValuesEntry_DoNotUse),
                                                          alignof(StepHdrFile_OnlineValuesEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull StepHdrFile_OnlineValuesEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_StepHdrFile_OnlineValuesEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &StepHdrFile_OnlineValuesEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<StepHdrFile_OnlineValuesEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &StepHdrFile_OnlineValuesEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &StepHdrFile_OnlineValuesEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &StepHdrFile_OnlineValuesEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_stephdrfile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* StepHdrFile_OnlineValuesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 63, 2> StepHdrFile_OnlineValuesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepHdrFile_OnlineValuesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile_OnlineValuesEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\3\5\0\0\0\0\0"
    "Odb.Lib.Protobuf.StepHdrFile.OnlineValuesEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class StepHdrFile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StepHdrFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_._has_bits_);
};

StepHdrFile::StepHdrFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.StepHdrFile)
}
inline PROTOBUF_NDEBUG_INLINE StepHdrFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::StepHdrFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        steprepeatrecords_{visibility, arena, from.steprepeatrecords_},
        onlinevalues_{visibility, arena, from.onlinevalues_},
        affectingbom_(arena, from.affectingbom_),
        online_(arena, from.online_),
        path_(arena, from.path_) {}

StepHdrFile::StepHdrFile(
    ::google::protobuf::Arena* arena,
    const StepHdrFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StepHdrFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xdatum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, xdatum_),
           offsetof(Impl_, affectingbomchanged_) -
               offsetof(Impl_, xdatum_) +
               sizeof(Impl_::affectingbomchanged_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.StepHdrFile)
}
inline PROTOBUF_NDEBUG_INLINE StepHdrFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        steprepeatrecords_{visibility, arena},
        onlinevalues_{visibility, arena},
        affectingbom_(arena),
        online_(arena),
        path_(arena) {}

inline void StepHdrFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, xdatum_),
           0,
           offsetof(Impl_, affectingbomchanged_) -
               offsetof(Impl_, xdatum_) +
               sizeof(Impl_::affectingbomchanged_));
}
StepHdrFile::~StepHdrFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.StepHdrFile)
  SharedDtor(*this);
}
inline void StepHdrFile::SharedDtor(MessageLite& self) {
  StepHdrFile& this_ = static_cast<StepHdrFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.affectingbom_.Destroy();
  this_._impl_.online_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StepHdrFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StepHdrFile(arena);
}
constexpr auto StepHdrFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.steprepeatrecords_) +
          decltype(StepHdrFile::_impl_.steprepeatrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.onlinevalues_) +
          decltype(StepHdrFile::_impl_.onlinevalues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.onlinevalues_) +
          decltype(StepHdrFile::_impl_.onlinevalues_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(StepHdrFile), alignof(StepHdrFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StepHdrFile::PlacementNew_,
                                 sizeof(StepHdrFile),
                                 alignof(StepHdrFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StepHdrFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StepHdrFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StepHdrFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StepHdrFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StepHdrFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StepHdrFile>(), &StepHdrFile::ByteSizeLong,
            &StepHdrFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_._cached_size_),
        false,
    },
    &StepHdrFile::kDescriptorMethods,
    &descriptor_table_stephdrfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StepHdrFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 2, 79, 2> StepHdrFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepHdrFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float xDatum = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 3, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.xdatum_)}},
    // optional float yDatum = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 4, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.ydatum_)}},
    // optional int32 id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StepHdrFile, _impl_.id_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.id_)}},
    // optional float xOrigin = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 6, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.xorigin_)}},
    // optional float yOrigin = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 7, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.yorigin_)}},
    // optional float topActive = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 8, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.topactive_)}},
    // optional float bottomActive = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 9, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.bottomactive_)}},
    // optional float rightActive = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 10, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.rightactive_)}},
    // optional float leftActive = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 11, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.leftactive_)}},
    // optional string affectingBom = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 0, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.affectingbom_)}},
    // optional bool affectingBomChanged = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StepHdrFile, _impl_.affectingbomchanged_), 12>(),
     {88, 12, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.affectingbomchanged_)}},
    // optional string online = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 1, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.online_)}},
    // repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.steprepeatrecords_)}},
    // optional string path = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 2, 0, PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.path_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float xDatum = 1;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.xdatum_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yDatum = 2;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.ydatum_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional int32 id = 3;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional float xOrigin = 4;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.xorigin_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yOrigin = 5;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.yorigin_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float topActive = 6;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.topactive_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float bottomActive = 7;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.bottomactive_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float rightActive = 8;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.rightactive_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float leftActive = 9;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.leftactive_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string affectingBom = 10;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.affectingbom_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool affectingBomChanged = 11;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.affectingbomchanged_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional string online = 12;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.online_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.steprepeatrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string path = 14;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.path_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> onlineValues = 15;
    {PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.onlinevalues_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::StepHdrFile_StepRepeatRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(StepHdrFile()._impl_.onlinevalues_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\34\0\0\0\0\0\0\0\0\0\14\0\6\0\4\14"
    "Odb.Lib.Protobuf.StepHdrFile"
    "affectingBom"
    "online"
    "path"
    "onlineValues"
  }},
};

PROTOBUF_NOINLINE void StepHdrFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.StepHdrFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steprepeatrecords_.Clear();
  _impl_.onlinevalues_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.affectingbom_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.online_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.xdatum_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.yorigin_) -
        reinterpret_cast<char*>(&_impl_.xdatum_)) + sizeof(_impl_.yorigin_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&_impl_.topactive_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.affectingbomchanged_) -
        reinterpret_cast<char*>(&_impl_.topactive_)) + sizeof(_impl_.affectingbomchanged_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StepHdrFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StepHdrFile& this_ = static_cast<const StepHdrFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StepHdrFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StepHdrFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.StepHdrFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional float xDatum = 1;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_xdatum(), target);
          }

          // optional float yDatum = 2;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_ydatum(), target);
          }

          // optional int32 id = 3;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_id(), target);
          }

          // optional float xOrigin = 4;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_xorigin(), target);
          }

          // optional float yOrigin = 5;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_yorigin(), target);
          }

          // optional float topActive = 6;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_topactive(), target);
          }

          // optional float bottomActive = 7;
          if (cached_has_bits & 0x00000200u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_bottomactive(), target);
          }

          // optional float rightActive = 8;
          if (cached_has_bits & 0x00000400u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_rightactive(), target);
          }

          // optional float leftActive = 9;
          if (cached_has_bits & 0x00000800u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_leftactive(), target);
          }

          // optional string affectingBom = 10;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_affectingbom();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.affectingBom");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // optional bool affectingBomChanged = 11;
          if (cached_has_bits & 0x00001000u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                11, this_._internal_affectingbomchanged(), target);
          }

          // optional string online = 12;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_online();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.online");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_steprepeatrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_steprepeatrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional string path = 14;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.path");
            target = stream->WriteStringMaybeAliased(14, _s, target);
          }

          // map<string, string> onlineValues = 15;
          if (!this_._internal_onlinevalues().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_onlinevalues();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.onlineValues");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.onlineValues");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    15, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.onlineValues");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.StepHdrFile.onlineValues");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.StepHdrFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StepHdrFile::ByteSizeLong(const MessageLite& base) {
          const StepHdrFile& this_ = static_cast<const StepHdrFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StepHdrFile::ByteSizeLong() const {
          const StepHdrFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.StepHdrFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.StepHdrFile.StepRepeatRecord stepRepeatRecords = 13;
            {
              total_size += 1UL * this_._internal_steprepeatrecords_size();
              for (const auto& msg : this_._internal_steprepeatrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> onlineValues = 15;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_onlinevalues_size());
              for (const auto& entry : this_._internal_onlinevalues()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string affectingBom = 10;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_affectingbom());
            }
            // optional string online = 12;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_online());
            }
            // optional string path = 14;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // optional float xDatum = 1;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float yDatum = 2;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional int32 id = 3;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_id());
            }
            // optional float xOrigin = 4;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
            // optional float yOrigin = 5;
            if (cached_has_bits & 0x00000080u) {
              total_size += 5;
            }
          }
          if (cached_has_bits & 0x00001f00u) {
            // optional float topActive = 6;
            if (cached_has_bits & 0x00000100u) {
              total_size += 5;
            }
            // optional float bottomActive = 7;
            if (cached_has_bits & 0x00000200u) {
              total_size += 5;
            }
            // optional float rightActive = 8;
            if (cached_has_bits & 0x00000400u) {
              total_size += 5;
            }
            // optional float leftActive = 9;
            if (cached_has_bits & 0x00000800u) {
              total_size += 5;
            }
            // optional bool affectingBomChanged = 11;
            if (cached_has_bits & 0x00001000u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StepHdrFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StepHdrFile*>(&to_msg);
  auto& from = static_cast<const StepHdrFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.StepHdrFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_steprepeatrecords()->MergeFrom(
      from._internal_steprepeatrecords());
  _this->_impl_.onlinevalues_.MergeFrom(from._impl_.onlinevalues_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_affectingbom(from._internal_affectingbom());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_online(from._internal_online());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.xdatum_ = from._impl_.xdatum_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.ydatum_ = from._impl_.ydatum_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.xorigin_ = from._impl_.xorigin_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.yorigin_ = from._impl_.yorigin_;
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.topactive_ = from._impl_.topactive_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.bottomactive_ = from._impl_.bottomactive_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.rightactive_ = from._impl_.rightactive_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.leftactive_ = from._impl_.leftactive_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.affectingbomchanged_ = from._impl_.affectingbomchanged_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StepHdrFile::CopyFrom(const StepHdrFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.StepHdrFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StepHdrFile::InternalSwap(StepHdrFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.steprepeatrecords_.InternalSwap(&other->_impl_.steprepeatrecords_);
  _impl_.onlinevalues_.InternalSwap(&other->_impl_.onlinevalues_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.affectingbom_, &other->_impl_.affectingbom_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.online_, &other->_impl_.online_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.affectingbomchanged_)
      + sizeof(StepHdrFile::_impl_.affectingbomchanged_)
      - PROTOBUF_FIELD_OFFSET(StepHdrFile, _impl_.xdatum_)>(
          reinterpret_cast<char*>(&_impl_.xdatum_),
          reinterpret_cast<char*>(&other->_impl_.xdatum_));
}

::google::protobuf::Metadata StepHdrFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_stephdrfile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
