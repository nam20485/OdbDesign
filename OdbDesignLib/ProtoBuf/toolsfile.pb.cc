// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: toolsfile.proto
// Protobuf C++ Version: 5.29.2

#include "toolsfile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr ToolsFile_ToolsRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : drill_bit_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tool_num_{0u},
        type_{static_cast< ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord_Type >(0)},
        min_tol_{0},
        max_tol_{0},
        finish_size_{0},
        drill_size_{0},
        type2_{static_cast< ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord_Type2 >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToolsFile_ToolsRecord::ToolsFile_ToolsRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolsFile_ToolsRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolsFile_ToolsRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolsFile_ToolsRecordDefaultTypeInternal() {}
  union {
    ToolsFile_ToolsRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolsFile_ToolsRecordDefaultTypeInternal _ToolsFile_ToolsRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ToolsFile_ToolsEntry_DoNotUse::ToolsFile_ToolsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ToolsFile_ToolsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ToolsFile_ToolsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ToolsFile_ToolsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolsFile_ToolsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolsFile_ToolsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ToolsFile_ToolsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolsFile_ToolsEntry_DoNotUseDefaultTypeInternal _ToolsFile_ToolsEntry_DoNotUse_default_instance_;

inline constexpr ToolsFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tools_{},
        directory_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        units_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_params_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        thickness_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ToolsFile::ToolsFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ToolsFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ToolsFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ToolsFileDefaultTypeInternal() {}
  union {
    ToolsFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ToolsFileDefaultTypeInternal _ToolsFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_toolsfile_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_toolsfile_2eproto = nullptr;
const ::uint32_t
    TableStruct_toolsfile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.tool_num_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.type2_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.min_tol_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.max_tol_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.drill_bit_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.finish_size_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord, _impl_.drill_size_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.directory_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.units_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.thickness_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.user_params_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::ToolsFile, _impl_.tools_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Odb::Lib::Protobuf::ToolsFile_ToolsRecord)},
        {16, 26, -1, sizeof(::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse)},
        {28, -1, -1, sizeof(::Odb::Lib::Protobuf::ToolsFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_ToolsFile_ToolsRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_ToolsFile_ToolsEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_ToolsFile_default_instance_._instance,
};
const char descriptor_table_protodef_toolsfile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017toolsfile.proto\022\020Odb.Lib.Protobuf\"\321\004\n\t"
    "ToolsFile\022\021\n\tdirectory\030\001 \001(\t\022\014\n\004path\030\002 \001"
    "(\t\022\r\n\005units\030\003 \001(\t\022\021\n\tthickness\030\004 \001(\001\022\023\n\013"
    "user_params\030\005 \001(\t\0225\n\005tools\030\006 \003(\0132&.Odb.L"
    "ib.Protobuf.ToolsFile.ToolsEntry\032\335\002\n\013Too"
    "lsRecord\022\020\n\010tool_num\030\001 \001(\r\022:\n\004type\030\002 \001(\016"
    "2,.Odb.Lib.Protobuf.ToolsFile.ToolsRecor"
    "d.Type\022<\n\005type2\030\003 \001(\0162-.Odb.Lib.Protobuf"
    ".ToolsFile.ToolsRecord.Type2\022\017\n\007min_tol\030"
    "\004 \001(\001\022\017\n\007max_tol\030\005 \001(\001\022\021\n\tdrill_bit\030\006 \001("
    "\t\022\023\n\013finish_size\030\007 \001(\001\022\022\n\ndrill_size\030\010 \001"
    "(\001\")\n\004Type\022\n\n\006Plated\020\000\022\014\n\010NoPlated\020\001\022\007\n\003"
    "Via\020\002\"9\n\005Type2\022\014\n\010Standard\020\000\022\014\n\010PressFit"
    "\020\001\022\t\n\005Photo\020\002\022\t\n\005Laser\020\003\032U\n\nToolsEntry\022\013"
    "\n\003key\030\001 \001(\r\0226\n\005value\030\002 \001(\0132\'.Odb.Lib.Pro"
    "tobuf.ToolsFile.ToolsRecord:\0028\001b\006proto3"
};
static ::absl::once_flag descriptor_table_toolsfile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_toolsfile_2eproto = {
    false,
    false,
    639,
    descriptor_table_protodef_toolsfile_2eproto,
    "toolsfile.proto",
    &descriptor_table_toolsfile_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_toolsfile_2eproto::offsets,
    file_level_enum_descriptors_toolsfile_2eproto,
    file_level_service_descriptors_toolsfile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::google::protobuf::EnumDescriptor* ToolsFile_ToolsRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_toolsfile_2eproto);
  return file_level_enum_descriptors_toolsfile_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ToolsFile_ToolsRecord_Type_internal_data_[] = {
    196608u, 0u, };
bool ToolsFile_ToolsRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ToolsFile_ToolsRecord_Type ToolsFile_ToolsRecord::Plated;
constexpr ToolsFile_ToolsRecord_Type ToolsFile_ToolsRecord::NoPlated;
constexpr ToolsFile_ToolsRecord_Type ToolsFile_ToolsRecord::Via;
constexpr ToolsFile_ToolsRecord_Type ToolsFile_ToolsRecord::Type_MIN;
constexpr ToolsFile_ToolsRecord_Type ToolsFile_ToolsRecord::Type_MAX;
constexpr int ToolsFile_ToolsRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ToolsFile_ToolsRecord_Type2_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_toolsfile_2eproto);
  return file_level_enum_descriptors_toolsfile_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ToolsFile_ToolsRecord_Type2_internal_data_[] = {
    262144u, 0u, };
bool ToolsFile_ToolsRecord_Type2_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::Standard;
constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::PressFit;
constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::Photo;
constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::Laser;
constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::Type2_MIN;
constexpr ToolsFile_ToolsRecord_Type2 ToolsFile_ToolsRecord::Type2_MAX;
constexpr int ToolsFile_ToolsRecord::Type2_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ToolsFile_ToolsRecord::_Internal {
 public:
};

ToolsFile_ToolsRecord::ToolsFile_ToolsRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ToolsFile_ToolsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord& from_msg)
      : drill_bit_(arena, from.drill_bit_),
        _cached_size_{0} {}

ToolsFile_ToolsRecord::ToolsFile_ToolsRecord(
    ::google::protobuf::Arena* arena,
    const ToolsFile_ToolsRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolsFile_ToolsRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tool_num_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tool_num_),
           offsetof(Impl_, type2_) -
               offsetof(Impl_, tool_num_) +
               sizeof(Impl_::type2_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
}
inline PROTOBUF_NDEBUG_INLINE ToolsFile_ToolsRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : drill_bit_(arena),
        _cached_size_{0} {}

inline void ToolsFile_ToolsRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tool_num_),
           0,
           offsetof(Impl_, type2_) -
               offsetof(Impl_, tool_num_) +
               sizeof(Impl_::type2_));
}
ToolsFile_ToolsRecord::~ToolsFile_ToolsRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
  SharedDtor(*this);
}
inline void ToolsFile_ToolsRecord::SharedDtor(MessageLite& self) {
  ToolsFile_ToolsRecord& this_ = static_cast<ToolsFile_ToolsRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.drill_bit_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ToolsFile_ToolsRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ToolsFile_ToolsRecord(arena);
}
constexpr auto ToolsFile_ToolsRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ToolsFile_ToolsRecord),
                                            alignof(ToolsFile_ToolsRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ToolsFile_ToolsRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ToolsFile_ToolsRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ToolsFile_ToolsRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ToolsFile_ToolsRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ToolsFile_ToolsRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ToolsFile_ToolsRecord>(), &ToolsFile_ToolsRecord::ByteSizeLong,
            &ToolsFile_ToolsRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_._cached_size_),
        false,
    },
    &ToolsFile_ToolsRecord::kDescriptorMethods,
    &descriptor_table_toolsfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ToolsFile_ToolsRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 64, 2> ToolsFile_ToolsRecord::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ToolsFile_ToolsRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double drill_size = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.drill_size_)}},
    // uint32 tool_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToolsFile_ToolsRecord, _impl_.tool_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.tool_num_)}},
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToolsFile_ToolsRecord, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.type_)}},
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type2 type2 = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToolsFile_ToolsRecord, _impl_.type2_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.type2_)}},
    // double min_tol = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.min_tol_)}},
    // double max_tol = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.max_tol_)}},
    // string drill_bit = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.drill_bit_)}},
    // double finish_size = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.finish_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 tool_num = 1;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.tool_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type2 type2 = 3;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.type2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // double min_tol = 4;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.min_tol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double max_tol = 5;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.max_tol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string drill_bit = 6;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.drill_bit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double finish_size = 7;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.finish_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double drill_size = 8;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.drill_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\46\0\0\0\0\0\11\0\0\0\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.ToolsFile.ToolsRecord"
    "drill_bit"
  }},
};

PROTOBUF_NOINLINE void ToolsFile_ToolsRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drill_bit_.ClearToEmpty();
  ::memset(&_impl_.tool_num_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type2_) -
      reinterpret_cast<char*>(&_impl_.tool_num_)) + sizeof(_impl_.type2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ToolsFile_ToolsRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ToolsFile_ToolsRecord& this_ = static_cast<const ToolsFile_ToolsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ToolsFile_ToolsRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ToolsFile_ToolsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 tool_num = 1;
          if (this_._internal_tool_num() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_tool_num(), target);
          }

          // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type type = 2;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type2 type2 = 3;
          if (this_._internal_type2() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_type2(), target);
          }

          // double min_tol = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_min_tol()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_min_tol(), target);
          }

          // double max_tol = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_max_tol()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_max_tol(), target);
          }

          // string drill_bit = 6;
          if (!this_._internal_drill_bit().empty()) {
            const std::string& _s = this_._internal_drill_bit();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ToolsFile.ToolsRecord.drill_bit");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // double finish_size = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_finish_size()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_finish_size(), target);
          }

          // double drill_size = 8;
          if (::absl::bit_cast<::uint64_t>(this_._internal_drill_size()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_drill_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ToolsFile_ToolsRecord::ByteSizeLong(const MessageLite& base) {
          const ToolsFile_ToolsRecord& this_ = static_cast<const ToolsFile_ToolsRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ToolsFile_ToolsRecord::ByteSizeLong() const {
          const ToolsFile_ToolsRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string drill_bit = 6;
            if (!this_._internal_drill_bit().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_drill_bit());
            }
            // uint32 tool_num = 1;
            if (this_._internal_tool_num() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_tool_num());
            }
            // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type type = 2;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // double min_tol = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_min_tol()) != 0) {
              total_size += 9;
            }
            // double max_tol = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_max_tol()) != 0) {
              total_size += 9;
            }
            // double finish_size = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_finish_size()) != 0) {
              total_size += 9;
            }
            // double drill_size = 8;
            if (::absl::bit_cast<::uint64_t>(this_._internal_drill_size()) != 0) {
              total_size += 9;
            }
            // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord.Type2 type2 = 3;
            if (this_._internal_type2() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type2());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ToolsFile_ToolsRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolsFile_ToolsRecord*>(&to_msg);
  auto& from = static_cast<const ToolsFile_ToolsRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_drill_bit().empty()) {
    _this->_internal_set_drill_bit(from._internal_drill_bit());
  }
  if (from._internal_tool_num() != 0) {
    _this->_impl_.tool_num_ = from._impl_.tool_num_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_min_tol()) != 0) {
    _this->_impl_.min_tol_ = from._impl_.min_tol_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_max_tol()) != 0) {
    _this->_impl_.max_tol_ = from._impl_.max_tol_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_finish_size()) != 0) {
    _this->_impl_.finish_size_ = from._impl_.finish_size_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_drill_size()) != 0) {
    _this->_impl_.drill_size_ = from._impl_.drill_size_;
  }
  if (from._internal_type2() != 0) {
    _this->_impl_.type2_ = from._impl_.type2_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolsFile_ToolsRecord::CopyFrom(const ToolsFile_ToolsRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.ToolsFile.ToolsRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolsFile_ToolsRecord::InternalSwap(ToolsFile_ToolsRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.drill_bit_, &other->_impl_.drill_bit_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.type2_)
      + sizeof(ToolsFile_ToolsRecord::_impl_.type2_)
      - PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsRecord, _impl_.tool_num_)>(
          reinterpret_cast<char*>(&_impl_.tool_num_),
          reinterpret_cast<char*>(&other->_impl_.tool_num_));
}

::google::protobuf::Metadata ToolsFile_ToolsRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ToolsFile_ToolsEntry_DoNotUse::ToolsFile_ToolsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ToolsFile_ToolsEntry_DoNotUse::ToolsFile_ToolsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ToolsFile_ToolsEntry_DoNotUse::ToolsFile_ToolsEntry_DoNotUse() : SuperType() {}
              ToolsFile_ToolsEntry_DoNotUse::ToolsFile_ToolsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ToolsFile_ToolsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ToolsFile_ToolsEntry_DoNotUse(arena);
              }
              constexpr auto ToolsFile_ToolsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ToolsFile_ToolsEntry_DoNotUse),
                                                          alignof(ToolsFile_ToolsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ToolsFile_ToolsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ToolsFile_ToolsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ToolsFile_ToolsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ToolsFile_ToolsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ToolsFile_ToolsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ToolsFile_ToolsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ToolsFile_ToolsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_toolsfile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ToolsFile_ToolsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ToolsFile_ToolsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ToolsFile_ToolsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_.value_)}},
    // uint32 key = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ToolsFile_ToolsEntry_DoNotUse, _impl_.key_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 key = 1;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .Odb.Lib.Protobuf.ToolsFile.ToolsRecord value = 2;
    {PROTOBUF_FIELD_OFFSET(ToolsFile_ToolsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ToolsFile_ToolsRecord>()},
  }}, {{
  }},
};

// ===================================================================

class ToolsFile::_Internal {
 public:
};

ToolsFile::ToolsFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.ToolsFile)
}
inline PROTOBUF_NDEBUG_INLINE ToolsFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::ToolsFile& from_msg)
      : tools_{visibility, arena, from.tools_},
        directory_(arena, from.directory_),
        path_(arena, from.path_),
        units_(arena, from.units_),
        user_params_(arena, from.user_params_),
        _cached_size_{0} {}

ToolsFile::ToolsFile(
    ::google::protobuf::Arena* arena,
    const ToolsFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ToolsFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.thickness_ = from._impl_.thickness_;

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.ToolsFile)
}
inline PROTOBUF_NDEBUG_INLINE ToolsFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tools_{visibility, arena},
        directory_(arena),
        path_(arena),
        units_(arena),
        user_params_(arena),
        _cached_size_{0} {}

inline void ToolsFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.thickness_ = {};
}
ToolsFile::~ToolsFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.ToolsFile)
  SharedDtor(*this);
}
inline void ToolsFile::SharedDtor(MessageLite& self) {
  ToolsFile& this_ = static_cast<ToolsFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.directory_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.units_.Destroy();
  this_._impl_.user_params_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ToolsFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ToolsFile(arena);
}
constexpr auto ToolsFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.tools_) +
          decltype(ToolsFile::_impl_.tools_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.tools_) +
          decltype(ToolsFile::_impl_.tools_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ToolsFile), alignof(ToolsFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ToolsFile::PlacementNew_,
                                 sizeof(ToolsFile),
                                 alignof(ToolsFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ToolsFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ToolsFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ToolsFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ToolsFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ToolsFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ToolsFile>(), &ToolsFile::ByteSizeLong,
            &ToolsFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_._cached_size_),
        false,
    },
    &ToolsFile::kDescriptorMethods,
    &descriptor_table_toolsfile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ToolsFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 64, 2> ToolsFile::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ToolsFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string directory = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.directory_)}},
    // string path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.path_)}},
    // string units = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.units_)}},
    // double thickness = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.thickness_)}},
    // string user_params = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.user_params_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string directory = 1;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.directory_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 2;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string units = 3;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.units_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double thickness = 4;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.thickness_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // string user_params = 5;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.user_params_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<uint32, .Odb.Lib.Protobuf.ToolsFile.ToolsRecord> tools = 6;
    {PROTOBUF_FIELD_OFFSET(ToolsFile, _impl_.tools_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ToolsFile()._impl_.tools_)>(
        0, 0, 0, 13,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ToolsFile_ToolsRecord>()},
  }}, {{
    "\32\11\4\5\0\13\0\0"
    "Odb.Lib.Protobuf.ToolsFile"
    "directory"
    "path"
    "units"
    "user_params"
  }},
};

PROTOBUF_NOINLINE void ToolsFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.ToolsFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tools_.Clear();
  _impl_.directory_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  _impl_.units_.ClearToEmpty();
  _impl_.user_params_.ClearToEmpty();
  _impl_.thickness_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ToolsFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ToolsFile& this_ = static_cast<const ToolsFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ToolsFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ToolsFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.ToolsFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string directory = 1;
          if (!this_._internal_directory().empty()) {
            const std::string& _s = this_._internal_directory();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ToolsFile.directory");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string path = 2;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ToolsFile.path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string units = 3;
          if (!this_._internal_units().empty()) {
            const std::string& _s = this_._internal_units();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ToolsFile.units");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // double thickness = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_thickness()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_thickness(), target);
          }

          // string user_params = 5;
          if (!this_._internal_user_params().empty()) {
            const std::string& _s = this_._internal_user_params();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.ToolsFile.user_params");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // map<uint32, .Odb.Lib.Protobuf.ToolsFile.ToolsRecord> tools = 6;
          if (!this_._internal_tools().empty()) {
            using MapType = ::google::protobuf::Map<::uint32_t, ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord>;
            using WireHelper = _pbi::MapEntryFuncs<::uint32_t, ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord,
                                           _pbi::WireFormatLite::TYPE_UINT32,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_tools();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.ToolsFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ToolsFile::ByteSizeLong(const MessageLite& base) {
          const ToolsFile& this_ = static_cast<const ToolsFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ToolsFile::ByteSizeLong() const {
          const ToolsFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.ToolsFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<uint32, .Odb.Lib.Protobuf.ToolsFile.ToolsRecord> tools = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_tools_size());
              for (const auto& entry : this_._internal_tools()) {
                total_size += _pbi::MapEntryFuncs<::uint32_t, ::Odb::Lib::Protobuf::ToolsFile_ToolsRecord,
                                               _pbi::WireFormatLite::TYPE_UINT32,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string directory = 1;
            if (!this_._internal_directory().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_directory());
            }
            // string path = 2;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string units = 3;
            if (!this_._internal_units().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_units());
            }
            // string user_params = 5;
            if (!this_._internal_user_params().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_params());
            }
            // double thickness = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_thickness()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ToolsFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ToolsFile*>(&to_msg);
  auto& from = static_cast<const ToolsFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.ToolsFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tools_.MergeFrom(from._impl_.tools_);
  if (!from._internal_directory().empty()) {
    _this->_internal_set_directory(from._internal_directory());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_units().empty()) {
    _this->_internal_set_units(from._internal_units());
  }
  if (!from._internal_user_params().empty()) {
    _this->_internal_set_user_params(from._internal_user_params());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_thickness()) != 0) {
    _this->_impl_.thickness_ = from._impl_.thickness_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ToolsFile::CopyFrom(const ToolsFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.ToolsFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ToolsFile::InternalSwap(ToolsFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tools_.InternalSwap(&other->_impl_.tools_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.directory_, &other->_impl_.directory_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.units_, &other->_impl_.units_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_params_, &other->_impl_.user_params_, arena);
        swap(_impl_.thickness_, other->_impl_.thickness_);
}

::google::protobuf::Metadata ToolsFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_toolsfile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
