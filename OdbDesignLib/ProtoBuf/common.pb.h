// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf C++ Version: 5.29.2

#ifndef common_2eproto_2epb_2eh
#define common_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2eproto ODBDESIGN_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ODBDESIGN_EXPORT TableStruct_common_2eproto {
  static const ::uint32_t offsets[];
};
ODBDESIGN_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class ContourPolygon;
struct ContourPolygonDefaultTypeInternal;
ODBDESIGN_EXPORT extern ContourPolygonDefaultTypeInternal _ContourPolygon_default_instance_;
class ContourPolygon_PolygonPart;
struct ContourPolygon_PolygonPartDefaultTypeInternal;
ODBDESIGN_EXPORT extern ContourPolygon_PolygonPartDefaultTypeInternal _ContourPolygon_PolygonPart_default_instance_;
class PropertyRecord;
struct PropertyRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern PropertyRecordDefaultTypeInternal _PropertyRecord_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {
enum ContourPolygon_PolygonPart_Type : int {
  ContourPolygon_PolygonPart_Type_Segment = 0,
  ContourPolygon_PolygonPart_Type_Arc = 1,
  ContourPolygon_PolygonPart_Type_ContourPolygon_PolygonPart_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ContourPolygon_PolygonPart_Type_ContourPolygon_PolygonPart_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool ContourPolygon_PolygonPart_Type_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t ContourPolygon_PolygonPart_Type_internal_data_[];
constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart_Type_Type_MIN = static_cast<ContourPolygon_PolygonPart_Type>(0);
constexpr ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart_Type_Type_MAX = static_cast<ContourPolygon_PolygonPart_Type>(1);
constexpr int ContourPolygon_PolygonPart_Type_Type_ARRAYSIZE = 1 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
ContourPolygon_PolygonPart_Type_descriptor();
template <typename T>
const std::string& ContourPolygon_PolygonPart_Type_Name(T value) {
  static_assert(std::is_same<T, ContourPolygon_PolygonPart_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return ContourPolygon_PolygonPart_Type_Name(static_cast<ContourPolygon_PolygonPart_Type>(value));
}
template <>
inline const std::string& ContourPolygon_PolygonPart_Type_Name(ContourPolygon_PolygonPart_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ContourPolygon_PolygonPart_Type_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ContourPolygon_PolygonPart_Type_Parse(absl::string_view name, ContourPolygon_PolygonPart_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContourPolygon_PolygonPart_Type>(
      ContourPolygon_PolygonPart_Type_descriptor(), name, value);
}
enum ContourPolygon_Type : int {
  ContourPolygon_Type_Island = 0,
  ContourPolygon_Type_Hole = 1,
  ContourPolygon_Type_ContourPolygon_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ContourPolygon_Type_ContourPolygon_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool ContourPolygon_Type_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t ContourPolygon_Type_internal_data_[];
constexpr ContourPolygon_Type ContourPolygon_Type_Type_MIN = static_cast<ContourPolygon_Type>(0);
constexpr ContourPolygon_Type ContourPolygon_Type_Type_MAX = static_cast<ContourPolygon_Type>(1);
constexpr int ContourPolygon_Type_Type_ARRAYSIZE = 1 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
ContourPolygon_Type_descriptor();
template <typename T>
const std::string& ContourPolygon_Type_Name(T value) {
  static_assert(std::is_same<T, ContourPolygon_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return ContourPolygon_Type_Name(static_cast<ContourPolygon_Type>(value));
}
template <>
inline const std::string& ContourPolygon_Type_Name(ContourPolygon_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ContourPolygon_Type_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ContourPolygon_Type_Parse(absl::string_view name, ContourPolygon_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ContourPolygon_Type>(
      ContourPolygon_Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ODBDESIGN_EXPORT PropertyRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.PropertyRecord) */ {
 public:
  inline PropertyRecord() : PropertyRecord(nullptr) {}
  ~PropertyRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PropertyRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PropertyRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PropertyRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline PropertyRecord(const PropertyRecord& from) : PropertyRecord(nullptr, from) {}
  inline PropertyRecord(PropertyRecord&& from) noexcept
      : PropertyRecord(nullptr, std::move(from)) {}
  inline PropertyRecord& operator=(const PropertyRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline PropertyRecord& operator=(PropertyRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PropertyRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const PropertyRecord* internal_default_instance() {
    return reinterpret_cast<const PropertyRecord*>(
        &_PropertyRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PropertyRecord& a, PropertyRecord& b) { a.Swap(&b); }
  inline void Swap(PropertyRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PropertyRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PropertyRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PropertyRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PropertyRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PropertyRecord& from) { PropertyRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PropertyRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.PropertyRecord"; }

 protected:
  explicit PropertyRecord(::google::protobuf::Arena* arena);
  PropertyRecord(::google::protobuf::Arena* arena, const PropertyRecord& from);
  PropertyRecord(::google::protobuf::Arena* arena, PropertyRecord&& from) noexcept
      : PropertyRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFloatValuesFieldNumber = 3,
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated double floatValues = 3;
  int floatvalues_size() const;
  private:
  int _internal_floatvalues_size() const;

  public:
  void clear_floatvalues() ;
  double floatvalues(int index) const;
  void set_floatvalues(int index, double value);
  void add_floatvalues(double value);
  const ::google::protobuf::RepeatedField<double>& floatvalues() const;
  ::google::protobuf::RepeatedField<double>* mutable_floatvalues();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_floatvalues() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_floatvalues();

  public:
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string value = 2;
  bool has_value() const;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.PropertyRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PropertyRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<double> floatvalues_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT ContourPolygon_PolygonPart final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ContourPolygon.PolygonPart) */ {
 public:
  inline ContourPolygon_PolygonPart() : ContourPolygon_PolygonPart(nullptr) {}
  ~ContourPolygon_PolygonPart() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ContourPolygon_PolygonPart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ContourPolygon_PolygonPart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ContourPolygon_PolygonPart(
      ::google::protobuf::internal::ConstantInitialized);

  inline ContourPolygon_PolygonPart(const ContourPolygon_PolygonPart& from) : ContourPolygon_PolygonPart(nullptr, from) {}
  inline ContourPolygon_PolygonPart(ContourPolygon_PolygonPart&& from) noexcept
      : ContourPolygon_PolygonPart(nullptr, std::move(from)) {}
  inline ContourPolygon_PolygonPart& operator=(const ContourPolygon_PolygonPart& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContourPolygon_PolygonPart& operator=(ContourPolygon_PolygonPart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContourPolygon_PolygonPart& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContourPolygon_PolygonPart* internal_default_instance() {
    return reinterpret_cast<const ContourPolygon_PolygonPart*>(
        &_ContourPolygon_PolygonPart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ContourPolygon_PolygonPart& a, ContourPolygon_PolygonPart& b) { a.Swap(&b); }
  inline void Swap(ContourPolygon_PolygonPart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContourPolygon_PolygonPart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContourPolygon_PolygonPart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ContourPolygon_PolygonPart>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContourPolygon_PolygonPart& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ContourPolygon_PolygonPart& from) { ContourPolygon_PolygonPart::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ContourPolygon_PolygonPart* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ContourPolygon.PolygonPart"; }

 protected:
  explicit ContourPolygon_PolygonPart(::google::protobuf::Arena* arena);
  ContourPolygon_PolygonPart(::google::protobuf::Arena* arena, const ContourPolygon_PolygonPart& from);
  ContourPolygon_PolygonPart(::google::protobuf::Arena* arena, ContourPolygon_PolygonPart&& from) noexcept
      : ContourPolygon_PolygonPart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = ContourPolygon_PolygonPart_Type;
  static constexpr Type Segment = ContourPolygon_PolygonPart_Type_Segment;
  static constexpr Type Arc = ContourPolygon_PolygonPart_Type_Arc;
  static inline bool Type_IsValid(int value) {
    return ContourPolygon_PolygonPart_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = ContourPolygon_PolygonPart_Type_Type_MIN;
  static constexpr Type Type_MAX = ContourPolygon_PolygonPart_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = ContourPolygon_PolygonPart_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return ContourPolygon_PolygonPart_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return ContourPolygon_PolygonPart_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return ContourPolygon_PolygonPart_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kEndXFieldNumber = 2,
    kEndYFieldNumber = 3,
    kTypeFieldNumber = 1,
    kIsClockwiseFieldNumber = 6,
    kXCenterFieldNumber = 4,
    kYCenterFieldNumber = 5,
  };
  // optional double endX = 2;
  bool has_endx() const;
  void clear_endx() ;
  double endx() const;
  void set_endx(double value);

  private:
  double _internal_endx() const;
  void _internal_set_endx(double value);

  public:
  // optional double endY = 3;
  bool has_endy() const;
  void clear_endy() ;
  double endy() const;
  void set_endy(double value);

  private:
  double _internal_endy() const;
  void _internal_set_endy(double value);

  public:
  // optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type type() const;
  void set_type(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type value);

  private:
  ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type value);

  public:
  // optional bool isClockwise = 6;
  bool has_isclockwise() const;
  void clear_isclockwise() ;
  bool isclockwise() const;
  void set_isclockwise(bool value);

  private:
  bool _internal_isclockwise() const;
  void _internal_set_isclockwise(bool value);

  public:
  // optional double xCenter = 4;
  bool has_xcenter() const;
  void clear_xcenter() ;
  double xcenter() const;
  void set_xcenter(double value);

  private:
  double _internal_xcenter() const;
  void _internal_set_xcenter(double value);

  public:
  // optional double yCenter = 5;
  bool has_ycenter() const;
  void clear_ycenter() ;
  double ycenter() const;
  void set_ycenter(double value);

  private:
  double _internal_ycenter() const;
  void _internal_set_ycenter(double value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ContourPolygon.PolygonPart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ContourPolygon_PolygonPart& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double endx_;
    double endy_;
    int type_;
    bool isclockwise_;
    double xcenter_;
    double ycenter_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT ContourPolygon final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.ContourPolygon) */ {
 public:
  inline ContourPolygon() : ContourPolygon(nullptr) {}
  ~ContourPolygon() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ContourPolygon* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ContourPolygon));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ContourPolygon(
      ::google::protobuf::internal::ConstantInitialized);

  inline ContourPolygon(const ContourPolygon& from) : ContourPolygon(nullptr, from) {}
  inline ContourPolygon(ContourPolygon&& from) noexcept
      : ContourPolygon(nullptr, std::move(from)) {}
  inline ContourPolygon& operator=(const ContourPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContourPolygon& operator=(ContourPolygon&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContourPolygon& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContourPolygon* internal_default_instance() {
    return reinterpret_cast<const ContourPolygon*>(
        &_ContourPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ContourPolygon& a, ContourPolygon& b) { a.Swap(&b); }
  inline void Swap(ContourPolygon* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContourPolygon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContourPolygon* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ContourPolygon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContourPolygon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ContourPolygon& from) { ContourPolygon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ContourPolygon* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.ContourPolygon"; }

 protected:
  explicit ContourPolygon(::google::protobuf::Arena* arena);
  ContourPolygon(::google::protobuf::Arena* arena, const ContourPolygon& from);
  ContourPolygon(::google::protobuf::Arena* arena, ContourPolygon&& from) noexcept
      : ContourPolygon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PolygonPart = ContourPolygon_PolygonPart;
  using Type = ContourPolygon_Type;
  static constexpr Type Island = ContourPolygon_Type_Island;
  static constexpr Type Hole = ContourPolygon_Type_Hole;
  static inline bool Type_IsValid(int value) {
    return ContourPolygon_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = ContourPolygon_Type_Type_MIN;
  static constexpr Type Type_MAX = ContourPolygon_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = ContourPolygon_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return ContourPolygon_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return ContourPolygon_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return ContourPolygon_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPolygonPartsFieldNumber = 4,
    kXStartFieldNumber = 2,
    kYStartFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
  int polygonparts_size() const;
  private:
  int _internal_polygonparts_size() const;

  public:
  void clear_polygonparts() ;
  ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart* mutable_polygonparts(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>* mutable_polygonparts();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>& _internal_polygonparts() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>* _internal_mutable_polygonparts();
  public:
  const ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart& polygonparts(int index) const;
  ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart* add_polygonparts();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>& polygonparts() const;
  // optional double xStart = 2;
  bool has_xstart() const;
  void clear_xstart() ;
  double xstart() const;
  void set_xstart(double value);

  private:
  double _internal_xstart() const;
  void _internal_set_xstart(double value);

  public:
  // optional double yStart = 3;
  bool has_ystart() const;
  void clear_ystart() ;
  double ystart() const;
  void set_ystart(double value);

  private:
  double _internal_ystart() const;
  void _internal_set_ystart(double value);

  public:
  // optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
  bool has_type() const;
  void clear_type() ;
  ::Odb::Lib::Protobuf::ContourPolygon_Type type() const;
  void set_type(::Odb::Lib::Protobuf::ContourPolygon_Type value);

  private:
  ::Odb::Lib::Protobuf::ContourPolygon_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::ContourPolygon_Type value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.ContourPolygon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ContourPolygon& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart > polygonparts_;
    double xstart_;
    double ystart_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PropertyRecord

// optional string name = 1;
inline bool PropertyRecord::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PropertyRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PropertyRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.PropertyRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PropertyRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.PropertyRecord.name)
}
inline std::string* PropertyRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.PropertyRecord.name)
  return _s;
}
inline const std::string& PropertyRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void PropertyRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PropertyRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PropertyRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.PropertyRecord.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void PropertyRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.PropertyRecord.name)
}

// optional string value = 2;
inline bool PropertyRecord::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void PropertyRecord::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PropertyRecord::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.PropertyRecord.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PropertyRecord::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.PropertyRecord.value)
}
inline std::string* PropertyRecord::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.PropertyRecord.value)
  return _s;
}
inline const std::string& PropertyRecord::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void PropertyRecord::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.value_.Set(value, GetArena());
}
inline std::string* PropertyRecord::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* PropertyRecord::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.PropertyRecord.value)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.value_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.value_.Set("", GetArena());
  }
  return released;
}
inline void PropertyRecord::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.PropertyRecord.value)
}

// repeated double floatValues = 3;
inline int PropertyRecord::_internal_floatvalues_size() const {
  return _internal_floatvalues().size();
}
inline int PropertyRecord::floatvalues_size() const {
  return _internal_floatvalues_size();
}
inline void PropertyRecord::clear_floatvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.floatvalues_.Clear();
}
inline double PropertyRecord::floatvalues(int index) const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.PropertyRecord.floatValues)
  return _internal_floatvalues().Get(index);
}
inline void PropertyRecord::set_floatvalues(int index, double value) {
  _internal_mutable_floatvalues()->Set(index, value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.PropertyRecord.floatValues)
}
inline void PropertyRecord::add_floatvalues(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_floatvalues()->Add(value);
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.PropertyRecord.floatValues)
}
inline const ::google::protobuf::RepeatedField<double>& PropertyRecord::floatvalues() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.PropertyRecord.floatValues)
  return _internal_floatvalues();
}
inline ::google::protobuf::RepeatedField<double>* PropertyRecord::mutable_floatvalues()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.PropertyRecord.floatValues)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_floatvalues();
}
inline const ::google::protobuf::RepeatedField<double>&
PropertyRecord::_internal_floatvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.floatvalues_;
}
inline ::google::protobuf::RepeatedField<double>* PropertyRecord::_internal_mutable_floatvalues() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.floatvalues_;
}

// -------------------------------------------------------------------

// ContourPolygon_PolygonPart

// optional .Odb.Lib.Protobuf.ContourPolygon.PolygonPart.Type type = 1;
inline bool ContourPolygon_PolygonPart::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.type)
  return _internal_type();
}
inline void ContourPolygon_PolygonPart::set_type(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.type)
}
inline ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type ContourPolygon_PolygonPart::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type>(_impl_.type_);
}
inline void ContourPolygon_PolygonPart::_internal_set_type(::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional double endX = 2;
inline bool ContourPolygon_PolygonPart::has_endx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_endx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double ContourPolygon_PolygonPart::endx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.endX)
  return _internal_endx();
}
inline void ContourPolygon_PolygonPart::set_endx(double value) {
  _internal_set_endx(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.endX)
}
inline double ContourPolygon_PolygonPart::_internal_endx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endx_;
}
inline void ContourPolygon_PolygonPart::_internal_set_endx(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endx_ = value;
}

// optional double endY = 3;
inline bool ContourPolygon_PolygonPart::has_endy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_endy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endy_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ContourPolygon_PolygonPart::endy() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.endY)
  return _internal_endy();
}
inline void ContourPolygon_PolygonPart::set_endy(double value) {
  _internal_set_endy(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.endY)
}
inline double ContourPolygon_PolygonPart::_internal_endy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endy_;
}
inline void ContourPolygon_PolygonPart::_internal_set_endy(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endy_ = value;
}

// optional double xCenter = 4;
inline bool ContourPolygon_PolygonPart::has_xcenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_xcenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double ContourPolygon_PolygonPart::xcenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.xCenter)
  return _internal_xcenter();
}
inline void ContourPolygon_PolygonPart::set_xcenter(double value) {
  _internal_set_xcenter(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.xCenter)
}
inline double ContourPolygon_PolygonPart::_internal_xcenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xcenter_;
}
inline void ContourPolygon_PolygonPart::_internal_set_xcenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xcenter_ = value;
}

// optional double yCenter = 5;
inline bool ContourPolygon_PolygonPart::has_ycenter() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_ycenter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double ContourPolygon_PolygonPart::ycenter() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.yCenter)
  return _internal_ycenter();
}
inline void ContourPolygon_PolygonPart::set_ycenter(double value) {
  _internal_set_ycenter(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.yCenter)
}
inline double ContourPolygon_PolygonPart::_internal_ycenter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ycenter_;
}
inline void ContourPolygon_PolygonPart::_internal_set_ycenter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ycenter_ = value;
}

// optional bool isClockwise = 6;
inline bool ContourPolygon_PolygonPart::has_isclockwise() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void ContourPolygon_PolygonPart::clear_isclockwise() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isclockwise_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool ContourPolygon_PolygonPart::isclockwise() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.isClockwise)
  return _internal_isclockwise();
}
inline void ContourPolygon_PolygonPart::set_isclockwise(bool value) {
  _internal_set_isclockwise(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.PolygonPart.isClockwise)
}
inline bool ContourPolygon_PolygonPart::_internal_isclockwise() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isclockwise_;
}
inline void ContourPolygon_PolygonPart::_internal_set_isclockwise(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isclockwise_ = value;
}

// -------------------------------------------------------------------

// ContourPolygon

// optional .Odb.Lib.Protobuf.ContourPolygon.Type type = 1;
inline bool ContourPolygon::has_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void ContourPolygon::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::Odb::Lib::Protobuf::ContourPolygon_Type ContourPolygon::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.type)
  return _internal_type();
}
inline void ContourPolygon::set_type(::Odb::Lib::Protobuf::ContourPolygon_Type value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.type)
}
inline ::Odb::Lib::Protobuf::ContourPolygon_Type ContourPolygon::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::ContourPolygon_Type>(_impl_.type_);
}
inline void ContourPolygon::_internal_set_type(::Odb::Lib::Protobuf::ContourPolygon_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// optional double xStart = 2;
inline bool ContourPolygon::has_xstart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ContourPolygon::clear_xstart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xstart_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double ContourPolygon::xstart() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.xStart)
  return _internal_xstart();
}
inline void ContourPolygon::set_xstart(double value) {
  _internal_set_xstart(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.xStart)
}
inline double ContourPolygon::_internal_xstart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.xstart_;
}
inline void ContourPolygon::_internal_set_xstart(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.xstart_ = value;
}

// optional double yStart = 3;
inline bool ContourPolygon::has_ystart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void ContourPolygon::clear_ystart() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ystart_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double ContourPolygon::ystart() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.yStart)
  return _internal_ystart();
}
inline void ContourPolygon::set_ystart(double value) {
  _internal_set_ystart(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.ContourPolygon.yStart)
}
inline double ContourPolygon::_internal_ystart() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ystart_;
}
inline void ContourPolygon::_internal_set_ystart(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ystart_ = value;
}

// repeated .Odb.Lib.Protobuf.ContourPolygon.PolygonPart polygonParts = 4;
inline int ContourPolygon::_internal_polygonparts_size() const {
  return _internal_polygonparts().size();
}
inline int ContourPolygon::polygonparts_size() const {
  return _internal_polygonparts_size();
}
inline void ContourPolygon::clear_polygonparts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.polygonparts_.Clear();
}
inline ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart* ContourPolygon::mutable_polygonparts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.ContourPolygon.polygonParts)
  return _internal_mutable_polygonparts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>* ContourPolygon::mutable_polygonparts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.ContourPolygon.polygonParts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_polygonparts();
}
inline const ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart& ContourPolygon::polygonparts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.ContourPolygon.polygonParts)
  return _internal_polygonparts().Get(index);
}
inline ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart* ContourPolygon::add_polygonparts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart* _add = _internal_mutable_polygonparts()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.ContourPolygon.polygonParts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>& ContourPolygon::polygonparts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.ContourPolygon.polygonParts)
  return _internal_polygonparts();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>&
ContourPolygon::_internal_polygonparts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.polygonparts_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart>*
ContourPolygon::_internal_mutable_polygonparts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.polygonparts_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type>() {
  return ::Odb::Lib::Protobuf::ContourPolygon_PolygonPart_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::ContourPolygon_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::ContourPolygon_Type>() {
  return ::Odb::Lib::Protobuf::ContourPolygon_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // common_2eproto_2epb_2eh
