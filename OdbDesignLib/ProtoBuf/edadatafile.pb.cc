// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: edadatafile.proto
// Protobuf C++ Version: 5.29.2

#include "edadatafile.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Odb {
namespace Lib {
namespace Protobuf {

inline constexpr EdaDataFile_PackageRecord_PinRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_Type >(0)},
        xcenter_{0},
        ycenter_{0},
        finishedholesize_{0},
        electricaltype_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_ElectricalType >(0)},
        mounttype_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord_MountType >(0)},
        id_{0u},
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecord::EdaDataFile_PackageRecord_PinRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecord_PinRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecord_PinRecordDefaultTypeInternal _EdaDataFile_PackageRecord_PinRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUseDefaultTypeInternal _EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse_default_instance_;

inline constexpr EdaDataFile_FeatureIdRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord_Type >(0)},
        layernumber_{0u},
        featurenumber_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_FeatureIdRecord::EdaDataFile_FeatureIdRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_FeatureIdRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_FeatureIdRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_FeatureIdRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_FeatureIdRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_FeatureIdRecordDefaultTypeInternal _EdaDataFile_FeatureIdRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse_default_instance_;

inline constexpr EdaDataFile_NetRecord_SubnetRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        featureidrecords_{},
        type_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_Type >(0)},
        filltype_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_FillType >(0)},
        cutouttype_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord_CutoutType >(0)},
        fillsize_{0},
        side_{static_cast< ::Odb::Lib::Protobuf::BoardSide >(0)},
        componentnumber_{0u},
        toeprintnumber_{0u},
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_SubnetRecord::EdaDataFile_NetRecord_SubnetRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_NetRecord_SubnetRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_NetRecord_SubnetRecordDefaultTypeInternal _EdaDataFile_NetRecord_SubnetRecord_default_instance_;

inline constexpr EdaDataFile_FeatureGroupRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        propertyrecords_{},
        featureidrecords_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_FeatureGroupRecord::EdaDataFile_FeatureGroupRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_FeatureGroupRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_FeatureGroupRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_FeatureGroupRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_FeatureGroupRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_FeatureGroupRecordDefaultTypeInternal _EdaDataFile_FeatureGroupRecord_default_instance_;

inline constexpr EdaDataFile_PackageRecord_OutlineRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contourpolygons_{},
        type_{static_cast< ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord_Type >(0)},
        lowerleftx_{0},
        lowerlefty_{0},
        width_{0},
        height_{0},
        xcenter_{0},
        ycenter_{0},
        halfside_{0},
        radius_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_OutlineRecord::EdaDataFile_PackageRecord_OutlineRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecord_OutlineRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecord_OutlineRecordDefaultTypeInternal _EdaDataFile_PackageRecord_OutlineRecord_default_instance_;

inline constexpr EdaDataFile_NetRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subnetrecords_{},
        propertyrecords_{},
        attributelookuptable_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attributesidstring_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_NetRecord::EdaDataFile_NetRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_NetRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_NetRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_NetRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_NetRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_NetRecordDefaultTypeInternal _EdaDataFile_NetRecord_default_instance_;

inline constexpr EdaDataFile_PackageRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pinrecords_{},
        pinrecordsbyname_{},
        propertyrecords_{},
        outlinerecords_{},
        attributelookuptable_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attributesidstring_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pitch_{0},
        xmin_{0},
        ymin_{0},
        xmax_{0},
        ymax_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecord::EdaDataFile_PackageRecord(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFile_PackageRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecordDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecordDefaultTypeInternal _EdaDataFile_PackageRecord_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_NetRecordsByNameEntry_DoNotUse::EdaDataFile_NetRecordsByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EdaDataFile_NetRecordsByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EdaDataFile_NetRecordsByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EdaDataFile_NetRecordsByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_NetRecordsByNameEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR EdaDataFile_PackageRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecordsByNameEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : EdaDataFile_PackageRecordsByNameEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : EdaDataFile_PackageRecordsByNameEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EdaDataFile_PackageRecordsByNameEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFile_PackageRecordsByNameEntry_DoNotUseDefaultTypeInternal _EdaDataFile_PackageRecordsByNameEntry_DoNotUse_default_instance_;

inline constexpr EdaDataFile::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        layernames_{},
        attributenames_{},
        attributetextvalues_{},
        netrecords_{},
        netrecordsbyname_{},
        packagerecords_{},
        packagerecordsbyname_{},
        propertyrecords_{},
        featuregrouprecords_{},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        units_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR EdaDataFile::EdaDataFile(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EdaDataFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EdaDataFileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EdaDataFileDefaultTypeInternal() {}
  union {
    EdaDataFile _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ODBDESIGN_EXPORT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EdaDataFileDefaultTypeInternal _EdaDataFile_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_edadatafile_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_edadatafile_2eproto = nullptr;
const ::uint32_t
    TableStruct_edadatafile_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord, _impl_.layernumber_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord, _impl_.featurenumber_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.featureidrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.filltype_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.cutouttype_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.fillsize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.side_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.componentnumber_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.toeprintnumber_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord, _impl_.index_),
        0,
        ~0u,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.attributesidstring_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.subnetrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.propertyrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecord, _impl_.attributelookuptable_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerleftx_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerlefty_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.xcenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.ycenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.halfside_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.radius_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord, _impl_.contourpolygons_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.xcenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.ycenter_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.finishedholesize_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.electricaltype_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.mounttype_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord, _impl_.index_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.xmin_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.ymin_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.xmax_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.ymax_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.attributesidstring_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.pinrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.pinrecordsbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.propertyrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.outlinerecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord, _impl_.attributelookuptable_),
        0,
        2,
        3,
        4,
        5,
        6,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord, _impl_.propertyrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord, _impl_.featureidrecords_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.units_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.layernames_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.attributenames_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.attributetextvalues_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.netrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.netrecordsbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.packagerecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.packagerecordsbyname_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.propertyrecords_),
        PROTOBUF_FIELD_OFFSET(::Odb::Lib::Protobuf::EdaDataFile, _impl_.featuregrouprecords_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord)},
        {14, 31, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord)},
        {40, 50, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse)},
        {52, 66, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_NetRecord)},
        {72, 82, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse)},
        {84, 94, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse)},
        {96, 114, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord)},
        {124, 141, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord)},
        {150, 170, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecord)},
        {182, 193, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord)},
        {196, 206, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse)},
        {208, 218, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse)},
        {220, 240, -1, sizeof(::Odb::Lib::Protobuf::EdaDataFile)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::Odb::Lib::Protobuf::_EdaDataFile_FeatureIdRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_NetRecord_SubnetRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_NetRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecord_OutlineRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecord_PinRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_FeatureGroupRecord_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_NetRecordsByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_PackageRecordsByNameEntry_DoNotUse_default_instance_._instance,
    &::Odb::Lib::Protobuf::_EdaDataFile_default_instance_._instance,
};
const char descriptor_table_protodef_edadatafile_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021edadatafile.proto\022\020Odb.Lib.Protobuf\032\014c"
    "ommon.proto\032\013enums.proto\"\266#\n\013EdaDataFile"
    "\022\021\n\004path\030\001 \001(\tH\000\210\001\001\022\022\n\005units\030\002 \001(\tH\001\210\001\001\022"
    "\023\n\006source\030\003 \001(\tH\002\210\001\001\022\022\n\nlayerNames\030\004 \003(\t"
    "\022\026\n\016attributeNames\030\005 \003(\t\022\033\n\023attributeTex"
    "tValues\030\006 \003(\t\022;\n\nnetRecords\030\007 \003(\0132\'.Odb."
    "Lib.Protobuf.EdaDataFile.NetRecord\022M\n\020ne"
    "tRecordsByName\030\010 \003(\01323.Odb.Lib.Protobuf."
    "EdaDataFile.NetRecordsByNameEntry\022C\n\016pac"
    "kageRecords\030\t \003(\0132+.Odb.Lib.Protobuf.Eda"
    "DataFile.PackageRecord\022U\n\024packageRecords"
    "ByName\030\n \003(\01327.Odb.Lib.Protobuf.EdaDataF"
    "ile.PackageRecordsByNameEntry\0229\n\017propert"
    "yRecords\030\013 \003(\0132 .Odb.Lib.Protobuf.Proper"
    "tyRecord\022M\n\023featureGroupRecords\030\014 \003(\01320."
    "Odb.Lib.Protobuf.EdaDataFile.FeatureGrou"
    "pRecord\032\345\001\n\017FeatureIdRecord\022E\n\004type\030\001 \001("
    "\01622.Odb.Lib.Protobuf.EdaDataFile.Feature"
    "IdRecord.TypeH\000\210\001\001\022\030\n\013layerNumber\030\002 \001(\rH"
    "\001\210\001\001\022\032\n\rfeatureNumber\030\003 \001(\rH\002\210\001\001\"*\n\004Type"
    "\022\n\n\006COPPER\020\000\022\014\n\010LAMINATE\020\001\022\010\n\004HOLE\020\002B\007\n\005"
    "_typeB\016\n\014_layerNumberB\020\n\016_featureNumber\032"
    "\227\t\n\tNetRecord\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022\037\n\022attr"
    "ibutesIdString\030\002 \001(\tH\001\210\001\001\022\022\n\005index\030\003 \001(\r"
    "H\002\210\001\001\022K\n\rsubnetRecords\030\004 \003(\01324.Odb.Lib.P"
    "rotobuf.EdaDataFile.NetRecord.SubnetReco"
    "rd\0229\n\017propertyRecords\030\005 \003(\0132 .Odb.Lib.Pr"
    "otobuf.PropertyRecord\022_\n\024attributeLookup"
    "Table\030\006 \003(\0132A.Odb.Lib.Protobuf.EdaDataFi"
    "le.NetRecord.AttributeLookupTableEntry\032\361"
    "\005\n\014SubnetRecord\022L\n\004type\030\001 \001(\01629.Odb.Lib."
    "Protobuf.EdaDataFile.NetRecord.SubnetRec"
    "ord.TypeH\000\210\001\001\022G\n\020featureIdRecords\030\002 \003(\0132"
    "-.Odb.Lib.Protobuf.EdaDataFile.FeatureId"
    "Record\022T\n\010fillType\030\003 \001(\0162=.Odb.Lib.Proto"
    "buf.EdaDataFile.NetRecord.SubnetRecord.F"
    "illTypeH\001\210\001\001\022X\n\ncutoutType\030\004 \001(\0162\?.Odb.L"
    "ib.Protobuf.EdaDataFile.NetRecord.Subnet"
    "Record.CutoutTypeH\002\210\001\001\022\025\n\010fillSize\030\005 \001(\002"
    "H\003\210\001\001\022.\n\004side\030\006 \001(\0162\033.Odb.Lib.Protobuf.B"
    "oardSideH\004\210\001\001\022\034\n\017componentNumber\030\007 \001(\rH\005"
    "\210\001\001\022\033\n\016toeprintNumber\030\010 \001(\rH\006\210\001\001\022\022\n\005inde"
    "x\030\t \001(\rH\007\210\001\001\"3\n\004Type\022\007\n\003VIA\020\000\022\t\n\005TRACE\020\001"
    "\022\t\n\005PLANE\020\002\022\014\n\010TOEPRINT\020\003\"\"\n\010FillType\022\t\n"
    "\005SOLID\020\000\022\013\n\007OUTLINE\020\001\"\?\n\nCutoutType\022\n\n\006C"
    "IRCLE\020\000\022\r\n\tRECTANGLE\020\001\022\013\n\007OCTAGON\020\002\022\t\n\005E"
    "XACT\020\003B\007\n\005_typeB\013\n\t_fillTypeB\r\n\013_cutoutT"
    "ypeB\013\n\t_fillSizeB\007\n\005_sideB\022\n\020_componentN"
    "umberB\021\n\017_toeprintNumberB\010\n\006_index\032;\n\031At"
    "tributeLookupTableEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
    "value\030\002 \001(\t:\0028\001B\007\n\005_nameB\025\n\023_attributesI"
    "dStringB\010\n\006_index\032\314\020\n\rPackageRecord\022\021\n\004n"
    "ame\030\001 \001(\tH\000\210\001\001\022\022\n\005pitch\030\002 \001(\002H\001\210\001\001\022\021\n\004xM"
    "in\030\003 \001(\002H\002\210\001\001\022\021\n\004yMin\030\004 \001(\002H\003\210\001\001\022\021\n\004xMax"
    "\030\005 \001(\002H\004\210\001\001\022\021\n\004yMax\030\006 \001(\002H\005\210\001\001\022\037\n\022attrib"
    "utesIdString\030\007 \001(\tH\006\210\001\001\022I\n\npinRecords\030\010 "
    "\003(\01325.Odb.Lib.Protobuf.EdaDataFile.Packa"
    "geRecord.PinRecord\022[\n\020pinRecordsByName\030\t"
    " \003(\0132A.Odb.Lib.Protobuf.EdaDataFile.Pack"
    "ageRecord.PinRecordsByNameEntry\0229\n\017prope"
    "rtyRecords\030\n \003(\0132 .Odb.Lib.Protobuf.Prop"
    "ertyRecord\022Q\n\016outlineRecords\030\013 \003(\01329.Odb"
    ".Lib.Protobuf.EdaDataFile.PackageRecord."
    "OutlineRecord\022c\n\024attributeLookupTable\030\014 "
    "\003(\0132E.Odb.Lib.Protobuf.EdaDataFile.Packa"
    "geRecord.AttributeLookupTableEntry\032n\n\025Pi"
    "nRecordsByNameEntry\022\013\n\003key\030\001 \001(\t\022D\n\005valu"
    "e\030\002 \001(\01325.Odb.Lib.Protobuf.EdaDataFile.P"
    "ackageRecord.PinRecord:\0028\001\032;\n\031AttributeL"
    "ookupTableEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
    "\001(\t:\0028\001\032\370\003\n\rOutlineRecord\022Q\n\004type\030\001 \001(\0162"
    ">.Odb.Lib.Protobuf.EdaDataFile.PackageRe"
    "cord.OutlineRecord.TypeH\000\210\001\001\022\027\n\nlowerLef"
    "tX\030\002 \001(\002H\001\210\001\001\022\027\n\nlowerLeftY\030\003 \001(\002H\002\210\001\001\022\022"
    "\n\005width\030\004 \001(\002H\003\210\001\001\022\023\n\006height\030\005 \001(\002H\004\210\001\001\022"
    "\024\n\007xCenter\030\006 \001(\002H\005\210\001\001\022\024\n\007yCenter\030\007 \001(\002H\006"
    "\210\001\001\022\025\n\010halfSide\030\010 \001(\002H\007\210\001\001\022\023\n\006radius\030\t \001"
    "(\002H\010\210\001\001\0229\n\017contourPolygons\030\n \003(\0132 .Odb.L"
    "ib.Protobuf.ContourPolygon\":\n\004Type\022\r\n\tRe"
    "ctangle\020\000\022\n\n\006Circle\020\001\022\n\n\006Square\020\002\022\013\n\007Con"
    "tour\020\003B\007\n\005_typeB\r\n\013_lowerLeftXB\r\n\013_lower"
    "LeftYB\010\n\006_widthB\t\n\007_heightB\n\n\010_xCenterB\n"
    "\n\010_yCenterB\013\n\t_halfSideB\t\n\007_radius\032\225\006\n\tP"
    "inRecord\022\021\n\004name\030\001 \001(\tH\000\210\001\001\022M\n\004type\030\002 \001("
    "\0162:.Odb.Lib.Protobuf.EdaDataFile.Package"
    "Record.PinRecord.TypeH\001\210\001\001\022\024\n\007xCenter\030\003 "
    "\001(\002H\002\210\001\001\022\024\n\007yCenter\030\004 \001(\002H\003\210\001\001\022\035\n\020finish"
    "edHoleSize\030\005 \001(\002H\004\210\001\001\022a\n\016electricalType\030"
    "\006 \001(\0162D.Odb.Lib.Protobuf.EdaDataFile.Pac"
    "kageRecord.PinRecord.ElectricalTypeH\005\210\001\001"
    "\022W\n\tmountType\030\007 \001(\0162\?.Odb.Lib.Protobuf.E"
    "daDataFile.PackageRecord.PinRecord.Mount"
    "TypeH\006\210\001\001\022\017\n\002id\030\010 \001(\rH\007\210\001\001\022\022\n\005index\030\t \001("
    "\rH\010\210\001\001\"/\n\004Type\022\017\n\013ThroughHole\020\000\022\t\n\005Blind"
    "\020\001\022\013\n\007Surface\020\002\"B\n\016ElectricalType\022\016\n\nEle"
    "ctrical\020\000\022\021\n\rNonElectrical\020\001\022\r\n\tUndefine"
    "d\020\002\"\223\001\n\tMountType\022\007\n\003Smt\020\000\022\025\n\021Recommende"
    "dSmtPad\020\001\022\022\n\016MT_ThroughHole\020\002\022\032\n\026Recomme"
    "ndedThroughHole\020\003\022\014\n\010PressFit\020\004\022\014\n\010NonBo"
    "ard\020\005\022\010\n\004Hole\020\006\022\020\n\014MT_Undefined\020\007B\007\n\005_na"
    "meB\007\n\005_typeB\n\n\010_xCenterB\n\n\010_yCenterB\023\n\021_"
    "finishedHoleSizeB\021\n\017_electricalTypeB\014\n\n_"
    "mountTypeB\005\n\003_idB\010\n\006_indexB\007\n\005_nameB\010\n\006_"
    "pitchB\007\n\005_xMinB\007\n\005_yMinB\007\n\005_xMaxB\007\n\005_yMa"
    "xB\025\n\023_attributesIdString\032\264\001\n\022FeatureGrou"
    "pRecord\022\021\n\004type\030\001 \001(\tH\000\210\001\001\0229\n\017propertyRe"
    "cords\030\002 \003(\0132 .Odb.Lib.Protobuf.PropertyR"
    "ecord\022G\n\020featureIdRecords\030\003 \003(\0132-.Odb.Li"
    "b.Protobuf.EdaDataFile.FeatureIdRecordB\007"
    "\n\005_type\032`\n\025NetRecordsByNameEntry\022\013\n\003key\030"
    "\001 \001(\t\0226\n\005value\030\002 \001(\0132\'.Odb.Lib.Protobuf."
    "EdaDataFile.NetRecord:\0028\001\032h\n\031PackageReco"
    "rdsByNameEntry\022\013\n\003key\030\001 \001(\t\022:\n\005value\030\002 \001"
    "(\0132+.Odb.Lib.Protobuf.EdaDataFile.Packag"
    "eRecord:\0028\001B\007\n\005_pathB\010\n\006_unitsB\t\n\007_sourc"
    "eb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_edadatafile_2eproto_deps[2] =
    {
        &::descriptor_table_common_2eproto,
        &::descriptor_table_enums_2eproto,
};
static ::absl::once_flag descriptor_table_edadatafile_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_edadatafile_2eproto = {
    false,
    false,
    4609,
    descriptor_table_protodef_edadatafile_2eproto,
    "edadatafile.proto",
    &descriptor_table_edadatafile_2eproto_once,
    descriptor_table_edadatafile_2eproto_deps,
    2,
    13,
    schemas,
    file_default_instances,
    TableStruct_edadatafile_2eproto::offsets,
    file_level_enum_descriptors_edadatafile_2eproto,
    file_level_service_descriptors_edadatafile_2eproto,
};
namespace Odb {
namespace Lib {
namespace Protobuf {
const ::google::protobuf::EnumDescriptor* EdaDataFile_FeatureIdRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_FeatureIdRecord_Type_internal_data_[] = {
    196608u, 0u, };
bool EdaDataFile_FeatureIdRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::COPPER;
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::LAMINATE;
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::HOLE;
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::Type_MIN;
constexpr EdaDataFile_FeatureIdRecord_Type EdaDataFile_FeatureIdRecord::Type_MAX;
constexpr int EdaDataFile_FeatureIdRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_NetRecord_SubnetRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_NetRecord_SubnetRecord_Type_internal_data_[] = {
    262144u, 0u, };
bool EdaDataFile_NetRecord_SubnetRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::VIA;
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::TRACE;
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::PLANE;
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::TOEPRINT;
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::Type_MIN;
constexpr EdaDataFile_NetRecord_SubnetRecord_Type EdaDataFile_NetRecord_SubnetRecord::Type_MAX;
constexpr int EdaDataFile_NetRecord_SubnetRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_NetRecord_SubnetRecord_FillType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_NetRecord_SubnetRecord_FillType_internal_data_[] = {
    131072u, 0u, };
bool EdaDataFile_NetRecord_SubnetRecord_FillType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::SOLID;
constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::OUTLINE;
constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::FillType_MIN;
constexpr EdaDataFile_NetRecord_SubnetRecord_FillType EdaDataFile_NetRecord_SubnetRecord::FillType_MAX;
constexpr int EdaDataFile_NetRecord_SubnetRecord::FillType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_NetRecord_SubnetRecord_CutoutType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_NetRecord_SubnetRecord_CutoutType_internal_data_[] = {
    262144u, 0u, };
bool EdaDataFile_NetRecord_SubnetRecord_CutoutType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::CIRCLE;
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::RECTANGLE;
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::OCTAGON;
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::EXACT;
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::CutoutType_MIN;
constexpr EdaDataFile_NetRecord_SubnetRecord_CutoutType EdaDataFile_NetRecord_SubnetRecord::CutoutType_MAX;
constexpr int EdaDataFile_NetRecord_SubnetRecord::CutoutType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_PackageRecord_OutlineRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_PackageRecord_OutlineRecord_Type_internal_data_[] = {
    262144u, 0u, };
bool EdaDataFile_PackageRecord_OutlineRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Rectangle;
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Circle;
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Square;
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Contour;
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Type_MIN;
constexpr EdaDataFile_PackageRecord_OutlineRecord_Type EdaDataFile_PackageRecord_OutlineRecord::Type_MAX;
constexpr int EdaDataFile_PackageRecord_OutlineRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_PackageRecord_PinRecord_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_PackageRecord_PinRecord_Type_internal_data_[] = {
    196608u, 0u, };
bool EdaDataFile_PackageRecord_PinRecord_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::ThroughHole;
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::Blind;
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::Surface;
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::Type_MIN;
constexpr EdaDataFile_PackageRecord_PinRecord_Type EdaDataFile_PackageRecord_PinRecord::Type_MAX;
constexpr int EdaDataFile_PackageRecord_PinRecord::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_PackageRecord_PinRecord_ElectricalType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_PackageRecord_PinRecord_ElectricalType_internal_data_[] = {
    196608u, 0u, };
bool EdaDataFile_PackageRecord_PinRecord_ElectricalType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::Electrical;
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::NonElectrical;
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::Undefined;
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::ElectricalType_MIN;
constexpr EdaDataFile_PackageRecord_PinRecord_ElectricalType EdaDataFile_PackageRecord_PinRecord::ElectricalType_MAX;
constexpr int EdaDataFile_PackageRecord_PinRecord::ElectricalType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* EdaDataFile_PackageRecord_PinRecord_MountType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_edadatafile_2eproto);
  return file_level_enum_descriptors_edadatafile_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t EdaDataFile_PackageRecord_PinRecord_MountType_internal_data_[] = {
    524288u, 0u, };
bool EdaDataFile_PackageRecord_PinRecord_MountType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::Smt;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::RecommendedSmtPad;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::MT_ThroughHole;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::RecommendedThroughHole;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::PressFit;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::NonBoard;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::Hole;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::MT_Undefined;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::MountType_MIN;
constexpr EdaDataFile_PackageRecord_PinRecord_MountType EdaDataFile_PackageRecord_PinRecord::MountType_MAX;
constexpr int EdaDataFile_PackageRecord_PinRecord::MountType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class EdaDataFile_FeatureIdRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_FeatureIdRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_._has_bits_);
};

EdaDataFile_FeatureIdRecord::EdaDataFile_FeatureIdRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
}
EdaDataFile_FeatureIdRecord::EdaDataFile_FeatureIdRecord(
    ::google::protobuf::Arena* arena, const EdaDataFile_FeatureIdRecord& from)
    : EdaDataFile_FeatureIdRecord(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_FeatureIdRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EdaDataFile_FeatureIdRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, featurenumber_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::featurenumber_));
}
EdaDataFile_FeatureIdRecord::~EdaDataFile_FeatureIdRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_FeatureIdRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_FeatureIdRecord& this_ = static_cast<EdaDataFile_FeatureIdRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_FeatureIdRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_FeatureIdRecord(arena);
}
constexpr auto EdaDataFile_FeatureIdRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EdaDataFile_FeatureIdRecord),
                                            alignof(EdaDataFile_FeatureIdRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_FeatureIdRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_FeatureIdRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_FeatureIdRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_FeatureIdRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_FeatureIdRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_FeatureIdRecord>(), &EdaDataFile_FeatureIdRecord::ByteSizeLong,
            &EdaDataFile_FeatureIdRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_FeatureIdRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_FeatureIdRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> EdaDataFile_FeatureIdRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_FeatureIdRecord, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.type_)}},
    // optional uint32 layerNumber = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_FeatureIdRecord, _impl_.layernumber_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.layernumber_)}},
    // optional uint32 featureNumber = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_FeatureIdRecord, _impl_.featurenumber_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.featurenumber_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional uint32 layerNumber = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.layernumber_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 featureNumber = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.featurenumber_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_FeatureIdRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.featurenumber_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.featurenumber_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_FeatureIdRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_FeatureIdRecord& this_ = static_cast<const EdaDataFile_FeatureIdRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_FeatureIdRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_FeatureIdRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional uint32 layerNumber = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_layernumber(), target);
          }

          // optional uint32 featureNumber = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_featurenumber(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_FeatureIdRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_FeatureIdRecord& this_ = static_cast<const EdaDataFile_FeatureIdRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_FeatureIdRecord::ByteSizeLong() const {
          const EdaDataFile_FeatureIdRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord.Type type = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional uint32 layerNumber = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_layernumber());
            }
            // optional uint32 featureNumber = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_featurenumber());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_FeatureIdRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_FeatureIdRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_FeatureIdRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.layernumber_ = from._impl_.layernumber_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.featurenumber_ = from._impl_.featurenumber_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_FeatureIdRecord::CopyFrom(const EdaDataFile_FeatureIdRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_FeatureIdRecord::InternalSwap(EdaDataFile_FeatureIdRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.featurenumber_)
      + sizeof(EdaDataFile_FeatureIdRecord::_impl_.featurenumber_)
      - PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureIdRecord, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata EdaDataFile_FeatureIdRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EdaDataFile_NetRecord_SubnetRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_NetRecord_SubnetRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_._has_bits_);
};

EdaDataFile_NetRecord_SubnetRecord::EdaDataFile_NetRecord_SubnetRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_NetRecord_SubnetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        featureidrecords_{visibility, arena, from.featureidrecords_} {}

EdaDataFile_NetRecord_SubnetRecord::EdaDataFile_NetRecord_SubnetRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_NetRecord_SubnetRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_NetRecord_SubnetRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_NetRecord_SubnetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        featureidrecords_{visibility, arena} {}

inline void EdaDataFile_NetRecord_SubnetRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::index_));
}
EdaDataFile_NetRecord_SubnetRecord::~EdaDataFile_NetRecord_SubnetRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_NetRecord_SubnetRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_NetRecord_SubnetRecord& this_ = static_cast<EdaDataFile_NetRecord_SubnetRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_NetRecord_SubnetRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_NetRecord_SubnetRecord(arena);
}
constexpr auto EdaDataFile_NetRecord_SubnetRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.featureidrecords_) +
          decltype(EdaDataFile_NetRecord_SubnetRecord::_impl_.featureidrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EdaDataFile_NetRecord_SubnetRecord), alignof(EdaDataFile_NetRecord_SubnetRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile_NetRecord_SubnetRecord::PlacementNew_,
                                 sizeof(EdaDataFile_NetRecord_SubnetRecord),
                                 alignof(EdaDataFile_NetRecord_SubnetRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_NetRecord_SubnetRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_NetRecord_SubnetRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_NetRecord_SubnetRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_NetRecord_SubnetRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_NetRecord_SubnetRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_NetRecord_SubnetRecord>(), &EdaDataFile_NetRecord_SubnetRecord::ByteSizeLong,
            &EdaDataFile_NetRecord_SubnetRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_NetRecord_SubnetRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_NetRecord_SubnetRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 0, 2> EdaDataFile_NetRecord_SubnetRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.type_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.featureidrecords_)}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.filltype_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.filltype_)}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.cutouttype_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.cutouttype_)}},
    // optional float fillSize = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 3, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.fillsize_)}},
    // optional .Odb.Lib.Protobuf.BoardSide side = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.side_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.side_)}},
    // optional uint32 componentNumber = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.componentnumber_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.componentnumber_)}},
    // optional uint32 toeprintNumber = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.toeprintnumber_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.toeprintnumber_)}},
    // optional uint32 index = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord_SubnetRecord, _impl_.index_), 7>(),
     {72, 7, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.featureidrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.filltype_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.cutouttype_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional float fillSize = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.fillsize_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .Odb.Lib.Protobuf.BoardSide side = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.side_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional uint32 componentNumber = 7;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.componentnumber_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 toeprintNumber = 8;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.toeprintnumber_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 index = 9;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.index_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_NetRecord_SubnetRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.featureidrecords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.index_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.index_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_NetRecord_SubnetRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_NetRecord_SubnetRecord& this_ = static_cast<const EdaDataFile_NetRecord_SubnetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_NetRecord_SubnetRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_NetRecord_SubnetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_featureidrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_featureidrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_filltype(), target);
          }

          // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_cutouttype(), target);
          }

          // optional float fillSize = 5;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_fillsize(), target);
          }

          // optional .Odb.Lib.Protobuf.BoardSide side = 6;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_side(), target);
          }

          // optional uint32 componentNumber = 7;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_componentnumber(), target);
          }

          // optional uint32 toeprintNumber = 8;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_toeprintnumber(), target);
          }

          // optional uint32 index = 9;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_NetRecord_SubnetRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_NetRecord_SubnetRecord& this_ = static_cast<const EdaDataFile_NetRecord_SubnetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_NetRecord_SubnetRecord::ByteSizeLong() const {
          const EdaDataFile_NetRecord_SubnetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 2;
            {
              total_size += 1UL * this_._internal_featureidrecords_size();
              for (const auto& msg : this_._internal_featureidrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.Type type = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.FillType fillType = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_filltype());
            }
            // optional .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord.CutoutType cutoutType = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_cutouttype());
            }
            // optional float fillSize = 5;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional .Odb.Lib.Protobuf.BoardSide side = 6;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_side());
            }
            // optional uint32 componentNumber = 7;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_componentnumber());
            }
            // optional uint32 toeprintNumber = 8;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_toeprintnumber());
            }
            // optional uint32 index = 9;
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_NetRecord_SubnetRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_NetRecord_SubnetRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_NetRecord_SubnetRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_featureidrecords()->MergeFrom(
      from._internal_featureidrecords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.filltype_ = from._impl_.filltype_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.cutouttype_ = from._impl_.cutouttype_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.fillsize_ = from._impl_.fillsize_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.side_ = from._impl_.side_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.componentnumber_ = from._impl_.componentnumber_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.toeprintnumber_ = from._impl_.toeprintnumber_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_NetRecord_SubnetRecord::CopyFrom(const EdaDataFile_NetRecord_SubnetRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_NetRecord_SubnetRecord::InternalSwap(EdaDataFile_NetRecord_SubnetRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.featureidrecords_.InternalSwap(&other->_impl_.featureidrecords_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.index_)
      + sizeof(EdaDataFile_NetRecord_SubnetRecord::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_SubnetRecord, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata EdaDataFile_NetRecord_SubnetRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse() : SuperType() {}
              EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse(arena);
              }
              constexpr auto EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse),
                                                          alignof(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_edadatafile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 81, 2> EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\100\3\5\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.NetRecord.AttributeLookupTableEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EdaDataFile_NetRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_NetRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_._has_bits_);
};

void EdaDataFile_NetRecord::clear_propertyrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.propertyrecords_.Clear();
}
EdaDataFile_NetRecord::EdaDataFile_NetRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_NetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_NetRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subnetrecords_{visibility, arena, from.subnetrecords_},
        propertyrecords_{visibility, arena, from.propertyrecords_},
        attributelookuptable_{visibility, arena, from.attributelookuptable_},
        name_(arena, from.name_),
        attributesidstring_(arena, from.attributesidstring_) {}

EdaDataFile_NetRecord::EdaDataFile_NetRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_NetRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_NetRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_NetRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subnetrecords_{visibility, arena},
        propertyrecords_{visibility, arena},
        attributelookuptable_{visibility, arena},
        name_(arena),
        attributesidstring_(arena) {}

inline void EdaDataFile_NetRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
EdaDataFile_NetRecord::~EdaDataFile_NetRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_NetRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_NetRecord& this_ = static_cast<EdaDataFile_NetRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.attributesidstring_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_NetRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_NetRecord(arena);
}
constexpr auto EdaDataFile_NetRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.subnetrecords_) +
          decltype(EdaDataFile_NetRecord::_impl_.subnetrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.propertyrecords_) +
          decltype(EdaDataFile_NetRecord::_impl_.propertyrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.attributelookuptable_) +
          decltype(EdaDataFile_NetRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.attributelookuptable_) +
          decltype(EdaDataFile_NetRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EdaDataFile_NetRecord), alignof(EdaDataFile_NetRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile_NetRecord::PlacementNew_,
                                 sizeof(EdaDataFile_NetRecord),
                                 alignof(EdaDataFile_NetRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_NetRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_NetRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_NetRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_NetRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_NetRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_NetRecord>(), &EdaDataFile_NetRecord::ByteSizeLong,
            &EdaDataFile_NetRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_NetRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_NetRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 89, 2> EdaDataFile_NetRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.name_)}},
    // optional string attributesIdString = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.attributesidstring_)}},
    // optional uint32 index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_NetRecord, _impl_.index_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.index_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.subnetrecords_)}},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.propertyrecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string attributesIdString = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.attributesidstring_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional uint32 index = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.index_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.subnetrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.propertyrecords_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> attributeLookupTable = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecord, _impl_.attributelookuptable_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord_SubnetRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::PropertyRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EdaDataFile_NetRecord()._impl_.attributelookuptable_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\46\4\22\0\0\0\24\0"
    "Odb.Lib.Protobuf.EdaDataFile.NetRecord"
    "name"
    "attributesIdString"
    "attributeLookupTable"
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_NetRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subnetrecords_.Clear();
  _impl_.propertyrecords_.Clear();
  _impl_.attributelookuptable_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.attributesidstring_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_NetRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_NetRecord& this_ = static_cast<const EdaDataFile_NetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_NetRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_NetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string attributesIdString = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_attributesidstring();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributesIdString");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional uint32 index = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_index(), target);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_subnetrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_subnetrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_propertyrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_propertyrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> attributeLookupTable = 6;
          if (!this_._internal_attributelookuptable().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_attributelookuptable();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    6, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.NetRecord.attributeLookupTable");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_NetRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_NetRecord& this_ = static_cast<const EdaDataFile_NetRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_NetRecord::ByteSizeLong() const {
          const EdaDataFile_NetRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord.SubnetRecord subnetRecords = 4;
            {
              total_size += 1UL * this_._internal_subnetrecords_size();
              for (const auto& msg : this_._internal_subnetrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 5;
            {
              total_size += 1UL * this_._internal_propertyrecords_size();
              for (const auto& msg : this_._internal_propertyrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> attributeLookupTable = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributelookuptable_size());
              for (const auto& entry : this_._internal_attributelookuptable()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional string attributesIdString = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_attributesidstring());
            }
            // optional uint32 index = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_NetRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_NetRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_NetRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subnetrecords()->MergeFrom(
      from._internal_subnetrecords());
  _this->_internal_mutable_propertyrecords()->MergeFrom(
      from._internal_propertyrecords());
  _this->_impl_.attributelookuptable_.MergeFrom(from._impl_.attributelookuptable_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_attributesidstring(from._internal_attributesidstring());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.index_ = from._impl_.index_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_NetRecord::CopyFrom(const EdaDataFile_NetRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.NetRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_NetRecord::InternalSwap(EdaDataFile_NetRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.subnetrecords_.InternalSwap(&other->_impl_.subnetrecords_);
  _impl_.propertyrecords_.InternalSwap(&other->_impl_.propertyrecords_);
  _impl_.attributelookuptable_.InternalSwap(&other->_impl_.attributelookuptable_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.attributesidstring_, &other->_impl_.attributesidstring_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata EdaDataFile_NetRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse() : SuperType() {}
              EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse(arena);
              }
              constexpr auto EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse),
                                                          alignof(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_edadatafile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 76, 2> EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord value = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecordsByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>()},
  }}, {{
    "\100\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecordsByNameEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse() : SuperType() {}
              EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse(arena);
              }
              constexpr auto EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse),
                                                          alignof(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_edadatafile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 85, 2> EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_AttributeLookupTableEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\104\3\5\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.AttributeLookupTableEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class EdaDataFile_PackageRecord_OutlineRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_PackageRecord_OutlineRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_._has_bits_);
};

void EdaDataFile_PackageRecord_OutlineRecord::clear_contourpolygons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contourpolygons_.Clear();
}
EdaDataFile_PackageRecord_OutlineRecord::EdaDataFile_PackageRecord_OutlineRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord_OutlineRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contourpolygons_{visibility, arena, from.contourpolygons_} {}

EdaDataFile_PackageRecord_OutlineRecord::EdaDataFile_PackageRecord_OutlineRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_PackageRecord_OutlineRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_PackageRecord_OutlineRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, radius_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::radius_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord_OutlineRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contourpolygons_{visibility, arena} {}

inline void EdaDataFile_PackageRecord_OutlineRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, radius_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::radius_));
}
EdaDataFile_PackageRecord_OutlineRecord::~EdaDataFile_PackageRecord_OutlineRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_PackageRecord_OutlineRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_PackageRecord_OutlineRecord& this_ = static_cast<EdaDataFile_PackageRecord_OutlineRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_PackageRecord_OutlineRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_PackageRecord_OutlineRecord(arena);
}
constexpr auto EdaDataFile_PackageRecord_OutlineRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.contourpolygons_) +
          decltype(EdaDataFile_PackageRecord_OutlineRecord::_impl_.contourpolygons_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EdaDataFile_PackageRecord_OutlineRecord), alignof(EdaDataFile_PackageRecord_OutlineRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile_PackageRecord_OutlineRecord::PlacementNew_,
                                 sizeof(EdaDataFile_PackageRecord_OutlineRecord),
                                 alignof(EdaDataFile_PackageRecord_OutlineRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecord_OutlineRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_PackageRecord_OutlineRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_PackageRecord_OutlineRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecord_OutlineRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_PackageRecord_OutlineRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_PackageRecord_OutlineRecord>(), &EdaDataFile_PackageRecord_OutlineRecord::ByteSizeLong,
            &EdaDataFile_PackageRecord_OutlineRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_PackageRecord_OutlineRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecord_OutlineRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 0, 2> EdaDataFile_PackageRecord_OutlineRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_OutlineRecord, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.type_)}},
    // optional float lowerLeftX = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerleftx_)}},
    // optional float lowerLeftY = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerlefty_)}},
    // optional float width = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.width_)}},
    // optional float height = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.height_)}},
    // optional float xCenter = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.xcenter_)}},
    // optional float yCenter = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.ycenter_)}},
    // optional float halfSide = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.halfside_)}},
    // optional float radius = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 8, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.radius_)}},
    // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.contourpolygons_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional float lowerLeftX = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerleftx_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float lowerLeftY = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.lowerlefty_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float width = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.width_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float height = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.height_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float xCenter = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.xcenter_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yCenter = 7;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.ycenter_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float halfSide = 8;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.halfside_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float radius = 9;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.radius_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.contourpolygons_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::ContourPolygon>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_PackageRecord_OutlineRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contourpolygons_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.halfside_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.halfside_));
  }
  _impl_.radius_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_PackageRecord_OutlineRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_PackageRecord_OutlineRecord& this_ = static_cast<const EdaDataFile_PackageRecord_OutlineRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_PackageRecord_OutlineRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_PackageRecord_OutlineRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // optional float lowerLeftX = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_lowerleftx(), target);
          }

          // optional float lowerLeftY = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_lowerlefty(), target);
          }

          // optional float width = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_width(), target);
          }

          // optional float height = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_height(), target);
          }

          // optional float xCenter = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_xcenter(), target);
          }

          // optional float yCenter = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                7, this_._internal_ycenter(), target);
          }

          // optional float halfSide = 8;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_halfside(), target);
          }

          // optional float radius = 9;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_radius(), target);
          }

          // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contourpolygons_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contourpolygons().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_PackageRecord_OutlineRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_PackageRecord_OutlineRecord& this_ = static_cast<const EdaDataFile_PackageRecord_OutlineRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_PackageRecord_OutlineRecord::ByteSizeLong() const {
          const EdaDataFile_PackageRecord_OutlineRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.ContourPolygon contourPolygons = 10;
            {
              total_size += 1UL * this_._internal_contourpolygons_size();
              for (const auto& msg : this_._internal_contourpolygons()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord.Type type = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional float lowerLeftX = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // optional float lowerLeftY = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float width = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float height = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional float xCenter = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 5;
            }
            // optional float yCenter = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
            // optional float halfSide = 8;
            if (cached_has_bits & 0x00000080u) {
              total_size += 5;
            }
          }
           {
            // optional float radius = 9;
            if (cached_has_bits & 0x00000100u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_PackageRecord_OutlineRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_PackageRecord_OutlineRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_PackageRecord_OutlineRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contourpolygons()->MergeFrom(
      from._internal_contourpolygons());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.lowerleftx_ = from._impl_.lowerleftx_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.lowerlefty_ = from._impl_.lowerlefty_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.xcenter_ = from._impl_.xcenter_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ycenter_ = from._impl_.ycenter_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.halfside_ = from._impl_.halfside_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.radius_ = from._impl_.radius_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_PackageRecord_OutlineRecord::CopyFrom(const EdaDataFile_PackageRecord_OutlineRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_PackageRecord_OutlineRecord::InternalSwap(EdaDataFile_PackageRecord_OutlineRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contourpolygons_.InternalSwap(&other->_impl_.contourpolygons_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.radius_)
      + sizeof(EdaDataFile_PackageRecord_OutlineRecord::_impl_.radius_)
      - PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_OutlineRecord, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata EdaDataFile_PackageRecord_OutlineRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EdaDataFile_PackageRecord_PinRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_PackageRecord_PinRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_._has_bits_);
};

EdaDataFile_PackageRecord_PinRecord::EdaDataFile_PackageRecord_PinRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord_PinRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_) {}

EdaDataFile_PackageRecord_PinRecord::EdaDataFile_PackageRecord_PinRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_PackageRecord_PinRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_PackageRecord_PinRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord_PinRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena) {}

inline void EdaDataFile_PackageRecord_PinRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::index_));
}
EdaDataFile_PackageRecord_PinRecord::~EdaDataFile_PackageRecord_PinRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_PackageRecord_PinRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_PackageRecord_PinRecord& this_ = static_cast<EdaDataFile_PackageRecord_PinRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_PackageRecord_PinRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_PackageRecord_PinRecord(arena);
}
constexpr auto EdaDataFile_PackageRecord_PinRecord::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_PackageRecord_PinRecord),
                                            alignof(EdaDataFile_PackageRecord_PinRecord));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecord_PinRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_PackageRecord_PinRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_PackageRecord_PinRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecord_PinRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_PackageRecord_PinRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_PackageRecord_PinRecord>(), &EdaDataFile_PackageRecord_PinRecord::ByteSizeLong,
            &EdaDataFile_PackageRecord_PinRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_PackageRecord_PinRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecord_PinRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 73, 2> EdaDataFile_PackageRecord_PinRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.name_)}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_PinRecord, _impl_.type_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.type_)}},
    // optional float xCenter = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.xcenter_)}},
    // optional float yCenter = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.ycenter_)}},
    // optional float finishedHoleSize = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.finishedholesize_)}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_PinRecord, _impl_.electricaltype_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.electricaltype_)}},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_PinRecord, _impl_.mounttype_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.mounttype_)}},
    // optional uint32 id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_PinRecord, _impl_.id_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.id_)}},
    // optional uint32 index = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EdaDataFile_PackageRecord_PinRecord, _impl_.index_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.index_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional float xCenter = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.xcenter_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yCenter = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.ycenter_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float finishedHoleSize = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.finishedholesize_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.electricaltype_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.mounttype_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional uint32 id = 8;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.id_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 index = 9;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.index_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\64\4\0\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord"
    "name"
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_PackageRecord_PinRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.id_));
  }
  _impl_.index_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_PackageRecord_PinRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_PackageRecord_PinRecord& this_ = static_cast<const EdaDataFile_PackageRecord_PinRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_PackageRecord_PinRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_PackageRecord_PinRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          // optional float xCenter = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_xcenter(), target);
          }

          // optional float yCenter = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_ycenter(), target);
          }

          // optional float finishedHoleSize = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_finishedholesize(), target);
          }

          // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_electricaltype(), target);
          }

          // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                7, this_._internal_mounttype(), target);
          }

          // optional uint32 id = 8;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_id(), target);
          }

          // optional uint32 index = 9;
          if (cached_has_bits & 0x00000100u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                9, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_PackageRecord_PinRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_PackageRecord_PinRecord& this_ = static_cast<const EdaDataFile_PackageRecord_PinRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_PackageRecord_PinRecord::ByteSizeLong() const {
          const EdaDataFile_PackageRecord_PinRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.Type type = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // optional float xCenter = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float yCenter = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float finishedHoleSize = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.ElectricalType electricalType = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_electricaltype());
            }
            // optional .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord.MountType mountType = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_mounttype());
            }
            // optional uint32 id = 8;
            if (cached_has_bits & 0x00000080u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
           {
            // optional uint32 index = 9;
            if (cached_has_bits & 0x00000100u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_PackageRecord_PinRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_PackageRecord_PinRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_PackageRecord_PinRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.xcenter_ = from._impl_.xcenter_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.ycenter_ = from._impl_.ycenter_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.finishedholesize_ = from._impl_.finishedholesize_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.electricaltype_ = from._impl_.electricaltype_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.mounttype_ = from._impl_.mounttype_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_PackageRecord_PinRecord::CopyFrom(const EdaDataFile_PackageRecord_PinRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_PackageRecord_PinRecord::InternalSwap(EdaDataFile_PackageRecord_PinRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.index_)
      + sizeof(EdaDataFile_PackageRecord_PinRecord::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord_PinRecord, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata EdaDataFile_PackageRecord_PinRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EdaDataFile_PackageRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_PackageRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_._has_bits_);
};

void EdaDataFile_PackageRecord::clear_propertyrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.propertyrecords_.Clear();
}
EdaDataFile_PackageRecord::EdaDataFile_PackageRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        pinrecords_{visibility, arena, from.pinrecords_},
        pinrecordsbyname_{visibility, arena, from.pinrecordsbyname_},
        propertyrecords_{visibility, arena, from.propertyrecords_},
        outlinerecords_{visibility, arena, from.outlinerecords_},
        attributelookuptable_{visibility, arena, from.attributelookuptable_},
        name_(arena, from.name_),
        attributesidstring_(arena, from.attributesidstring_) {}

EdaDataFile_PackageRecord::EdaDataFile_PackageRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_PackageRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_PackageRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pitch_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pitch_),
           offsetof(Impl_, ymax_) -
               offsetof(Impl_, pitch_) +
               sizeof(Impl_::ymax_));

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_PackageRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        pinrecords_{visibility, arena},
        pinrecordsbyname_{visibility, arena},
        propertyrecords_{visibility, arena},
        outlinerecords_{visibility, arena},
        attributelookuptable_{visibility, arena},
        name_(arena),
        attributesidstring_(arena) {}

inline void EdaDataFile_PackageRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pitch_),
           0,
           offsetof(Impl_, ymax_) -
               offsetof(Impl_, pitch_) +
               sizeof(Impl_::ymax_));
}
EdaDataFile_PackageRecord::~EdaDataFile_PackageRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_PackageRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_PackageRecord& this_ = static_cast<EdaDataFile_PackageRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.attributesidstring_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_PackageRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_PackageRecord(arena);
}
constexpr auto EdaDataFile_PackageRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecords_) +
          decltype(EdaDataFile_PackageRecord::_impl_.pinrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecordsbyname_) +
          decltype(EdaDataFile_PackageRecord::_impl_.pinrecordsbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecordsbyname_) +
          decltype(EdaDataFile_PackageRecord::_impl_.pinrecordsbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.propertyrecords_) +
          decltype(EdaDataFile_PackageRecord::_impl_.propertyrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.outlinerecords_) +
          decltype(EdaDataFile_PackageRecord::_impl_.outlinerecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.attributelookuptable_) +
          decltype(EdaDataFile_PackageRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.attributelookuptable_) +
          decltype(EdaDataFile_PackageRecord::_impl_.attributelookuptable_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EdaDataFile_PackageRecord), alignof(EdaDataFile_PackageRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile_PackageRecord::PlacementNew_,
                                 sizeof(EdaDataFile_PackageRecord),
                                 alignof(EdaDataFile_PackageRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_PackageRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_PackageRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_PackageRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_PackageRecord>(), &EdaDataFile_PackageRecord::ByteSizeLong,
            &EdaDataFile_PackageRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_PackageRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 6, 117, 2> EdaDataFile_PackageRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.name_)}},
    // optional float pitch = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pitch_)}},
    // optional float xMin = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 3, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.xmin_)}},
    // optional float yMin = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 4, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.ymin_)}},
    // optional float xMax = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 5, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.xmax_)}},
    // optional float yMax = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 6, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.ymax_)}},
    // optional string attributesIdString = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.attributesidstring_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.propertyrecords_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 2, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.outlinerecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional float pitch = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pitch_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float xMin = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.xmin_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yMin = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.ymin_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float xMax = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.xmax_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float yMax = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.ymax_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional string attributesIdString = 7;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.attributesidstring_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord> pinRecordsByName = 9;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pinrecordsbyname_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.propertyrecords_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.outlinerecords_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> attributeLookupTable = 12;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.attributelookuptable_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::PropertyRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_OutlineRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EdaDataFile_PackageRecord()._impl_.pinrecordsbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EdaDataFile_PackageRecord()._impl_.attributelookuptable_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\52\4\0\0\0\0\0\22\0\20\0\0\24\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.PackageRecord"
    "name"
    "attributesIdString"
    "pinRecordsByName"
    "attributeLookupTable"
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_PackageRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pinrecords_.Clear();
  _impl_.pinrecordsbyname_.Clear();
  _impl_.propertyrecords_.Clear();
  _impl_.outlinerecords_.Clear();
  _impl_.attributelookuptable_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.attributesidstring_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&_impl_.pitch_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ymax_) -
        reinterpret_cast<char*>(&_impl_.pitch_)) + sizeof(_impl_.ymax_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_PackageRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_PackageRecord& this_ = static_cast<const EdaDataFile_PackageRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_PackageRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_PackageRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional float pitch = 2;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_pitch(), target);
          }

          // optional float xMin = 3;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_xmin(), target);
          }

          // optional float yMin = 4;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_ymin(), target);
          }

          // optional float xMax = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_xmax(), target);
          }

          // optional float yMax = 6;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                6, this_._internal_ymax(), target);
          }

          // optional string attributesIdString = 7;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_attributesidstring();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributesIdString");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pinrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pinrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord> pinRecordsByName = 9;
          if (!this_._internal_pinrecordsbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_pinrecordsbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecordsByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    9, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.pinRecordsByName");
              }
            }
          }

          // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_propertyrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_propertyrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_outlinerecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_outlinerecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, string> attributeLookupTable = 12;
          if (!this_._internal_attributelookuptable().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_attributelookuptable();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    12, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.PackageRecord.attributeLookupTable");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_PackageRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_PackageRecord& this_ = static_cast<const EdaDataFile_PackageRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_PackageRecord::ByteSizeLong() const {
          const EdaDataFile_PackageRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord pinRecords = 8;
            {
              total_size += 1UL * this_._internal_pinrecords_size();
              for (const auto& msg : this_._internal_pinrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.PinRecord> pinRecordsByName = 9;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_pinrecordsbyname_size());
              for (const auto& entry : this_._internal_pinrecordsbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord_PinRecord,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 10;
            {
              total_size += 1UL * this_._internal_propertyrecords_size();
              for (const auto& msg : this_._internal_propertyrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord.OutlineRecord outlineRecords = 11;
            {
              total_size += 1UL * this_._internal_outlinerecords_size();
              for (const auto& msg : this_._internal_outlinerecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, string> attributeLookupTable = 12;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributelookuptable_size());
              for (const auto& entry : this_._internal_attributelookuptable()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional string name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // optional string attributesIdString = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_attributesidstring());
            }
            // optional float pitch = 2;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float xMin = 3;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float yMin = 4;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
            // optional float xMax = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += 5;
            }
            // optional float yMax = 6;
            if (cached_has_bits & 0x00000040u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_PackageRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_PackageRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_PackageRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pinrecords()->MergeFrom(
      from._internal_pinrecords());
  _this->_impl_.pinrecordsbyname_.MergeFrom(from._impl_.pinrecordsbyname_);
  _this->_internal_mutable_propertyrecords()->MergeFrom(
      from._internal_propertyrecords());
  _this->_internal_mutable_outlinerecords()->MergeFrom(
      from._internal_outlinerecords());
  _this->_impl_.attributelookuptable_.MergeFrom(from._impl_.attributelookuptable_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_attributesidstring(from._internal_attributesidstring());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pitch_ = from._impl_.pitch_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.xmin_ = from._impl_.xmin_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.ymin_ = from._impl_.ymin_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.xmax_ = from._impl_.xmax_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ymax_ = from._impl_.ymax_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_PackageRecord::CopyFrom(const EdaDataFile_PackageRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.PackageRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_PackageRecord::InternalSwap(EdaDataFile_PackageRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.pinrecords_.InternalSwap(&other->_impl_.pinrecords_);
  _impl_.pinrecordsbyname_.InternalSwap(&other->_impl_.pinrecordsbyname_);
  _impl_.propertyrecords_.InternalSwap(&other->_impl_.propertyrecords_);
  _impl_.outlinerecords_.InternalSwap(&other->_impl_.outlinerecords_);
  _impl_.attributelookuptable_.InternalSwap(&other->_impl_.attributelookuptable_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.attributesidstring_, &other->_impl_.attributesidstring_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.ymax_)
      + sizeof(EdaDataFile_PackageRecord::_impl_.ymax_)
      - PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecord, _impl_.pitch_)>(
          reinterpret_cast<char*>(&_impl_.pitch_),
          reinterpret_cast<char*>(&other->_impl_.pitch_));
}

::google::protobuf::Metadata EdaDataFile_PackageRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EdaDataFile_FeatureGroupRecord::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile_FeatureGroupRecord>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_._has_bits_);
};

void EdaDataFile_FeatureGroupRecord::clear_propertyrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.propertyrecords_.Clear();
}
EdaDataFile_FeatureGroupRecord::EdaDataFile_FeatureGroupRecord(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_FeatureGroupRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        propertyrecords_{visibility, arena, from.propertyrecords_},
        featureidrecords_{visibility, arena, from.featureidrecords_},
        type_(arena, from.type_) {}

EdaDataFile_FeatureGroupRecord::EdaDataFile_FeatureGroupRecord(
    ::google::protobuf::Arena* arena,
    const EdaDataFile_FeatureGroupRecord& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile_FeatureGroupRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile_FeatureGroupRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        propertyrecords_{visibility, arena},
        featureidrecords_{visibility, arena},
        type_(arena) {}

inline void EdaDataFile_FeatureGroupRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EdaDataFile_FeatureGroupRecord::~EdaDataFile_FeatureGroupRecord() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
  SharedDtor(*this);
}
inline void EdaDataFile_FeatureGroupRecord::SharedDtor(MessageLite& self) {
  EdaDataFile_FeatureGroupRecord& this_ = static_cast<EdaDataFile_FeatureGroupRecord&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EdaDataFile_FeatureGroupRecord::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile_FeatureGroupRecord(arena);
}
constexpr auto EdaDataFile_FeatureGroupRecord::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.propertyrecords_) +
          decltype(EdaDataFile_FeatureGroupRecord::_impl_.propertyrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.featureidrecords_) +
          decltype(EdaDataFile_FeatureGroupRecord::_impl_.featureidrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EdaDataFile_FeatureGroupRecord), alignof(EdaDataFile_FeatureGroupRecord), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile_FeatureGroupRecord::PlacementNew_,
                                 sizeof(EdaDataFile_FeatureGroupRecord),
                                 alignof(EdaDataFile_FeatureGroupRecord));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile_FeatureGroupRecord::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_FeatureGroupRecord_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile_FeatureGroupRecord::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile_FeatureGroupRecord>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile_FeatureGroupRecord::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile_FeatureGroupRecord>(), &EdaDataFile_FeatureGroupRecord::ByteSizeLong,
            &EdaDataFile_FeatureGroupRecord::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_._cached_size_),
        false,
    },
    &EdaDataFile_FeatureGroupRecord::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile_FeatureGroupRecord::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 60, 2> EdaDataFile_FeatureGroupRecord::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.type_)}},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.propertyrecords_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.featureidrecords_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string type = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.propertyrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_FeatureGroupRecord, _impl_.featureidrecords_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::PropertyRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_FeatureIdRecord>()},
  }}, {{
    "\57\4\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord"
    "type"
  }},
};

PROTOBUF_NOINLINE void EdaDataFile_FeatureGroupRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.propertyrecords_.Clear();
  _impl_.featureidrecords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.type_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile_FeatureGroupRecord::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile_FeatureGroupRecord& this_ = static_cast<const EdaDataFile_FeatureGroupRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile_FeatureGroupRecord::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile_FeatureGroupRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string type = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_propertyrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_propertyrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_featureidrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_featureidrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile_FeatureGroupRecord::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile_FeatureGroupRecord& this_ = static_cast<const EdaDataFile_FeatureGroupRecord&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile_FeatureGroupRecord::ByteSizeLong() const {
          const EdaDataFile_FeatureGroupRecord& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 2;
            {
              total_size += 1UL * this_._internal_propertyrecords_size();
              for (const auto& msg : this_._internal_propertyrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureIdRecord featureIdRecords = 3;
            {
              total_size += 1UL * this_._internal_featureidrecords_size();
              for (const auto& msg : this_._internal_featureidrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional string type = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile_FeatureGroupRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile_FeatureGroupRecord*>(&to_msg);
  auto& from = static_cast<const EdaDataFile_FeatureGroupRecord&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_propertyrecords()->MergeFrom(
      from._internal_propertyrecords());
  _this->_internal_mutable_featureidrecords()->MergeFrom(
      from._internal_featureidrecords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile_FeatureGroupRecord::CopyFrom(const EdaDataFile_FeatureGroupRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile_FeatureGroupRecord::InternalSwap(EdaDataFile_FeatureGroupRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.propertyrecords_.InternalSwap(&other->_impl_.propertyrecords_);
  _impl_.featureidrecords_.InternalSwap(&other->_impl_.featureidrecords_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata EdaDataFile_FeatureGroupRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EdaDataFile_NetRecordsByNameEntry_DoNotUse::EdaDataFile_NetRecordsByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EdaDataFile_NetRecordsByNameEntry_DoNotUse::EdaDataFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EdaDataFile_NetRecordsByNameEntry_DoNotUse::EdaDataFile_NetRecordsByNameEntry_DoNotUse() : SuperType() {}
              EdaDataFile_NetRecordsByNameEntry_DoNotUse::EdaDataFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EdaDataFile_NetRecordsByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EdaDataFile_NetRecordsByNameEntry_DoNotUse(arena);
              }
              constexpr auto EdaDataFile_NetRecordsByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_NetRecordsByNameEntry_DoNotUse),
                                                          alignof(EdaDataFile_NetRecordsByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EdaDataFile_NetRecordsByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EdaDataFile_NetRecordsByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EdaDataFile_NetRecordsByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EdaDataFile_NetRecordsByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EdaDataFile_NetRecordsByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EdaDataFile_NetRecordsByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EdaDataFile_NetRecordsByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_edadatafile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EdaDataFile_NetRecordsByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 62, 2> EdaDataFile_NetRecordsByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecordsByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.EdaDataFile.NetRecord value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.EdaDataFile.NetRecord value = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_NetRecordsByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>()},
  }}, {{
    "\62\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.NetRecordsByNameEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              EdaDataFile_PackageRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecordsByNameEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              EdaDataFile_PackageRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              EdaDataFile_PackageRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecordsByNameEntry_DoNotUse() : SuperType() {}
              EdaDataFile_PackageRecordsByNameEntry_DoNotUse::EdaDataFile_PackageRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* EdaDataFile_PackageRecordsByNameEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) EdaDataFile_PackageRecordsByNameEntry_DoNotUse(arena);
              }
              constexpr auto EdaDataFile_PackageRecordsByNameEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EdaDataFile_PackageRecordsByNameEntry_DoNotUse),
                                                          alignof(EdaDataFile_PackageRecordsByNameEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull EdaDataFile_PackageRecordsByNameEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_EdaDataFile_PackageRecordsByNameEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &EdaDataFile_PackageRecordsByNameEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<EdaDataFile_PackageRecordsByNameEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &EdaDataFile_PackageRecordsByNameEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &EdaDataFile_PackageRecordsByNameEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &EdaDataFile_PackageRecordsByNameEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_edadatafile_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* EdaDataFile_PackageRecordsByNameEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> EdaDataFile_PackageRecordsByNameEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecordsByNameEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .Odb.Lib.Protobuf.EdaDataFile.PackageRecord value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Odb.Lib.Protobuf.EdaDataFile.PackageRecord value = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile_PackageRecordsByNameEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>()},
  }}, {{
    "\66\3\0\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile.PackageRecordsByNameEntry"
    "key"
  }},
};

// ===================================================================

class EdaDataFile::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EdaDataFile>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_._has_bits_);
};

void EdaDataFile::clear_propertyrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.propertyrecords_.Clear();
}
EdaDataFile::EdaDataFile(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Odb.Lib.Protobuf.EdaDataFile)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Odb::Lib::Protobuf::EdaDataFile& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        layernames_{visibility, arena, from.layernames_},
        attributenames_{visibility, arena, from.attributenames_},
        attributetextvalues_{visibility, arena, from.attributetextvalues_},
        netrecords_{visibility, arena, from.netrecords_},
        netrecordsbyname_{visibility, arena, from.netrecordsbyname_},
        packagerecords_{visibility, arena, from.packagerecords_},
        packagerecordsbyname_{visibility, arena, from.packagerecordsbyname_},
        propertyrecords_{visibility, arena, from.propertyrecords_},
        featuregrouprecords_{visibility, arena, from.featuregrouprecords_},
        path_(arena, from.path_),
        units_(arena, from.units_),
        source_(arena, from.source_) {}

EdaDataFile::EdaDataFile(
    ::google::protobuf::Arena* arena,
    const EdaDataFile& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EdaDataFile* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Odb.Lib.Protobuf.EdaDataFile)
}
inline PROTOBUF_NDEBUG_INLINE EdaDataFile::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        layernames_{visibility, arena},
        attributenames_{visibility, arena},
        attributetextvalues_{visibility, arena},
        netrecords_{visibility, arena},
        netrecordsbyname_{visibility, arena},
        packagerecords_{visibility, arena},
        packagerecordsbyname_{visibility, arena},
        propertyrecords_{visibility, arena},
        featuregrouprecords_{visibility, arena},
        path_(arena),
        units_(arena),
        source_(arena) {}

inline void EdaDataFile::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EdaDataFile::~EdaDataFile() {
  // @@protoc_insertion_point(destructor:Odb.Lib.Protobuf.EdaDataFile)
  SharedDtor(*this);
}
inline void EdaDataFile::SharedDtor(MessageLite& self) {
  EdaDataFile& this_ = static_cast<EdaDataFile&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.units_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EdaDataFile::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EdaDataFile(arena);
}
constexpr auto EdaDataFile::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.layernames_) +
          decltype(EdaDataFile::_impl_.layernames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributenames_) +
          decltype(EdaDataFile::_impl_.attributenames_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributetextvalues_) +
          decltype(EdaDataFile::_impl_.attributetextvalues_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecords_) +
          decltype(EdaDataFile::_impl_.netrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecordsbyname_) +
          decltype(EdaDataFile::_impl_.netrecordsbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecordsbyname_) +
          decltype(EdaDataFile::_impl_.netrecordsbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecords_) +
          decltype(EdaDataFile::_impl_.packagerecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecordsbyname_) +
          decltype(EdaDataFile::_impl_.packagerecordsbyname_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecordsbyname_) +
          decltype(EdaDataFile::_impl_.packagerecordsbyname_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.propertyrecords_) +
          decltype(EdaDataFile::_impl_.propertyrecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.featuregrouprecords_) +
          decltype(EdaDataFile::_impl_.featuregrouprecords_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EdaDataFile), alignof(EdaDataFile), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EdaDataFile::PlacementNew_,
                                 sizeof(EdaDataFile),
                                 alignof(EdaDataFile));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EdaDataFile::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EdaDataFile_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EdaDataFile::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EdaDataFile>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EdaDataFile::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EdaDataFile>(), &EdaDataFile::ByteSizeLong,
            &EdaDataFile::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_._cached_size_),
        false,
    },
    &EdaDataFile::kDescriptorMethods,
    &descriptor_table_edadatafile_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EdaDataFile::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 8, 139, 2> EdaDataFile::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    8,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.path_)}},
    // optional string units = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.units_)}},
    // optional string source = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.source_)}},
    // repeated string layerNames = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.layernames_)}},
    // repeated string attributeNames = 5;
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributenames_)}},
    // repeated string attributeTextValues = 6;
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributetextvalues_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 2, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.propertyrecords_)}},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 3, PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.featuregrouprecords_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string path = 1;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string units = 2;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.units_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string source = 3;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.source_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string layerNames = 4;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.layernames_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string attributeNames = 5;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributenames_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string attributeTextValues = 6;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.attributetextvalues_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.EdaDataFile.NetRecord> netRecordsByName = 8;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.netrecordsbyname_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecords_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord> packageRecordsByName = 10;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.packagerecordsbyname_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.propertyrecords_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
    {PROTOBUF_FIELD_OFFSET(EdaDataFile, _impl_.featuregrouprecords_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::PropertyRecord>()},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_FeatureGroupRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EdaDataFile()._impl_.netrecordsbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_NetRecord>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(EdaDataFile()._impl_.packagerecordsbyname_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>()},
  }}, {{
    "\34\4\5\6\12\16\23\0\20\0\24\0\0\0\0\0"
    "Odb.Lib.Protobuf.EdaDataFile"
    "path"
    "units"
    "source"
    "layerNames"
    "attributeNames"
    "attributeTextValues"
    "netRecordsByName"
    "packageRecordsByName"
  }},
};

PROTOBUF_NOINLINE void EdaDataFile::Clear() {
// @@protoc_insertion_point(message_clear_start:Odb.Lib.Protobuf.EdaDataFile)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layernames_.Clear();
  _impl_.attributenames_.Clear();
  _impl_.attributetextvalues_.Clear();
  _impl_.netrecords_.Clear();
  _impl_.netrecordsbyname_.Clear();
  _impl_.packagerecords_.Clear();
  _impl_.packagerecordsbyname_.Clear();
  _impl_.propertyrecords_.Clear();
  _impl_.featuregrouprecords_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.path_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.units_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EdaDataFile::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EdaDataFile& this_ = static_cast<const EdaDataFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EdaDataFile::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EdaDataFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Odb.Lib.Protobuf.EdaDataFile)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string path = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string units = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_units();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.units");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional string source = 3;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_source();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.source");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated string layerNames = 4;
          for (int i = 0, n = this_._internal_layernames_size(); i < n; ++i) {
            const auto& s = this_._internal_layernames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.layerNames");
            target = stream->WriteString(4, s, target);
          }

          // repeated string attributeNames = 5;
          for (int i = 0, n = this_._internal_attributenames_size(); i < n; ++i) {
            const auto& s = this_._internal_attributenames().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.attributeNames");
            target = stream->WriteString(5, s, target);
          }

          // repeated string attributeTextValues = 6;
          for (int i = 0, n = this_._internal_attributetextvalues_size(); i < n; ++i) {
            const auto& s = this_._internal_attributetextvalues().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.attributeTextValues");
            target = stream->WriteString(6, s, target);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_netrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_netrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .Odb.Lib.Protobuf.EdaDataFile.NetRecord> netRecordsByName = 8;
          if (!this_._internal_netrecordsbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_netrecordsbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.netRecordsByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    8, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.netRecordsByName");
              }
            }
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_packagerecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_packagerecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord> packageRecordsByName = 10;
          if (!this_._internal_packagerecordsbyname().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_packagerecordsbyname();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.packageRecordsByName");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Odb.Lib.Protobuf.EdaDataFile.packageRecordsByName");
              }
            }
          }

          // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_propertyrecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_propertyrecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_featuregrouprecords_size());
               i < n; i++) {
            const auto& repfield = this_._internal_featuregrouprecords().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Odb.Lib.Protobuf.EdaDataFile)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EdaDataFile::ByteSizeLong(const MessageLite& base) {
          const EdaDataFile& this_ = static_cast<const EdaDataFile&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EdaDataFile::ByteSizeLong() const {
          const EdaDataFile& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Odb.Lib.Protobuf.EdaDataFile)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string layerNames = 4;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_layernames().size());
              for (int i = 0, n = this_._internal_layernames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_layernames().Get(i));
              }
            }
            // repeated string attributeNames = 5;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributenames().size());
              for (int i = 0, n = this_._internal_attributenames().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_attributenames().Get(i));
              }
            }
            // repeated string attributeTextValues = 6;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_attributetextvalues().size());
              for (int i = 0, n = this_._internal_attributetextvalues().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_attributetextvalues().Get(i));
              }
            }
            // repeated .Odb.Lib.Protobuf.EdaDataFile.NetRecord netRecords = 7;
            {
              total_size += 1UL * this_._internal_netrecords_size();
              for (const auto& msg : this_._internal_netrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .Odb.Lib.Protobuf.EdaDataFile.NetRecord> netRecordsByName = 8;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_netrecordsbyname_size());
              for (const auto& entry : this_._internal_netrecordsbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_NetRecord,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .Odb.Lib.Protobuf.EdaDataFile.PackageRecord packageRecords = 9;
            {
              total_size += 1UL * this_._internal_packagerecords_size();
              for (const auto& msg : this_._internal_packagerecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .Odb.Lib.Protobuf.EdaDataFile.PackageRecord> packageRecordsByName = 10;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_packagerecordsbyname_size());
              for (const auto& entry : this_._internal_packagerecordsbyname()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::Odb::Lib::Protobuf::EdaDataFile_PackageRecord,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .Odb.Lib.Protobuf.PropertyRecord propertyRecords = 11;
            {
              total_size += 1UL * this_._internal_propertyrecords_size();
              for (const auto& msg : this_._internal_propertyrecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .Odb.Lib.Protobuf.EdaDataFile.FeatureGroupRecord featureGroupRecords = 12;
            {
              total_size += 1UL * this_._internal_featuregrouprecords_size();
              for (const auto& msg : this_._internal_featuregrouprecords()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string path = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // optional string units = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_units());
            }
            // optional string source = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EdaDataFile::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EdaDataFile*>(&to_msg);
  auto& from = static_cast<const EdaDataFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Odb.Lib.Protobuf.EdaDataFile)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_layernames()->MergeFrom(from._internal_layernames());
  _this->_internal_mutable_attributenames()->MergeFrom(from._internal_attributenames());
  _this->_internal_mutable_attributetextvalues()->MergeFrom(from._internal_attributetextvalues());
  _this->_internal_mutable_netrecords()->MergeFrom(
      from._internal_netrecords());
  _this->_impl_.netrecordsbyname_.MergeFrom(from._impl_.netrecordsbyname_);
  _this->_internal_mutable_packagerecords()->MergeFrom(
      from._internal_packagerecords());
  _this->_impl_.packagerecordsbyname_.MergeFrom(from._impl_.packagerecordsbyname_);
  _this->_internal_mutable_propertyrecords()->MergeFrom(
      from._internal_propertyrecords());
  _this->_internal_mutable_featuregrouprecords()->MergeFrom(
      from._internal_featuregrouprecords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_path(from._internal_path());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_units(from._internal_units());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_source(from._internal_source());
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EdaDataFile::CopyFrom(const EdaDataFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Odb.Lib.Protobuf.EdaDataFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EdaDataFile::InternalSwap(EdaDataFile* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.layernames_.InternalSwap(&other->_impl_.layernames_);
  _impl_.attributenames_.InternalSwap(&other->_impl_.attributenames_);
  _impl_.attributetextvalues_.InternalSwap(&other->_impl_.attributetextvalues_);
  _impl_.netrecords_.InternalSwap(&other->_impl_.netrecords_);
  _impl_.netrecordsbyname_.InternalSwap(&other->_impl_.netrecordsbyname_);
  _impl_.packagerecords_.InternalSwap(&other->_impl_.packagerecords_);
  _impl_.packagerecordsbyname_.InternalSwap(&other->_impl_.packagerecordsbyname_);
  _impl_.propertyrecords_.InternalSwap(&other->_impl_.propertyrecords_);
  _impl_.featuregrouprecords_.InternalSwap(&other->_impl_.featuregrouprecords_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.units_, &other->_impl_.units_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
}

::google::protobuf::Metadata EdaDataFile::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_edadatafile_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
