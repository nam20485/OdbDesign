// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: netlistfile.proto
// Protobuf C++ Version: 5.29.2

#ifndef netlistfile_2eproto_2epb_2eh
#define netlistfile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_netlistfile_2eproto ODBDESIGN_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ODBDESIGN_EXPORT TableStruct_netlistfile_2eproto {
  static const ::uint32_t offsets[];
};
ODBDESIGN_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_netlistfile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class NetlistFile;
struct NetlistFileDefaultTypeInternal;
ODBDESIGN_EXPORT extern NetlistFileDefaultTypeInternal _NetlistFile_default_instance_;
class NetlistFile_NetPointRecord;
struct NetlistFile_NetPointRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern NetlistFile_NetPointRecordDefaultTypeInternal _NetlistFile_NetPointRecord_default_instance_;
class NetlistFile_NetRecord;
struct NetlistFile_NetRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern NetlistFile_NetRecordDefaultTypeInternal _NetlistFile_NetRecord_default_instance_;
class NetlistFile_NetRecordsByNameEntry_DoNotUse;
struct NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal;
ODBDESIGN_EXPORT extern NetlistFile_NetRecordsByNameEntry_DoNotUseDefaultTypeInternal _NetlistFile_NetRecordsByNameEntry_DoNotUse_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {
enum NetlistFile_NetPointRecord_AccessSide : int {
  NetlistFile_NetPointRecord_AccessSide_Top = 0,
  NetlistFile_NetPointRecord_AccessSide_Down = 1,
  NetlistFile_NetPointRecord_AccessSide_Both = 2,
  NetlistFile_NetPointRecord_AccessSide_Inner = 3,
  NetlistFile_NetPointRecord_AccessSide_NetlistFile_NetPointRecord_AccessSide_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NetlistFile_NetPointRecord_AccessSide_NetlistFile_NetPointRecord_AccessSide_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool NetlistFile_NetPointRecord_AccessSide_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t NetlistFile_NetPointRecord_AccessSide_internal_data_[];
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord_AccessSide_AccessSide_MIN = static_cast<NetlistFile_NetPointRecord_AccessSide>(0);
constexpr NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord_AccessSide_AccessSide_MAX = static_cast<NetlistFile_NetPointRecord_AccessSide>(3);
constexpr int NetlistFile_NetPointRecord_AccessSide_AccessSide_ARRAYSIZE = 3 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
NetlistFile_NetPointRecord_AccessSide_descriptor();
template <typename T>
const std::string& NetlistFile_NetPointRecord_AccessSide_Name(T value) {
  static_assert(std::is_same<T, NetlistFile_NetPointRecord_AccessSide>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AccessSide_Name().");
  return NetlistFile_NetPointRecord_AccessSide_Name(static_cast<NetlistFile_NetPointRecord_AccessSide>(value));
}
template <>
inline const std::string& NetlistFile_NetPointRecord_AccessSide_Name(NetlistFile_NetPointRecord_AccessSide value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NetlistFile_NetPointRecord_AccessSide_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool NetlistFile_NetPointRecord_AccessSide_Parse(absl::string_view name, NetlistFile_NetPointRecord_AccessSide* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetlistFile_NetPointRecord_AccessSide>(
      NetlistFile_NetPointRecord_AccessSide_descriptor(), name, value);
}
enum NetlistFile_Staggered : int {
  NetlistFile_Staggered_Yes = 0,
  NetlistFile_Staggered_No = 1,
  NetlistFile_Staggered_Unknown = 2,
  NetlistFile_Staggered_NetlistFile_Staggered_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NetlistFile_Staggered_NetlistFile_Staggered_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool NetlistFile_Staggered_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t NetlistFile_Staggered_internal_data_[];
constexpr NetlistFile_Staggered NetlistFile_Staggered_Staggered_MIN = static_cast<NetlistFile_Staggered>(0);
constexpr NetlistFile_Staggered NetlistFile_Staggered_Staggered_MAX = static_cast<NetlistFile_Staggered>(2);
constexpr int NetlistFile_Staggered_Staggered_ARRAYSIZE = 2 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
NetlistFile_Staggered_descriptor();
template <typename T>
const std::string& NetlistFile_Staggered_Name(T value) {
  static_assert(std::is_same<T, NetlistFile_Staggered>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Staggered_Name().");
  return NetlistFile_Staggered_Name(static_cast<NetlistFile_Staggered>(value));
}
template <>
inline const std::string& NetlistFile_Staggered_Name(NetlistFile_Staggered value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NetlistFile_Staggered_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool NetlistFile_Staggered_Parse(absl::string_view name, NetlistFile_Staggered* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NetlistFile_Staggered>(
      NetlistFile_Staggered_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ODBDESIGN_EXPORT NetlistFile_NetRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.NetlistFile.NetRecord) */ {
 public:
  inline NetlistFile_NetRecord() : NetlistFile_NetRecord(nullptr) {}
  ~NetlistFile_NetRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetlistFile_NetRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetlistFile_NetRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetlistFile_NetRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetlistFile_NetRecord(const NetlistFile_NetRecord& from) : NetlistFile_NetRecord(nullptr, from) {}
  inline NetlistFile_NetRecord(NetlistFile_NetRecord&& from) noexcept
      : NetlistFile_NetRecord(nullptr, std::move(from)) {}
  inline NetlistFile_NetRecord& operator=(const NetlistFile_NetRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetlistFile_NetRecord& operator=(NetlistFile_NetRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetlistFile_NetRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetlistFile_NetRecord* internal_default_instance() {
    return reinterpret_cast<const NetlistFile_NetRecord*>(
        &_NetlistFile_NetRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(NetlistFile_NetRecord& a, NetlistFile_NetRecord& b) { a.Swap(&b); }
  inline void Swap(NetlistFile_NetRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetlistFile_NetRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetlistFile_NetRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetlistFile_NetRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetlistFile_NetRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetlistFile_NetRecord& from) { NetlistFile_NetRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetlistFile_NetRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.NetlistFile.NetRecord"; }

 protected:
  explicit NetlistFile_NetRecord(::google::protobuf::Arena* arena);
  NetlistFile_NetRecord(::google::protobuf::Arena* arena, const NetlistFile_NetRecord& from);
  NetlistFile_NetRecord(::google::protobuf::Arena* arena, NetlistFile_NetRecord&& from) noexcept
      : NetlistFile_NetRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetNameFieldNumber = 2,
    kSerialNumberFieldNumber = 1,
  };
  // optional string netName = 2;
  bool has_netname() const;
  void clear_netname() ;
  const std::string& netname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_netname(Arg_&& arg, Args_... args);
  std::string* mutable_netname();
  PROTOBUF_NODISCARD std::string* release_netname();
  void set_allocated_netname(std::string* value);

  private:
  const std::string& _internal_netname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_netname(
      const std::string& value);
  std::string* _internal_mutable_netname();

  public:
  // optional uint32 serialNumber = 1;
  bool has_serialnumber() const;
  void clear_serialnumber() ;
  ::uint32_t serialnumber() const;
  void set_serialnumber(::uint32_t value);

  private:
  ::uint32_t _internal_serialnumber() const;
  void _internal_set_serialnumber(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.NetlistFile.NetRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetlistFile_NetRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr netname_;
    ::uint32_t serialnumber_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_netlistfile_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT NetlistFile_NetPointRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.NetlistFile.NetPointRecord) */ {
 public:
  inline NetlistFile_NetPointRecord() : NetlistFile_NetPointRecord(nullptr) {}
  ~NetlistFile_NetPointRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetlistFile_NetPointRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetlistFile_NetPointRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetlistFile_NetPointRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetlistFile_NetPointRecord(const NetlistFile_NetPointRecord& from) : NetlistFile_NetPointRecord(nullptr, from) {}
  inline NetlistFile_NetPointRecord(NetlistFile_NetPointRecord&& from) noexcept
      : NetlistFile_NetPointRecord(nullptr, std::move(from)) {}
  inline NetlistFile_NetPointRecord& operator=(const NetlistFile_NetPointRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetlistFile_NetPointRecord& operator=(NetlistFile_NetPointRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetlistFile_NetPointRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetlistFile_NetPointRecord* internal_default_instance() {
    return reinterpret_cast<const NetlistFile_NetPointRecord*>(
        &_NetlistFile_NetPointRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(NetlistFile_NetPointRecord& a, NetlistFile_NetPointRecord& b) { a.Swap(&b); }
  inline void Swap(NetlistFile_NetPointRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetlistFile_NetPointRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetlistFile_NetPointRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetlistFile_NetPointRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetlistFile_NetPointRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetlistFile_NetPointRecord& from) { NetlistFile_NetPointRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetlistFile_NetPointRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.NetlistFile.NetPointRecord"; }

 protected:
  explicit NetlistFile_NetPointRecord(::google::protobuf::Arena* arena);
  NetlistFile_NetPointRecord(::google::protobuf::Arena* arena, const NetlistFile_NetPointRecord& from);
  NetlistFile_NetPointRecord(::google::protobuf::Arena* arena, NetlistFile_NetPointRecord&& from) noexcept
      : NetlistFile_NetPointRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AccessSide = NetlistFile_NetPointRecord_AccessSide;
  static constexpr AccessSide Top = NetlistFile_NetPointRecord_AccessSide_Top;
  static constexpr AccessSide Down = NetlistFile_NetPointRecord_AccessSide_Down;
  static constexpr AccessSide Both = NetlistFile_NetPointRecord_AccessSide_Both;
  static constexpr AccessSide Inner = NetlistFile_NetPointRecord_AccessSide_Inner;
  static inline bool AccessSide_IsValid(int value) {
    return NetlistFile_NetPointRecord_AccessSide_IsValid(value);
  }
  static constexpr AccessSide AccessSide_MIN = NetlistFile_NetPointRecord_AccessSide_AccessSide_MIN;
  static constexpr AccessSide AccessSide_MAX = NetlistFile_NetPointRecord_AccessSide_AccessSide_MAX;
  static constexpr int AccessSide_ARRAYSIZE = NetlistFile_NetPointRecord_AccessSide_AccessSide_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AccessSide_descriptor() {
    return NetlistFile_NetPointRecord_AccessSide_descriptor();
  }
  template <typename T>
  static inline const std::string& AccessSide_Name(T value) {
    return NetlistFile_NetPointRecord_AccessSide_Name(value);
  }
  static inline bool AccessSide_Parse(absl::string_view name, AccessSide* value) {
    return NetlistFile_NetPointRecord_AccessSide_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kEpointFieldNumber = 8,
    kExpFieldNumber = 9,
    kTestExecutionSideFieldNumber = 17,
    kNetNumberFieldNumber = 1,
    kRadiusFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
    kSideFieldNumber = 5,
    kWidthFieldNumber = 6,
    kHeightFieldNumber = 7,
    kCommentPointFieldNumber = 10,
    kStaggeredXFieldNumber = 11,
    kStaggeredYFieldNumber = 12,
    kStaggeredRadiusFieldNumber = 13,
    kViaPointFieldNumber = 14,
    kFiducialPointFieldNumber = 15,
    kTestPointFieldNumber = 16,
  };
  // optional string epoint = 8;
  bool has_epoint() const;
  void clear_epoint() ;
  const std::string& epoint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_epoint(Arg_&& arg, Args_... args);
  std::string* mutable_epoint();
  PROTOBUF_NODISCARD std::string* release_epoint();
  void set_allocated_epoint(std::string* value);

  private:
  const std::string& _internal_epoint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_epoint(
      const std::string& value);
  std::string* _internal_mutable_epoint();

  public:
  // optional string exp = 9;
  bool has_exp() const;
  void clear_exp() ;
  const std::string& exp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_exp(Arg_&& arg, Args_... args);
  std::string* mutable_exp();
  PROTOBUF_NODISCARD std::string* release_exp();
  void set_allocated_exp(std::string* value);

  private:
  const std::string& _internal_exp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_exp(
      const std::string& value);
  std::string* _internal_mutable_exp();

  public:
  // optional string testExecutionSide = 17;
  bool has_testexecutionside() const;
  void clear_testexecutionside() ;
  const std::string& testexecutionside() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_testexecutionside(Arg_&& arg, Args_... args);
  std::string* mutable_testexecutionside();
  PROTOBUF_NODISCARD std::string* release_testexecutionside();
  void set_allocated_testexecutionside(std::string* value);

  private:
  const std::string& _internal_testexecutionside() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_testexecutionside(
      const std::string& value);
  std::string* _internal_mutable_testexecutionside();

  public:
  // optional uint32 netNumber = 1;
  bool has_netnumber() const;
  void clear_netnumber() ;
  ::uint32_t netnumber() const;
  void set_netnumber(::uint32_t value);

  private:
  ::uint32_t _internal_netnumber() const;
  void _internal_set_netnumber(::uint32_t value);

  public:
  // optional float radius = 2;
  bool has_radius() const;
  void clear_radius() ;
  float radius() const;
  void set_radius(float value);

  private:
  float _internal_radius() const;
  void _internal_set_radius(float value);

  public:
  // optional float x = 3;
  bool has_x() const;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // optional float y = 4;
  bool has_y() const;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
  bool has_side() const;
  void clear_side() ;
  ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide side() const;
  void set_side(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide value);

  private:
  ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide _internal_side() const;
  void _internal_set_side(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide value);

  public:
  // optional float width = 6;
  bool has_width() const;
  void clear_width() ;
  float width() const;
  void set_width(float value);

  private:
  float _internal_width() const;
  void _internal_set_width(float value);

  public:
  // optional float height = 7;
  bool has_height() const;
  void clear_height() ;
  float height() const;
  void set_height(float value);

  private:
  float _internal_height() const;
  void _internal_set_height(float value);

  public:
  // optional bool commentPoint = 10;
  bool has_commentpoint() const;
  void clear_commentpoint() ;
  bool commentpoint() const;
  void set_commentpoint(bool value);

  private:
  bool _internal_commentpoint() const;
  void _internal_set_commentpoint(bool value);

  public:
  // optional float staggeredX = 11;
  bool has_staggeredx() const;
  void clear_staggeredx() ;
  float staggeredx() const;
  void set_staggeredx(float value);

  private:
  float _internal_staggeredx() const;
  void _internal_set_staggeredx(float value);

  public:
  // optional float staggeredY = 12;
  bool has_staggeredy() const;
  void clear_staggeredy() ;
  float staggeredy() const;
  void set_staggeredy(float value);

  private:
  float _internal_staggeredy() const;
  void _internal_set_staggeredy(float value);

  public:
  // optional float staggeredRadius = 13;
  bool has_staggeredradius() const;
  void clear_staggeredradius() ;
  float staggeredradius() const;
  void set_staggeredradius(float value);

  private:
  float _internal_staggeredradius() const;
  void _internal_set_staggeredradius(float value);

  public:
  // optional float viaPoint = 14;
  bool has_viapoint() const;
  void clear_viapoint() ;
  float viapoint() const;
  void set_viapoint(float value);

  private:
  float _internal_viapoint() const;
  void _internal_set_viapoint(float value);

  public:
  // optional float fiducialPoint = 15;
  bool has_fiducialpoint() const;
  void clear_fiducialpoint() ;
  float fiducialpoint() const;
  void set_fiducialpoint(float value);

  private:
  float _internal_fiducialpoint() const;
  void _internal_set_fiducialpoint(float value);

  public:
  // optional float testPoint = 16;
  bool has_testpoint() const;
  void clear_testpoint() ;
  float testpoint() const;
  void set_testpoint(float value);

  private:
  float _internal_testpoint() const;
  void _internal_set_testpoint(float value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.NetlistFile.NetPointRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 17, 0,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetlistFile_NetPointRecord& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr epoint_;
    ::google::protobuf::internal::ArenaStringPtr exp_;
    ::google::protobuf::internal::ArenaStringPtr testexecutionside_;
    ::uint32_t netnumber_;
    float radius_;
    float x_;
    float y_;
    int side_;
    float width_;
    float height_;
    bool commentpoint_;
    float staggeredx_;
    float staggeredy_;
    float staggeredradius_;
    float viapoint_;
    float fiducialpoint_;
    float testpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_netlistfile_2eproto;
};
// -------------------------------------------------------------------

class NetlistFile_NetRecordsByNameEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  NetlistFile_NetRecordsByNameEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetlistFile_NetRecordsByNameEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NetlistFile_NetRecordsByNameEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NetlistFile_NetRecordsByNameEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NetlistFile_NetRecordsByNameEntry_DoNotUse*>(
        &_NetlistFile_NetRecordsByNameEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_netlistfile_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT NetlistFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.NetlistFile) */ {
 public:
  inline NetlistFile() : NetlistFile(nullptr) {}
  ~NetlistFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NetlistFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NetlistFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetlistFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetlistFile(const NetlistFile& from) : NetlistFile(nullptr, from) {}
  inline NetlistFile(NetlistFile&& from) noexcept
      : NetlistFile(nullptr, std::move(from)) {}
  inline NetlistFile& operator=(const NetlistFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetlistFile& operator=(NetlistFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetlistFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetlistFile* internal_default_instance() {
    return reinterpret_cast<const NetlistFile*>(
        &_NetlistFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NetlistFile& a, NetlistFile& b) { a.Swap(&b); }
  inline void Swap(NetlistFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetlistFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetlistFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NetlistFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetlistFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetlistFile& from) { NetlistFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NetlistFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.NetlistFile"; }

 protected:
  explicit NetlistFile(::google::protobuf::Arena* arena);
  NetlistFile(::google::protobuf::Arena* arena, const NetlistFile& from);
  NetlistFile(::google::protobuf::Arena* arena, NetlistFile&& from) noexcept
      : NetlistFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NetRecord = NetlistFile_NetRecord;
  using NetPointRecord = NetlistFile_NetPointRecord;
  using Staggered = NetlistFile_Staggered;
  static constexpr Staggered Yes = NetlistFile_Staggered_Yes;
  static constexpr Staggered No = NetlistFile_Staggered_No;
  static constexpr Staggered Unknown = NetlistFile_Staggered_Unknown;
  static inline bool Staggered_IsValid(int value) {
    return NetlistFile_Staggered_IsValid(value);
  }
  static constexpr Staggered Staggered_MIN = NetlistFile_Staggered_Staggered_MIN;
  static constexpr Staggered Staggered_MAX = NetlistFile_Staggered_Staggered_MAX;
  static constexpr int Staggered_ARRAYSIZE = NetlistFile_Staggered_Staggered_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Staggered_descriptor() {
    return NetlistFile_Staggered_descriptor();
  }
  template <typename T>
  static inline const std::string& Staggered_Name(T value) {
    return NetlistFile_Staggered_Name(value);
  }
  static inline bool Staggered_Parse(absl::string_view name, Staggered* value) {
    return NetlistFile_Staggered_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNetRecordssFieldNumber = 6,
    kNetRecordsByNameFieldNumber = 7,
    kNetPointRecordsFieldNumber = 8,
    kPathFieldNumber = 1,
    kNameFieldNumber = 2,
    kUnitsFieldNumber = 3,
    kOptimizedFieldNumber = 4,
    kStaggeredFieldNumber = 5,
  };
  // repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
  int netrecordss_size() const;
  private:
  int _internal_netrecordss_size() const;

  public:
  void clear_netrecordss() ;
  ::Odb::Lib::Protobuf::NetlistFile_NetRecord* mutable_netrecordss(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>* mutable_netrecordss();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>& _internal_netrecordss() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>* _internal_mutable_netrecordss();
  public:
  const ::Odb::Lib::Protobuf::NetlistFile_NetRecord& netrecordss(int index) const;
  ::Odb::Lib::Protobuf::NetlistFile_NetRecord* add_netrecordss();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>& netrecordss() const;
  // map<string, .Odb.Lib.Protobuf.NetlistFile.NetRecord> netRecordsByName = 7;
  int netrecordsbyname_size() const;
  private:
  int _internal_netrecordsbyname_size() const;

  public:
  void clear_netrecordsbyname() ;
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>& netrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>* mutable_netrecordsbyname();

  private:
  const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>& _internal_netrecordsbyname() const;
  ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>* _internal_mutable_netrecordsbyname();

  public:
  // repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
  int netpointrecords_size() const;
  private:
  int _internal_netpointrecords_size() const;

  public:
  void clear_netpointrecords() ;
  ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord* mutable_netpointrecords(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>* mutable_netpointrecords();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>& _internal_netpointrecords() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>* _internal_mutable_netpointrecords();
  public:
  const ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord& netpointrecords(int index) const;
  ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord* add_netpointrecords();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>& netpointrecords() const;
  // optional string path = 1;
  bool has_path() const;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string units = 3;
  bool has_units() const;
  void clear_units() ;
  const std::string& units() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_units(Arg_&& arg, Args_... args);
  std::string* mutable_units();
  PROTOBUF_NODISCARD std::string* release_units();
  void set_allocated_units(std::string* value);

  private:
  const std::string& _internal_units() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_units(
      const std::string& value);
  std::string* _internal_mutable_units();

  public:
  // optional bool optimized = 4;
  bool has_optimized() const;
  void clear_optimized() ;
  bool optimized() const;
  void set_optimized(bool value);

  private:
  bool _internal_optimized() const;
  void _internal_set_optimized(bool value);

  public:
  // optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
  bool has_staggered() const;
  void clear_staggered() ;
  ::Odb::Lib::Protobuf::NetlistFile_Staggered staggered() const;
  void set_staggered(::Odb::Lib::Protobuf::NetlistFile_Staggered value);

  private:
  ::Odb::Lib::Protobuf::NetlistFile_Staggered _internal_staggered() const;
  void _internal_set_staggered(::Odb::Lib::Protobuf::NetlistFile_Staggered value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.NetlistFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetlistFile& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::NetlistFile_NetRecord > netrecordss_;
    ::google::protobuf::internal::MapField<NetlistFile_NetRecordsByNameEntry_DoNotUse, std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        netrecordsbyname_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord > netpointrecords_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr units_;
    bool optimized_;
    int staggered_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_netlistfile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// NetlistFile_NetRecord

// optional uint32 serialNumber = 1;
inline bool NetlistFile_NetRecord::has_serialnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NetlistFile_NetRecord::clear_serialnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t NetlistFile_NetRecord::serialnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetRecord.serialNumber)
  return _internal_serialnumber();
}
inline void NetlistFile_NetRecord::set_serialnumber(::uint32_t value) {
  _internal_set_serialnumber(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetRecord.serialNumber)
}
inline ::uint32_t NetlistFile_NetRecord::_internal_serialnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serialnumber_;
}
inline void NetlistFile_NetRecord::_internal_set_serialnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialnumber_ = value;
}

// optional string netName = 2;
inline bool NetlistFile_NetRecord::has_netname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NetlistFile_NetRecord::clear_netname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetlistFile_NetRecord::netname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetRecord.netName)
  return _internal_netname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile_NetRecord::set_netname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.netname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetRecord.netName)
}
inline std::string* NetlistFile_NetRecord::mutable_netname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_netname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.NetRecord.netName)
  return _s;
}
inline const std::string& NetlistFile_NetRecord::_internal_netname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netname_.Get();
}
inline void NetlistFile_NetRecord::_internal_set_netname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.netname_.Set(value, GetArena());
}
inline std::string* NetlistFile_NetRecord::_internal_mutable_netname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.netname_.Mutable( GetArena());
}
inline std::string* NetlistFile_NetRecord::release_netname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.NetRecord.netName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.netname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.netname_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile_NetRecord::set_allocated_netname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.netname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.netname_.IsDefault()) {
    _impl_.netname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.NetRecord.netName)
}

// -------------------------------------------------------------------

// NetlistFile_NetPointRecord

// optional uint32 netNumber = 1;
inline bool NetlistFile_NetPointRecord::has_netnumber() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_netnumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netnumber_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t NetlistFile_NetPointRecord::netnumber() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.netNumber)
  return _internal_netnumber();
}
inline void NetlistFile_NetPointRecord::set_netnumber(::uint32_t value) {
  _internal_set_netnumber(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.netNumber)
}
inline ::uint32_t NetlistFile_NetPointRecord::_internal_netnumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netnumber_;
}
inline void NetlistFile_NetPointRecord::_internal_set_netnumber(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netnumber_ = value;
}

// optional float radius = 2;
inline bool NetlistFile_NetPointRecord::has_radius() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float NetlistFile_NetPointRecord::radius() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.radius)
  return _internal_radius();
}
inline void NetlistFile_NetPointRecord::set_radius(float value) {
  _internal_set_radius(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.radius)
}
inline float NetlistFile_NetPointRecord::_internal_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_;
}
inline void NetlistFile_NetPointRecord::_internal_set_radius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_ = value;
}

// optional float x = 3;
inline bool NetlistFile_NetPointRecord::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float NetlistFile_NetPointRecord::x() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.x)
  return _internal_x();
}
inline void NetlistFile_NetPointRecord::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.x)
}
inline float NetlistFile_NetPointRecord::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void NetlistFile_NetPointRecord::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional float y = 4;
inline bool NetlistFile_NetPointRecord::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline float NetlistFile_NetPointRecord::y() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.y)
  return _internal_y();
}
inline void NetlistFile_NetPointRecord::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.y)
}
inline float NetlistFile_NetPointRecord::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void NetlistFile_NetPointRecord::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional .Odb.Lib.Protobuf.NetlistFile.NetPointRecord.AccessSide side = 5;
inline bool NetlistFile_NetPointRecord::has_side() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::side() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.side)
  return _internal_side();
}
inline void NetlistFile_NetPointRecord::set_side(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide value) {
  _internal_set_side(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.side)
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide NetlistFile_NetPointRecord::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide>(_impl_.side_);
}
inline void NetlistFile_NetPointRecord::_internal_set_side(::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_ = value;
}

// optional float width = 6;
inline bool NetlistFile_NetPointRecord::has_width() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline float NetlistFile_NetPointRecord::width() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.width)
  return _internal_width();
}
inline void NetlistFile_NetPointRecord::set_width(float value) {
  _internal_set_width(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.width)
}
inline float NetlistFile_NetPointRecord::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void NetlistFile_NetPointRecord::_internal_set_width(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// optional float height = 7;
inline bool NetlistFile_NetPointRecord::has_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline float NetlistFile_NetPointRecord::height() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.height)
  return _internal_height();
}
inline void NetlistFile_NetPointRecord::set_height(float value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.height)
}
inline float NetlistFile_NetPointRecord::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void NetlistFile_NetPointRecord::_internal_set_height(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// optional string epoint = 8;
inline bool NetlistFile_NetPointRecord::has_epoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_epoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoint_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetlistFile_NetPointRecord::epoint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint)
  return _internal_epoint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile_NetPointRecord::set_epoint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.epoint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint)
}
inline std::string* NetlistFile_NetPointRecord::mutable_epoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_epoint();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint)
  return _s;
}
inline const std::string& NetlistFile_NetPointRecord::_internal_epoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoint_.Get();
}
inline void NetlistFile_NetPointRecord::_internal_set_epoint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.epoint_.Set(value, GetArena());
}
inline std::string* NetlistFile_NetPointRecord::_internal_mutable_epoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.epoint_.Mutable( GetArena());
}
inline std::string* NetlistFile_NetPointRecord::release_epoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.epoint_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.epoint_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile_NetPointRecord::set_allocated_epoint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.epoint_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.epoint_.IsDefault()) {
    _impl_.epoint_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.epoint)
}

// optional string exp = 9;
inline bool NetlistFile_NetPointRecord::has_exp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exp_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NetlistFile_NetPointRecord::exp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp)
  return _internal_exp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile_NetPointRecord::set_exp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.exp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp)
}
inline std::string* NetlistFile_NetPointRecord::mutable_exp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_exp();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp)
  return _s;
}
inline const std::string& NetlistFile_NetPointRecord::_internal_exp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exp_.Get();
}
inline void NetlistFile_NetPointRecord::_internal_set_exp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.exp_.Set(value, GetArena());
}
inline std::string* NetlistFile_NetPointRecord::_internal_mutable_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.exp_.Mutable( GetArena());
}
inline std::string* NetlistFile_NetPointRecord::release_exp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.exp_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exp_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile_NetPointRecord::set_allocated_exp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.exp_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exp_.IsDefault()) {
    _impl_.exp_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.exp)
}

// optional bool commentPoint = 10;
inline bool NetlistFile_NetPointRecord::has_commentpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_commentpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commentpoint_ = false;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline bool NetlistFile_NetPointRecord::commentpoint() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.commentPoint)
  return _internal_commentpoint();
}
inline void NetlistFile_NetPointRecord::set_commentpoint(bool value) {
  _internal_set_commentpoint(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.commentPoint)
}
inline bool NetlistFile_NetPointRecord::_internal_commentpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commentpoint_;
}
inline void NetlistFile_NetPointRecord::_internal_set_commentpoint(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commentpoint_ = value;
}

// optional float staggeredX = 11;
inline bool NetlistFile_NetPointRecord::has_staggeredx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_staggeredx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredx_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline float NetlistFile_NetPointRecord::staggeredx() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredX)
  return _internal_staggeredx();
}
inline void NetlistFile_NetPointRecord::set_staggeredx(float value) {
  _internal_set_staggeredx(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredX)
}
inline float NetlistFile_NetPointRecord::_internal_staggeredx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.staggeredx_;
}
inline void NetlistFile_NetPointRecord::_internal_set_staggeredx(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredx_ = value;
}

// optional float staggeredY = 12;
inline bool NetlistFile_NetPointRecord::has_staggeredy() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_staggeredy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredy_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline float NetlistFile_NetPointRecord::staggeredy() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredY)
  return _internal_staggeredy();
}
inline void NetlistFile_NetPointRecord::set_staggeredy(float value) {
  _internal_set_staggeredy(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredY)
}
inline float NetlistFile_NetPointRecord::_internal_staggeredy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.staggeredy_;
}
inline void NetlistFile_NetPointRecord::_internal_set_staggeredy(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredy_ = value;
}

// optional float staggeredRadius = 13;
inline bool NetlistFile_NetPointRecord::has_staggeredradius() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_staggeredradius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredradius_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline float NetlistFile_NetPointRecord::staggeredradius() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredRadius)
  return _internal_staggeredradius();
}
inline void NetlistFile_NetPointRecord::set_staggeredradius(float value) {
  _internal_set_staggeredradius(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.staggeredRadius)
}
inline float NetlistFile_NetPointRecord::_internal_staggeredradius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.staggeredradius_;
}
inline void NetlistFile_NetPointRecord::_internal_set_staggeredradius(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggeredradius_ = value;
}

// optional float viaPoint = 14;
inline bool NetlistFile_NetPointRecord::has_viapoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_viapoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.viapoint_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline float NetlistFile_NetPointRecord::viapoint() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.viaPoint)
  return _internal_viapoint();
}
inline void NetlistFile_NetPointRecord::set_viapoint(float value) {
  _internal_set_viapoint(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.viaPoint)
}
inline float NetlistFile_NetPointRecord::_internal_viapoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.viapoint_;
}
inline void NetlistFile_NetPointRecord::_internal_set_viapoint(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.viapoint_ = value;
}

// optional float fiducialPoint = 15;
inline bool NetlistFile_NetPointRecord::has_fiducialpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_fiducialpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fiducialpoint_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline float NetlistFile_NetPointRecord::fiducialpoint() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.fiducialPoint)
  return _internal_fiducialpoint();
}
inline void NetlistFile_NetPointRecord::set_fiducialpoint(float value) {
  _internal_set_fiducialpoint(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.fiducialPoint)
}
inline float NetlistFile_NetPointRecord::_internal_fiducialpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fiducialpoint_;
}
inline void NetlistFile_NetPointRecord::_internal_set_fiducialpoint(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fiducialpoint_ = value;
}

// optional float testPoint = 16;
inline bool NetlistFile_NetPointRecord::has_testpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_testpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testpoint_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline float NetlistFile_NetPointRecord::testpoint() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testPoint)
  return _internal_testpoint();
}
inline void NetlistFile_NetPointRecord::set_testpoint(float value) {
  _internal_set_testpoint(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testPoint)
}
inline float NetlistFile_NetPointRecord::_internal_testpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testpoint_;
}
inline void NetlistFile_NetPointRecord::_internal_set_testpoint(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testpoint_ = value;
}

// optional string testExecutionSide = 17;
inline bool NetlistFile_NetPointRecord::has_testexecutionside() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NetlistFile_NetPointRecord::clear_testexecutionside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testexecutionside_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& NetlistFile_NetPointRecord::testexecutionside() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide)
  return _internal_testexecutionside();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile_NetPointRecord::set_testexecutionside(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.testexecutionside_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide)
}
inline std::string* NetlistFile_NetPointRecord::mutable_testexecutionside() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_testexecutionside();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide)
  return _s;
}
inline const std::string& NetlistFile_NetPointRecord::_internal_testexecutionside() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testexecutionside_.Get();
}
inline void NetlistFile_NetPointRecord::_internal_set_testexecutionside(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.testexecutionside_.Set(value, GetArena());
}
inline std::string* NetlistFile_NetPointRecord::_internal_mutable_testexecutionside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.testexecutionside_.Mutable( GetArena());
}
inline std::string* NetlistFile_NetPointRecord::release_testexecutionside() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.testexecutionside_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.testexecutionside_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile_NetPointRecord::set_allocated_testexecutionside(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.testexecutionside_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.testexecutionside_.IsDefault()) {
    _impl_.testexecutionside_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.NetPointRecord.testExecutionSide)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NetlistFile

// optional string path = 1;
inline bool NetlistFile::has_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NetlistFile::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& NetlistFile::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.path)
}
inline std::string* NetlistFile::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.path)
  return _s;
}
inline const std::string& NetlistFile::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void NetlistFile::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.path_.Set(value, GetArena());
}
inline std::string* NetlistFile::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* NetlistFile::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.path)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.path_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.path_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.path)
}

// optional string name = 2;
inline bool NetlistFile::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NetlistFile::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& NetlistFile::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.name)
}
inline std::string* NetlistFile::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.name)
  return _s;
}
inline const std::string& NetlistFile::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void NetlistFile::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* NetlistFile::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* NetlistFile::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.name)
}

// optional string units = 3;
inline bool NetlistFile::has_units() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NetlistFile::clear_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.units_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& NetlistFile::units() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.units)
  return _internal_units();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NetlistFile::set_units(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.units_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.units)
}
inline std::string* NetlistFile::mutable_units() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_units();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.units)
  return _s;
}
inline const std::string& NetlistFile::_internal_units() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.units_.Get();
}
inline void NetlistFile::_internal_set_units(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.units_.Set(value, GetArena());
}
inline std::string* NetlistFile::_internal_mutable_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.units_.Mutable( GetArena());
}
inline std::string* NetlistFile::release_units() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.NetlistFile.units)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.units_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.units_.Set("", GetArena());
  }
  return released;
}
inline void NetlistFile::set_allocated_units(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.units_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.units_.IsDefault()) {
    _impl_.units_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.NetlistFile.units)
}

// optional bool optimized = 4;
inline bool NetlistFile::has_optimized() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void NetlistFile::clear_optimized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimized_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool NetlistFile::optimized() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.optimized)
  return _internal_optimized();
}
inline void NetlistFile::set_optimized(bool value) {
  _internal_set_optimized(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.optimized)
}
inline bool NetlistFile::_internal_optimized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optimized_;
}
inline void NetlistFile::_internal_set_optimized(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimized_ = value;
}

// optional .Odb.Lib.Protobuf.NetlistFile.Staggered staggered = 5;
inline bool NetlistFile::has_staggered() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void NetlistFile::clear_staggered() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggered_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::Odb::Lib::Protobuf::NetlistFile_Staggered NetlistFile::staggered() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.staggered)
  return _internal_staggered();
}
inline void NetlistFile::set_staggered(::Odb::Lib::Protobuf::NetlistFile_Staggered value) {
  _internal_set_staggered(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.NetlistFile.staggered)
}
inline ::Odb::Lib::Protobuf::NetlistFile_Staggered NetlistFile::_internal_staggered() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::NetlistFile_Staggered>(_impl_.staggered_);
}
inline void NetlistFile::_internal_set_staggered(::Odb::Lib::Protobuf::NetlistFile_Staggered value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.staggered_ = value;
}

// repeated .Odb.Lib.Protobuf.NetlistFile.NetRecord netRecordss = 6;
inline int NetlistFile::_internal_netrecordss_size() const {
  return _internal_netrecordss().size();
}
inline int NetlistFile::netrecordss_size() const {
  return _internal_netrecordss_size();
}
inline void NetlistFile::clear_netrecordss() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netrecordss_.Clear();
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetRecord* NetlistFile::mutable_netrecordss(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.netRecordss)
  return _internal_mutable_netrecordss()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>* NetlistFile::mutable_netrecordss()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.NetlistFile.netRecordss)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_netrecordss();
}
inline const ::Odb::Lib::Protobuf::NetlistFile_NetRecord& NetlistFile::netrecordss(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.netRecordss)
  return _internal_netrecordss().Get(index);
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetRecord* NetlistFile::add_netrecordss() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::NetlistFile_NetRecord* _add = _internal_mutable_netrecordss()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.NetlistFile.netRecordss)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>& NetlistFile::netrecordss() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.NetlistFile.netRecordss)
  return _internal_netrecordss();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>&
NetlistFile::_internal_netrecordss() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netrecordss_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetRecord>*
NetlistFile::_internal_mutable_netrecordss() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.netrecordss_;
}

// map<string, .Odb.Lib.Protobuf.NetlistFile.NetRecord> netRecordsByName = 7;
inline int NetlistFile::_internal_netrecordsbyname_size() const {
  return _internal_netrecordsbyname().size();
}
inline int NetlistFile::netrecordsbyname_size() const {
  return _internal_netrecordsbyname_size();
}
inline void NetlistFile::clear_netrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netrecordsbyname_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>& NetlistFile::_internal_netrecordsbyname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netrecordsbyname_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>& NetlistFile::netrecordsbyname() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:Odb.Lib.Protobuf.NetlistFile.netRecordsByName)
  return _internal_netrecordsbyname();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>* NetlistFile::_internal_mutable_netrecordsbyname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.netrecordsbyname_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::Odb::Lib::Protobuf::NetlistFile_NetRecord>* NetlistFile::mutable_netrecordsbyname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:Odb.Lib.Protobuf.NetlistFile.netRecordsByName)
  return _internal_mutable_netrecordsbyname();
}

// repeated .Odb.Lib.Protobuf.NetlistFile.NetPointRecord netPointRecords = 8;
inline int NetlistFile::_internal_netpointrecords_size() const {
  return _internal_netpointrecords().size();
}
inline int NetlistFile::netpointrecords_size() const {
  return _internal_netpointrecords_size();
}
inline void NetlistFile::clear_netpointrecords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.netpointrecords_.Clear();
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord* NetlistFile::mutable_netpointrecords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.NetlistFile.netPointRecords)
  return _internal_mutable_netpointrecords()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>* NetlistFile::mutable_netpointrecords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.NetlistFile.netPointRecords)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_netpointrecords();
}
inline const ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord& NetlistFile::netpointrecords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.NetlistFile.netPointRecords)
  return _internal_netpointrecords().Get(index);
}
inline ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord* NetlistFile::add_netpointrecords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord* _add = _internal_mutable_netpointrecords()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.NetlistFile.netPointRecords)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>& NetlistFile::netpointrecords() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.NetlistFile.netPointRecords)
  return _internal_netpointrecords();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>&
NetlistFile::_internal_netpointrecords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.netpointrecords_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord>*
NetlistFile::_internal_mutable_netpointrecords() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.netpointrecords_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide>() {
  return ::Odb::Lib::Protobuf::NetlistFile_NetPointRecord_AccessSide_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::NetlistFile_Staggered> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::NetlistFile_Staggered>() {
  return ::Odb::Lib::Protobuf::NetlistFile_Staggered_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // netlistfile_2eproto_2epb_2eh
