// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: matrixfile.proto
// Protobuf C++ Version: 5.29.2

#ifndef matrixfile_2eproto_2epb_2eh
#define matrixfile_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_matrixfile_2eproto ODBDESIGN_EXPORT

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ODBDESIGN_EXPORT TableStruct_matrixfile_2eproto {
  static const ::uint32_t offsets[];
};
ODBDESIGN_EXPORT extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_matrixfile_2eproto;
namespace Odb {
namespace Lib {
namespace Protobuf {
class MatrixFile;
struct MatrixFileDefaultTypeInternal;
ODBDESIGN_EXPORT extern MatrixFileDefaultTypeInternal _MatrixFile_default_instance_;
class MatrixFile_LayerRecord;
struct MatrixFile_LayerRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern MatrixFile_LayerRecordDefaultTypeInternal _MatrixFile_LayerRecord_default_instance_;
class MatrixFile_StepRecord;
struct MatrixFile_StepRecordDefaultTypeInternal;
ODBDESIGN_EXPORT extern MatrixFile_StepRecordDefaultTypeInternal _MatrixFile_StepRecord_default_instance_;
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Odb {
namespace Lib {
namespace Protobuf {
enum MatrixFile_LayerRecord_Type : int {
  MatrixFile_LayerRecord_Type_Signal = 0,
  MatrixFile_LayerRecord_Type_PowerGround = 1,
  MatrixFile_LayerRecord_Type_Dielectric = 2,
  MatrixFile_LayerRecord_Type_Mixed = 3,
  MatrixFile_LayerRecord_Type_SolderMask = 4,
  MatrixFile_LayerRecord_Type_SolderPaste = 5,
  MatrixFile_LayerRecord_Type_SilkScreen = 6,
  MatrixFile_LayerRecord_Type_Drill = 7,
  MatrixFile_LayerRecord_Type_Rout = 8,
  MatrixFile_LayerRecord_Type_Document = 9,
  MatrixFile_LayerRecord_Type_Component = 10,
  MatrixFile_LayerRecord_Type_Mask = 11,
  MatrixFile_LayerRecord_Type_ConductivePaste = 12,
  MatrixFile_LayerRecord_Type_MatrixFile_LayerRecord_Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MatrixFile_LayerRecord_Type_MatrixFile_LayerRecord_Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool MatrixFile_LayerRecord_Type_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t MatrixFile_LayerRecord_Type_internal_data_[];
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord_Type_Type_MIN = static_cast<MatrixFile_LayerRecord_Type>(0);
constexpr MatrixFile_LayerRecord_Type MatrixFile_LayerRecord_Type_Type_MAX = static_cast<MatrixFile_LayerRecord_Type>(12);
constexpr int MatrixFile_LayerRecord_Type_Type_ARRAYSIZE = 12 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
MatrixFile_LayerRecord_Type_descriptor();
template <typename T>
const std::string& MatrixFile_LayerRecord_Type_Name(T value) {
  static_assert(std::is_same<T, MatrixFile_LayerRecord_Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return MatrixFile_LayerRecord_Type_Name(static_cast<MatrixFile_LayerRecord_Type>(value));
}
template <>
inline const std::string& MatrixFile_LayerRecord_Type_Name(MatrixFile_LayerRecord_Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MatrixFile_LayerRecord_Type_descriptor,
                                                 0, 12>(
      static_cast<int>(value));
}
inline bool MatrixFile_LayerRecord_Type_Parse(absl::string_view name, MatrixFile_LayerRecord_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixFile_LayerRecord_Type>(
      MatrixFile_LayerRecord_Type_descriptor(), name, value);
}
enum MatrixFile_LayerRecord_Context : int {
  MatrixFile_LayerRecord_Context_Board = 0,
  MatrixFile_LayerRecord_Context_Misc = 1,
  MatrixFile_LayerRecord_Context_MatrixFile_LayerRecord_Context_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MatrixFile_LayerRecord_Context_MatrixFile_LayerRecord_Context_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool MatrixFile_LayerRecord_Context_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t MatrixFile_LayerRecord_Context_internal_data_[];
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord_Context_Context_MIN = static_cast<MatrixFile_LayerRecord_Context>(0);
constexpr MatrixFile_LayerRecord_Context MatrixFile_LayerRecord_Context_Context_MAX = static_cast<MatrixFile_LayerRecord_Context>(1);
constexpr int MatrixFile_LayerRecord_Context_Context_ARRAYSIZE = 1 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
MatrixFile_LayerRecord_Context_descriptor();
template <typename T>
const std::string& MatrixFile_LayerRecord_Context_Name(T value) {
  static_assert(std::is_same<T, MatrixFile_LayerRecord_Context>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Context_Name().");
  return MatrixFile_LayerRecord_Context_Name(static_cast<MatrixFile_LayerRecord_Context>(value));
}
template <>
inline const std::string& MatrixFile_LayerRecord_Context_Name(MatrixFile_LayerRecord_Context value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MatrixFile_LayerRecord_Context_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool MatrixFile_LayerRecord_Context_Parse(absl::string_view name, MatrixFile_LayerRecord_Context* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixFile_LayerRecord_Context>(
      MatrixFile_LayerRecord_Context_descriptor(), name, value);
}
enum MatrixFile_LayerRecord_DielectricType : int {
  MatrixFile_LayerRecord_DielectricType_None = 0,
  MatrixFile_LayerRecord_DielectricType_Prepreg = 1,
  MatrixFile_LayerRecord_DielectricType_Core = 2,
  MatrixFile_LayerRecord_DielectricType_MatrixFile_LayerRecord_DielectricType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MatrixFile_LayerRecord_DielectricType_MatrixFile_LayerRecord_DielectricType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool MatrixFile_LayerRecord_DielectricType_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t MatrixFile_LayerRecord_DielectricType_internal_data_[];
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord_DielectricType_DielectricType_MIN = static_cast<MatrixFile_LayerRecord_DielectricType>(0);
constexpr MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord_DielectricType_DielectricType_MAX = static_cast<MatrixFile_LayerRecord_DielectricType>(2);
constexpr int MatrixFile_LayerRecord_DielectricType_DielectricType_ARRAYSIZE = 2 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
MatrixFile_LayerRecord_DielectricType_descriptor();
template <typename T>
const std::string& MatrixFile_LayerRecord_DielectricType_Name(T value) {
  static_assert(std::is_same<T, MatrixFile_LayerRecord_DielectricType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to DielectricType_Name().");
  return MatrixFile_LayerRecord_DielectricType_Name(static_cast<MatrixFile_LayerRecord_DielectricType>(value));
}
template <>
inline const std::string& MatrixFile_LayerRecord_DielectricType_Name(MatrixFile_LayerRecord_DielectricType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MatrixFile_LayerRecord_DielectricType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool MatrixFile_LayerRecord_DielectricType_Parse(absl::string_view name, MatrixFile_LayerRecord_DielectricType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixFile_LayerRecord_DielectricType>(
      MatrixFile_LayerRecord_DielectricType_descriptor(), name, value);
}
enum MatrixFile_LayerRecord_Form : int {
  MatrixFile_LayerRecord_Form_Rigid = 0,
  MatrixFile_LayerRecord_Form_Flex = 1,
  MatrixFile_LayerRecord_Form_MatrixFile_LayerRecord_Form_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MatrixFile_LayerRecord_Form_MatrixFile_LayerRecord_Form_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

ODBDESIGN_EXPORT bool MatrixFile_LayerRecord_Form_IsValid(int value);
ODBDESIGN_EXPORT extern const uint32_t MatrixFile_LayerRecord_Form_internal_data_[];
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord_Form_Form_MIN = static_cast<MatrixFile_LayerRecord_Form>(0);
constexpr MatrixFile_LayerRecord_Form MatrixFile_LayerRecord_Form_Form_MAX = static_cast<MatrixFile_LayerRecord_Form>(1);
constexpr int MatrixFile_LayerRecord_Form_Form_ARRAYSIZE = 1 + 1;
ODBDESIGN_EXPORT const ::google::protobuf::EnumDescriptor*
MatrixFile_LayerRecord_Form_descriptor();
template <typename T>
const std::string& MatrixFile_LayerRecord_Form_Name(T value) {
  static_assert(std::is_same<T, MatrixFile_LayerRecord_Form>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Form_Name().");
  return MatrixFile_LayerRecord_Form_Name(static_cast<MatrixFile_LayerRecord_Form>(value));
}
template <>
inline const std::string& MatrixFile_LayerRecord_Form_Name(MatrixFile_LayerRecord_Form value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MatrixFile_LayerRecord_Form_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool MatrixFile_LayerRecord_Form_Parse(absl::string_view name, MatrixFile_LayerRecord_Form* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixFile_LayerRecord_Form>(
      MatrixFile_LayerRecord_Form_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ODBDESIGN_EXPORT MatrixFile_StepRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.MatrixFile.StepRecord) */ {
 public:
  inline MatrixFile_StepRecord() : MatrixFile_StepRecord(nullptr) {}
  ~MatrixFile_StepRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MatrixFile_StepRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MatrixFile_StepRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatrixFile_StepRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline MatrixFile_StepRecord(const MatrixFile_StepRecord& from) : MatrixFile_StepRecord(nullptr, from) {}
  inline MatrixFile_StepRecord(MatrixFile_StepRecord&& from) noexcept
      : MatrixFile_StepRecord(nullptr, std::move(from)) {}
  inline MatrixFile_StepRecord& operator=(const MatrixFile_StepRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatrixFile_StepRecord& operator=(MatrixFile_StepRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatrixFile_StepRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatrixFile_StepRecord* internal_default_instance() {
    return reinterpret_cast<const MatrixFile_StepRecord*>(
        &_MatrixFile_StepRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MatrixFile_StepRecord& a, MatrixFile_StepRecord& b) { a.Swap(&b); }
  inline void Swap(MatrixFile_StepRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatrixFile_StepRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatrixFile_StepRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MatrixFile_StepRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatrixFile_StepRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatrixFile_StepRecord& from) { MatrixFile_StepRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MatrixFile_StepRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.MatrixFile.StepRecord"; }

 protected:
  explicit MatrixFile_StepRecord(::google::protobuf::Arena* arena);
  MatrixFile_StepRecord(::google::protobuf::Arena* arena, const MatrixFile_StepRecord& from);
  MatrixFile_StepRecord(::google::protobuf::Arena* arena, MatrixFile_StepRecord&& from) noexcept
      : MatrixFile_StepRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 3,
    kColumnFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint32 column = 1;
  void clear_column() ;
  ::uint32_t column() const;
  void set_column(::uint32_t value);

  private:
  ::uint32_t _internal_column() const;
  void _internal_set_column(::uint32_t value);

  public:
  // uint32 id = 2;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.MatrixFile.StepRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MatrixFile_StepRecord& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t column_;
    ::uint32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_matrixfile_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT MatrixFile_LayerRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.MatrixFile.LayerRecord) */ {
 public:
  inline MatrixFile_LayerRecord() : MatrixFile_LayerRecord(nullptr) {}
  ~MatrixFile_LayerRecord() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MatrixFile_LayerRecord* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MatrixFile_LayerRecord));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatrixFile_LayerRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline MatrixFile_LayerRecord(const MatrixFile_LayerRecord& from) : MatrixFile_LayerRecord(nullptr, from) {}
  inline MatrixFile_LayerRecord(MatrixFile_LayerRecord&& from) noexcept
      : MatrixFile_LayerRecord(nullptr, std::move(from)) {}
  inline MatrixFile_LayerRecord& operator=(const MatrixFile_LayerRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatrixFile_LayerRecord& operator=(MatrixFile_LayerRecord&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatrixFile_LayerRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatrixFile_LayerRecord* internal_default_instance() {
    return reinterpret_cast<const MatrixFile_LayerRecord*>(
        &_MatrixFile_LayerRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MatrixFile_LayerRecord& a, MatrixFile_LayerRecord& b) { a.Swap(&b); }
  inline void Swap(MatrixFile_LayerRecord* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatrixFile_LayerRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatrixFile_LayerRecord* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MatrixFile_LayerRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatrixFile_LayerRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatrixFile_LayerRecord& from) { MatrixFile_LayerRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MatrixFile_LayerRecord* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.MatrixFile.LayerRecord"; }

 protected:
  explicit MatrixFile_LayerRecord(::google::protobuf::Arena* arena);
  MatrixFile_LayerRecord(::google::protobuf::Arena* arena, const MatrixFile_LayerRecord& from);
  MatrixFile_LayerRecord(::google::protobuf::Arena* arena, MatrixFile_LayerRecord&& from) noexcept
      : MatrixFile_LayerRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Type = MatrixFile_LayerRecord_Type;
  static constexpr Type Signal = MatrixFile_LayerRecord_Type_Signal;
  static constexpr Type PowerGround = MatrixFile_LayerRecord_Type_PowerGround;
  static constexpr Type Dielectric = MatrixFile_LayerRecord_Type_Dielectric;
  static constexpr Type Mixed = MatrixFile_LayerRecord_Type_Mixed;
  static constexpr Type SolderMask = MatrixFile_LayerRecord_Type_SolderMask;
  static constexpr Type SolderPaste = MatrixFile_LayerRecord_Type_SolderPaste;
  static constexpr Type SilkScreen = MatrixFile_LayerRecord_Type_SilkScreen;
  static constexpr Type Drill = MatrixFile_LayerRecord_Type_Drill;
  static constexpr Type Rout = MatrixFile_LayerRecord_Type_Rout;
  static constexpr Type Document = MatrixFile_LayerRecord_Type_Document;
  static constexpr Type Component = MatrixFile_LayerRecord_Type_Component;
  static constexpr Type Mask = MatrixFile_LayerRecord_Type_Mask;
  static constexpr Type ConductivePaste = MatrixFile_LayerRecord_Type_ConductivePaste;
  static inline bool Type_IsValid(int value) {
    return MatrixFile_LayerRecord_Type_IsValid(value);
  }
  static constexpr Type Type_MIN = MatrixFile_LayerRecord_Type_Type_MIN;
  static constexpr Type Type_MAX = MatrixFile_LayerRecord_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE = MatrixFile_LayerRecord_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Type_descriptor() {
    return MatrixFile_LayerRecord_Type_descriptor();
  }
  template <typename T>
  static inline const std::string& Type_Name(T value) {
    return MatrixFile_LayerRecord_Type_Name(value);
  }
  static inline bool Type_Parse(absl::string_view name, Type* value) {
    return MatrixFile_LayerRecord_Type_Parse(name, value);
  }
  using Context = MatrixFile_LayerRecord_Context;
  static constexpr Context Board = MatrixFile_LayerRecord_Context_Board;
  static constexpr Context Misc = MatrixFile_LayerRecord_Context_Misc;
  static inline bool Context_IsValid(int value) {
    return MatrixFile_LayerRecord_Context_IsValid(value);
  }
  static constexpr Context Context_MIN = MatrixFile_LayerRecord_Context_Context_MIN;
  static constexpr Context Context_MAX = MatrixFile_LayerRecord_Context_Context_MAX;
  static constexpr int Context_ARRAYSIZE = MatrixFile_LayerRecord_Context_Context_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Context_descriptor() {
    return MatrixFile_LayerRecord_Context_descriptor();
  }
  template <typename T>
  static inline const std::string& Context_Name(T value) {
    return MatrixFile_LayerRecord_Context_Name(value);
  }
  static inline bool Context_Parse(absl::string_view name, Context* value) {
    return MatrixFile_LayerRecord_Context_Parse(name, value);
  }
  using DielectricType = MatrixFile_LayerRecord_DielectricType;
  static constexpr DielectricType None = MatrixFile_LayerRecord_DielectricType_None;
  static constexpr DielectricType Prepreg = MatrixFile_LayerRecord_DielectricType_Prepreg;
  static constexpr DielectricType Core = MatrixFile_LayerRecord_DielectricType_Core;
  static inline bool DielectricType_IsValid(int value) {
    return MatrixFile_LayerRecord_DielectricType_IsValid(value);
  }
  static constexpr DielectricType DielectricType_MIN = MatrixFile_LayerRecord_DielectricType_DielectricType_MIN;
  static constexpr DielectricType DielectricType_MAX = MatrixFile_LayerRecord_DielectricType_DielectricType_MAX;
  static constexpr int DielectricType_ARRAYSIZE = MatrixFile_LayerRecord_DielectricType_DielectricType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* DielectricType_descriptor() {
    return MatrixFile_LayerRecord_DielectricType_descriptor();
  }
  template <typename T>
  static inline const std::string& DielectricType_Name(T value) {
    return MatrixFile_LayerRecord_DielectricType_Name(value);
  }
  static inline bool DielectricType_Parse(absl::string_view name, DielectricType* value) {
    return MatrixFile_LayerRecord_DielectricType_Parse(name, value);
  }
  using Form = MatrixFile_LayerRecord_Form;
  static constexpr Form Rigid = MatrixFile_LayerRecord_Form_Rigid;
  static constexpr Form Flex = MatrixFile_LayerRecord_Form_Flex;
  static inline bool Form_IsValid(int value) {
    return MatrixFile_LayerRecord_Form_IsValid(value);
  }
  static constexpr Form Form_MIN = MatrixFile_LayerRecord_Form_Form_MIN;
  static constexpr Form Form_MAX = MatrixFile_LayerRecord_Form_Form_MAX;
  static constexpr int Form_ARRAYSIZE = MatrixFile_LayerRecord_Form_Form_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Form_descriptor() {
    return MatrixFile_LayerRecord_Form_descriptor();
  }
  template <typename T>
  static inline const std::string& Form_Name(T value) {
    return MatrixFile_LayerRecord_Form_Name(value);
  }
  static inline bool Form_Parse(absl::string_view name, Form* value) {
    return MatrixFile_LayerRecord_Form_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 4,
    kDielectricNameFieldNumber = 7,
    kStartNameFieldNumber = 12,
    kEndNameFieldNumber = 13,
    kOldNameFieldNumber = 14,
    kAddTypeFieldNumber = 15,
    kRowFieldNumber = 1,
    kContextFieldNumber = 2,
    kTypeFieldNumber = 3,
    kPolarityFieldNumber = 5,
    kDielectricTypeFieldNumber = 6,
    kFormFieldNumber = 8,
    kCuTopFieldNumber = 9,
    kCuBottomFieldNumber = 10,
    kRefFieldNumber = 11,
    kIdFieldNumber = 17,
  };
  // string name = 4;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string dielectricName = 7;
  void clear_dielectricname() ;
  const std::string& dielectricname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dielectricname(Arg_&& arg, Args_... args);
  std::string* mutable_dielectricname();
  PROTOBUF_NODISCARD std::string* release_dielectricname();
  void set_allocated_dielectricname(std::string* value);

  private:
  const std::string& _internal_dielectricname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dielectricname(
      const std::string& value);
  std::string* _internal_mutable_dielectricname();

  public:
  // string startName = 12;
  void clear_startname() ;
  const std::string& startname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_startname(Arg_&& arg, Args_... args);
  std::string* mutable_startname();
  PROTOBUF_NODISCARD std::string* release_startname();
  void set_allocated_startname(std::string* value);

  private:
  const std::string& _internal_startname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_startname(
      const std::string& value);
  std::string* _internal_mutable_startname();

  public:
  // string endName = 13;
  void clear_endname() ;
  const std::string& endname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_endname(Arg_&& arg, Args_... args);
  std::string* mutable_endname();
  PROTOBUF_NODISCARD std::string* release_endname();
  void set_allocated_endname(std::string* value);

  private:
  const std::string& _internal_endname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_endname(
      const std::string& value);
  std::string* _internal_mutable_endname();

  public:
  // string oldName = 14;
  void clear_oldname() ;
  const std::string& oldname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_oldname(Arg_&& arg, Args_... args);
  std::string* mutable_oldname();
  PROTOBUF_NODISCARD std::string* release_oldname();
  void set_allocated_oldname(std::string* value);

  private:
  const std::string& _internal_oldname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oldname(
      const std::string& value);
  std::string* _internal_mutable_oldname();

  public:
  // string addType = 15;
  void clear_addtype() ;
  const std::string& addtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addtype(Arg_&& arg, Args_... args);
  std::string* mutable_addtype();
  PROTOBUF_NODISCARD std::string* release_addtype();
  void set_allocated_addtype(std::string* value);

  private:
  const std::string& _internal_addtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addtype(
      const std::string& value);
  std::string* _internal_mutable_addtype();

  public:
  // uint32 row = 1;
  void clear_row() ;
  ::uint32_t row() const;
  void set_row(::uint32_t value);

  private:
  ::uint32_t _internal_row() const;
  void _internal_set_row(::uint32_t value);

  public:
  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Context context = 2;
  void clear_context() ;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context context() const;
  void set_context(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context value);

  private:
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context _internal_context() const;
  void _internal_set_context(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context value);

  public:
  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Type type = 3;
  void clear_type() ;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type type() const;
  void set_type(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type value);

  private:
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type _internal_type() const;
  void _internal_set_type(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type value);

  public:
  // .Odb.Lib.Protobuf.Polarity polarity = 5;
  void clear_polarity() ;
  ::Odb::Lib::Protobuf::Polarity polarity() const;
  void set_polarity(::Odb::Lib::Protobuf::Polarity value);

  private:
  ::Odb::Lib::Protobuf::Polarity _internal_polarity() const;
  void _internal_set_polarity(::Odb::Lib::Protobuf::Polarity value);

  public:
  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.DielectricType dielectricType = 6;
  void clear_dielectrictype() ;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType dielectrictype() const;
  void set_dielectrictype(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType value);

  private:
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType _internal_dielectrictype() const;
  void _internal_set_dielectrictype(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType value);

  public:
  // .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Form form = 8;
  void clear_form() ;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form form() const;
  void set_form(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form value);

  private:
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form _internal_form() const;
  void _internal_set_form(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form value);

  public:
  // uint32 cuTop = 9;
  void clear_cutop() ;
  ::uint32_t cutop() const;
  void set_cutop(::uint32_t value);

  private:
  ::uint32_t _internal_cutop() const;
  void _internal_set_cutop(::uint32_t value);

  public:
  // uint32 cuBottom = 10;
  void clear_cubottom() ;
  ::uint32_t cubottom() const;
  void set_cubottom(::uint32_t value);

  private:
  ::uint32_t _internal_cubottom() const;
  void _internal_set_cubottom(::uint32_t value);

  public:
  // uint32 ref = 11;
  void clear_ref() ;
  ::uint32_t ref() const;
  void set_ref(::uint32_t value);

  private:
  ::uint32_t _internal_ref() const;
  void _internal_set_ref(::uint32_t value);

  public:
  // uint32 id = 17;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.MatrixFile.LayerRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 16, 0,
      112, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MatrixFile_LayerRecord& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr dielectricname_;
    ::google::protobuf::internal::ArenaStringPtr startname_;
    ::google::protobuf::internal::ArenaStringPtr endname_;
    ::google::protobuf::internal::ArenaStringPtr oldname_;
    ::google::protobuf::internal::ArenaStringPtr addtype_;
    ::uint32_t row_;
    int context_;
    int type_;
    int polarity_;
    int dielectrictype_;
    int form_;
    ::uint32_t cutop_;
    ::uint32_t cubottom_;
    ::uint32_t ref_;
    ::uint32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_matrixfile_2eproto;
};
// -------------------------------------------------------------------

class ODBDESIGN_EXPORT MatrixFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Odb.Lib.Protobuf.MatrixFile) */ {
 public:
  inline MatrixFile() : MatrixFile(nullptr) {}
  ~MatrixFile() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MatrixFile* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MatrixFile));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MatrixFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline MatrixFile(const MatrixFile& from) : MatrixFile(nullptr, from) {}
  inline MatrixFile(MatrixFile&& from) noexcept
      : MatrixFile(nullptr, std::move(from)) {}
  inline MatrixFile& operator=(const MatrixFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatrixFile& operator=(MatrixFile&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MatrixFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const MatrixFile* internal_default_instance() {
    return reinterpret_cast<const MatrixFile*>(
        &_MatrixFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MatrixFile& a, MatrixFile& b) { a.Swap(&b); }
  inline void Swap(MatrixFile* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MatrixFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MatrixFile* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MatrixFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MatrixFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MatrixFile& from) { MatrixFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MatrixFile* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Odb.Lib.Protobuf.MatrixFile"; }

 protected:
  explicit MatrixFile(::google::protobuf::Arena* arena);
  MatrixFile(::google::protobuf::Arena* arena, const MatrixFile& from);
  MatrixFile(::google::protobuf::Arena* arena, MatrixFile&& from) noexcept
      : MatrixFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using StepRecord = MatrixFile_StepRecord;
  using LayerRecord = MatrixFile_LayerRecord;

  // accessors -------------------------------------------------------
  enum : int {
    kStepsFieldNumber = 1,
    kLayersFieldNumber = 2,
  };
  // repeated .Odb.Lib.Protobuf.MatrixFile.StepRecord steps = 1;
  int steps_size() const;
  private:
  int _internal_steps_size() const;

  public:
  void clear_steps() ;
  ::Odb::Lib::Protobuf::MatrixFile_StepRecord* mutable_steps(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>* mutable_steps();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>& _internal_steps() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>* _internal_mutable_steps();
  public:
  const ::Odb::Lib::Protobuf::MatrixFile_StepRecord& steps(int index) const;
  ::Odb::Lib::Protobuf::MatrixFile_StepRecord* add_steps();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>& steps() const;
  // repeated .Odb.Lib.Protobuf.MatrixFile.LayerRecord layers = 2;
  int layers_size() const;
  private:
  int _internal_layers_size() const;

  public:
  void clear_layers() ;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord* mutable_layers(int index);
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>* mutable_layers();

  private:
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>& _internal_layers() const;
  ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>* _internal_mutable_layers();
  public:
  const ::Odb::Lib::Protobuf::MatrixFile_LayerRecord& layers(int index) const;
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord* add_layers();
  const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>& layers() const;
  // @@protoc_insertion_point(class_scope:Odb.Lib.Protobuf.MatrixFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MatrixFile& from_msg);
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::MatrixFile_StepRecord > steps_;
    ::google::protobuf::RepeatedPtrField< ::Odb::Lib::Protobuf::MatrixFile_LayerRecord > layers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_matrixfile_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MatrixFile_StepRecord

// uint32 column = 1;
inline void MatrixFile_StepRecord::clear_column() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_ = 0u;
}
inline ::uint32_t MatrixFile_StepRecord::column() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.StepRecord.column)
  return _internal_column();
}
inline void MatrixFile_StepRecord::set_column(::uint32_t value) {
  _internal_set_column(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.StepRecord.column)
}
inline ::uint32_t MatrixFile_StepRecord::_internal_column() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.column_;
}
inline void MatrixFile_StepRecord::_internal_set_column(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_ = value;
}

// uint32 id = 2;
inline void MatrixFile_StepRecord::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t MatrixFile_StepRecord::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.StepRecord.id)
  return _internal_id();
}
inline void MatrixFile_StepRecord::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.StepRecord.id)
}
inline ::uint32_t MatrixFile_StepRecord::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void MatrixFile_StepRecord::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// string name = 3;
inline void MatrixFile_StepRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& MatrixFile_StepRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.StepRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_StepRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.StepRecord.name)
}
inline std::string* MatrixFile_StepRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.StepRecord.name)
  return _s;
}
inline const std::string& MatrixFile_StepRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void MatrixFile_StepRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* MatrixFile_StepRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* MatrixFile_StepRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.StepRecord.name)
  return _impl_.name_.Release();
}
inline void MatrixFile_StepRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.StepRecord.name)
}

// -------------------------------------------------------------------

// MatrixFile_LayerRecord

// uint32 row = 1;
inline void MatrixFile_LayerRecord::clear_row() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = 0u;
}
inline ::uint32_t MatrixFile_LayerRecord::row() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.row)
  return _internal_row();
}
inline void MatrixFile_LayerRecord::set_row(::uint32_t value) {
  _internal_set_row(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.row)
}
inline ::uint32_t MatrixFile_LayerRecord::_internal_row() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.row_;
}
inline void MatrixFile_LayerRecord::_internal_set_row(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.row_ = value;
}

// .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Context context = 2;
inline void MatrixFile_LayerRecord::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_ = 0;
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::context() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.context)
  return _internal_context();
}
inline void MatrixFile_LayerRecord::set_context(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context value) {
  _internal_set_context(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.context)
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context MatrixFile_LayerRecord::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context>(_impl_.context_);
}
inline void MatrixFile_LayerRecord::_internal_set_context(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.context_ = value;
}

// .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Type type = 3;
inline void MatrixFile_LayerRecord::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::type() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.type)
  return _internal_type();
}
inline void MatrixFile_LayerRecord::set_type(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.type)
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type MatrixFile_LayerRecord::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type>(_impl_.type_);
}
inline void MatrixFile_LayerRecord::_internal_set_type(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string name = 4;
inline void MatrixFile_LayerRecord::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.name)
}
inline std::string* MatrixFile_LayerRecord::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.name)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.name)
  return _impl_.name_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.name)
}

// .Odb.Lib.Protobuf.Polarity polarity = 5;
inline void MatrixFile_LayerRecord::clear_polarity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.polarity_ = 0;
}
inline ::Odb::Lib::Protobuf::Polarity MatrixFile_LayerRecord::polarity() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.polarity)
  return _internal_polarity();
}
inline void MatrixFile_LayerRecord::set_polarity(::Odb::Lib::Protobuf::Polarity value) {
  _internal_set_polarity(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.polarity)
}
inline ::Odb::Lib::Protobuf::Polarity MatrixFile_LayerRecord::_internal_polarity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::Polarity>(_impl_.polarity_);
}
inline void MatrixFile_LayerRecord::_internal_set_polarity(::Odb::Lib::Protobuf::Polarity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.polarity_ = value;
}

// .Odb.Lib.Protobuf.MatrixFile.LayerRecord.DielectricType dielectricType = 6;
inline void MatrixFile_LayerRecord::clear_dielectrictype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectrictype_ = 0;
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::dielectrictype() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricType)
  return _internal_dielectrictype();
}
inline void MatrixFile_LayerRecord::set_dielectrictype(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType value) {
  _internal_set_dielectrictype(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricType)
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType MatrixFile_LayerRecord::_internal_dielectrictype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType>(_impl_.dielectrictype_);
}
inline void MatrixFile_LayerRecord::_internal_set_dielectrictype(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectrictype_ = value;
}

// string dielectricName = 7;
inline void MatrixFile_LayerRecord::clear_dielectricname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectricname_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::dielectricname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName)
  return _internal_dielectricname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_dielectricname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectricname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName)
}
inline std::string* MatrixFile_LayerRecord::mutable_dielectricname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dielectricname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_dielectricname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dielectricname_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_dielectricname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectricname_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_dielectricname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dielectricname_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_dielectricname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName)
  return _impl_.dielectricname_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_dielectricname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dielectricname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dielectricname_.IsDefault()) {
    _impl_.dielectricname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.dielectricName)
}

// .Odb.Lib.Protobuf.MatrixFile.LayerRecord.Form form = 8;
inline void MatrixFile_LayerRecord::clear_form() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.form_ = 0;
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::form() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.form)
  return _internal_form();
}
inline void MatrixFile_LayerRecord::set_form(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form value) {
  _internal_set_form(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.form)
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form MatrixFile_LayerRecord::_internal_form() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form>(_impl_.form_);
}
inline void MatrixFile_LayerRecord::_internal_set_form(::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.form_ = value;
}

// uint32 cuTop = 9;
inline void MatrixFile_LayerRecord::clear_cutop() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cutop_ = 0u;
}
inline ::uint32_t MatrixFile_LayerRecord::cutop() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.cuTop)
  return _internal_cutop();
}
inline void MatrixFile_LayerRecord::set_cutop(::uint32_t value) {
  _internal_set_cutop(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.cuTop)
}
inline ::uint32_t MatrixFile_LayerRecord::_internal_cutop() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cutop_;
}
inline void MatrixFile_LayerRecord::_internal_set_cutop(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cutop_ = value;
}

// uint32 cuBottom = 10;
inline void MatrixFile_LayerRecord::clear_cubottom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cubottom_ = 0u;
}
inline ::uint32_t MatrixFile_LayerRecord::cubottom() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.cuBottom)
  return _internal_cubottom();
}
inline void MatrixFile_LayerRecord::set_cubottom(::uint32_t value) {
  _internal_set_cubottom(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.cuBottom)
}
inline ::uint32_t MatrixFile_LayerRecord::_internal_cubottom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cubottom_;
}
inline void MatrixFile_LayerRecord::_internal_set_cubottom(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cubottom_ = value;
}

// uint32 ref = 11;
inline void MatrixFile_LayerRecord::clear_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_ = 0u;
}
inline ::uint32_t MatrixFile_LayerRecord::ref() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.ref)
  return _internal_ref();
}
inline void MatrixFile_LayerRecord::set_ref(::uint32_t value) {
  _internal_set_ref(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.ref)
}
inline ::uint32_t MatrixFile_LayerRecord::_internal_ref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ref_;
}
inline void MatrixFile_LayerRecord::_internal_set_ref(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_ = value;
}

// string startName = 12;
inline void MatrixFile_LayerRecord::clear_startname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startname_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::startname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName)
  return _internal_startname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_startname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName)
}
inline std::string* MatrixFile_LayerRecord::mutable_startname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_startname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_startname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.startname_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_startname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startname_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_startname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.startname_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_startname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName)
  return _impl_.startname_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_startname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.startname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.startname_.IsDefault()) {
    _impl_.startname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.startName)
}

// string endName = 13;
inline void MatrixFile_LayerRecord::clear_endname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endname_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::endname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName)
  return _internal_endname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_endname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName)
}
inline std::string* MatrixFile_LayerRecord::mutable_endname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_endname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_endname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.endname_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_endname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endname_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_endname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.endname_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_endname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName)
  return _impl_.endname_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_endname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.endname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.endname_.IsDefault()) {
    _impl_.endname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.endName)
}

// string oldName = 14;
inline void MatrixFile_LayerRecord::clear_oldname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldname_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::oldname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName)
  return _internal_oldname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_oldname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName)
}
inline std::string* MatrixFile_LayerRecord::mutable_oldname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_oldname();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_oldname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oldname_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_oldname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldname_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_oldname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.oldname_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_oldname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName)
  return _impl_.oldname_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_oldname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oldname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.oldname_.IsDefault()) {
    _impl_.oldname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.oldName)
}

// string addType = 15;
inline void MatrixFile_LayerRecord::clear_addtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtype_.ClearToEmpty();
}
inline const std::string& MatrixFile_LayerRecord::addtype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType)
  return _internal_addtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MatrixFile_LayerRecord::set_addtype(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType)
}
inline std::string* MatrixFile_LayerRecord::mutable_addtype() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addtype();
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType)
  return _s;
}
inline const std::string& MatrixFile_LayerRecord::_internal_addtype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addtype_.Get();
}
inline void MatrixFile_LayerRecord::_internal_set_addtype(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtype_.Set(value, GetArena());
}
inline std::string* MatrixFile_LayerRecord::_internal_mutable_addtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addtype_.Mutable( GetArena());
}
inline std::string* MatrixFile_LayerRecord::release_addtype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType)
  return _impl_.addtype_.Release();
}
inline void MatrixFile_LayerRecord::set_allocated_addtype(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addtype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.addtype_.IsDefault()) {
    _impl_.addtype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Odb.Lib.Protobuf.MatrixFile.LayerRecord.addType)
}

// uint32 id = 17;
inline void MatrixFile_LayerRecord::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0u;
}
inline ::uint32_t MatrixFile_LayerRecord::id() const {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.LayerRecord.id)
  return _internal_id();
}
inline void MatrixFile_LayerRecord::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Odb.Lib.Protobuf.MatrixFile.LayerRecord.id)
}
inline ::uint32_t MatrixFile_LayerRecord::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void MatrixFile_LayerRecord::_internal_set_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// MatrixFile

// repeated .Odb.Lib.Protobuf.MatrixFile.StepRecord steps = 1;
inline int MatrixFile::_internal_steps_size() const {
  return _internal_steps().size();
}
inline int MatrixFile::steps_size() const {
  return _internal_steps_size();
}
inline void MatrixFile::clear_steps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.steps_.Clear();
}
inline ::Odb::Lib::Protobuf::MatrixFile_StepRecord* MatrixFile::mutable_steps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.steps)
  return _internal_mutable_steps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>* MatrixFile::mutable_steps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.MatrixFile.steps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_steps();
}
inline const ::Odb::Lib::Protobuf::MatrixFile_StepRecord& MatrixFile::steps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.steps)
  return _internal_steps().Get(index);
}
inline ::Odb::Lib::Protobuf::MatrixFile_StepRecord* MatrixFile::add_steps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::MatrixFile_StepRecord* _add = _internal_mutable_steps()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.MatrixFile.steps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>& MatrixFile::steps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.MatrixFile.steps)
  return _internal_steps();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>&
MatrixFile::_internal_steps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.steps_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_StepRecord>*
MatrixFile::_internal_mutable_steps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.steps_;
}

// repeated .Odb.Lib.Protobuf.MatrixFile.LayerRecord layers = 2;
inline int MatrixFile::_internal_layers_size() const {
  return _internal_layers().size();
}
inline int MatrixFile::layers_size() const {
  return _internal_layers_size();
}
inline void MatrixFile::clear_layers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.layers_.Clear();
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord* MatrixFile::mutable_layers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Odb.Lib.Protobuf.MatrixFile.layers)
  return _internal_mutable_layers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>* MatrixFile::mutable_layers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Odb.Lib.Protobuf.MatrixFile.layers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_layers();
}
inline const ::Odb::Lib::Protobuf::MatrixFile_LayerRecord& MatrixFile::layers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Odb.Lib.Protobuf.MatrixFile.layers)
  return _internal_layers().Get(index);
}
inline ::Odb::Lib::Protobuf::MatrixFile_LayerRecord* MatrixFile::add_layers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::Odb::Lib::Protobuf::MatrixFile_LayerRecord* _add = _internal_mutable_layers()->Add();
  // @@protoc_insertion_point(field_add:Odb.Lib.Protobuf.MatrixFile.layers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>& MatrixFile::layers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Odb.Lib.Protobuf.MatrixFile.layers)
  return _internal_layers();
}
inline const ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>&
MatrixFile::_internal_layers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.layers_;
}
inline ::google::protobuf::RepeatedPtrField<::Odb::Lib::Protobuf::MatrixFile_LayerRecord>*
MatrixFile::_internal_mutable_layers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.layers_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
}  // namespace Lib
}  // namespace Odb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type>() {
  return ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Type_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context>() {
  return ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Context_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType>() {
  return ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_DielectricType_descriptor();
}
template <>
struct is_proto_enum<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form>() {
  return ::Odb::Lib::Protobuf::MatrixFile_LayerRecord_Form_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // matrixfile_2eproto_2epb_2eh
