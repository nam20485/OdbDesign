name: Docker Scout Scan

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "nam20485" ]
  pull_request:
    branches: [ "development", "main", "release", "nam20485" ]
   
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}  
  #VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  # Use `latest` as the tag to compare to if empty, assuming that it's already pushed
  COMPARE_TAG: latest
  DOCKERFILE: Dockerfile

permissions:
  contents: read

jobs:
  build:
    name: Docker-Scout-Scan

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      pull-requests: write
      security-events: write

    # don't run on PRs into development from branches that aren't nam20485 (i.e. dependabot PRs)
    if: github.event_name != 'pull_request' || github.base_ref != 'development' || github.head_ref == 'nam20485'

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      # add problem matchers
      - name: Add Problem Matchers
        uses: ammaraskar/gcc-problem-matcher@0f9c86f9e693db67dacf53986e1674de5f2e5f28 # master

    #   # Install the cosign tool except on PR
    #   # https://github.com/sigstore/cosign-installer
    #   - name: Install cosign
    #     if: github.event_name != 'pull_request'
    #     uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
    #     with:
    #       cosign-release: 'v1.13.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb

      # Login against Docker Hub to allow running Docker Scout
      # https://github.com/docker/login-action
      - name: Log into Docker Hub registry        
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:          
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch,suffix=-${{github.run_number}}              

      # Build Docker image with Buildx (don't push)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@af5a7ed5ba88268d5278f7203fb52cd833f66d6e
        with:
          context: .          
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ env.DOCKERFILE }}
          load: true          
          build-args: |
            OWNER=nam20485
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            VCPKG_BINARY_SOURCES=clear;nuget,GitHub,readwrite

      # - name: List Local Images
      #   run: docker image ls

    #   # Sign the resulting Docker image digest except on PRs.
    #   # This will only write to the public Rekor transparency log when the Docker
    #   # repository is public to avoid leaking data.  If you would like to publish
    #   # transparency data even for private images, pass --force to cosign below.
    #   # https://github.com/sigstore/cosign
    #   - name: Sign the published Docker image
    #     if: ${{ github.event_name != 'pull_request' }}
    #     env:
    #       COSIGN_EXPERIMENTAL: "true"
    #     # This step uses the identity token to provision an ephemeral certificate
    #     # against the sigstore community Fulcio instance.
    #     run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}

      - name: Analyze for critical and high CVEs
        id: docker-scout-cves       
        # if: ${{ github.event_name != 'pull_request_target' }} 
        uses: docker/scout-action@b3dd3d6c420903eb3ff2812ac1b1d146ffb93a41 # v1.5.1
        with:
          command: cves,recommendations
          image: ${{ steps.meta.outputs.tags }}
          sarif-file: sarif.output.json
          summary: true
          keep-previous-comments: true
        
      - name: Upload SARIF result
        id: upload-sarif
        uses: github/codeql-action/upload-sarif@c7f9125735019aa87cfc361530512d50ea439c71 # v3.25.1
        with:
          sarif_file: sarif.output.json
      
      - name: Docker Scout Compare to Latest
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@b3dd3d6c420903eb3ff2812ac1b1d146ffb93a41 # v1.5.1
        with:
          command: compare
          image: ${{ steps.meta.outputs.tags }}
          to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.base_ref }}-${{ env.COMPARE_TAG }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }} # to be able to write the comment
 