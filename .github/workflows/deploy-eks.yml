# This workflow will restart the deployment to affect a deployment of a new image in the EKS cluster

name: Deploy to Amazon EKS

on:
  #push:
  #  branches: [ "release" ]
  repository_dispatch:
    types: [ "trigger_deploy_release_event" ]

env:
  AWS_REGION: us-west-2                   # set this to your preferred AWS region, e.g. us-west-1

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: production

    steps:

    - name: Check Dispatch ID
      run: |
        if [[ "${{ github.event.client_payload.dispatch_id }}" == "${{ secrets.DISPATCH_ID }}" ]]; then
          echo "Dispatch ID is correct"
        else
          echo "Dispatch ID is not correct"
          exit 1
        fi

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        aws --version

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}  

    - name: Configure kubectl via Secret Env
      run: | 
        echo ${{ secrets.KUBECONFIG }} > ${{ github.workspace }}/kubeconfig
        export KUBECONFIG=${{ github.workspace }}/kubeconfig
        echo $KUBECONFIG
        cat $KUBECONFIG
        kubectl config view
        kubectl config get-contexts
        kubectl config use-context eks-uswest2-cluster
        kubectl version   
    
    - name: Deploy to EKS
      shell: pwsh
      run: ${{ github.workspace }}/scripts/deploy.ps1
         
        


